package com.parzivail.pswm.world.gen.asteroid;

import net.minecraft.world.World;

import static com.parzivail.util.world.WorldUtils.b;
import static net.minecraft.init.Blocks.air;
import static net.minecraft.init.Blocks.stone;

/*
 * Generated by SchematicExporter
 * 5/31/2016 3:57:16 PM
 */
//@formatter:off
public class WorldGenAsteroid3_x0_z0
{
	public static void generate(World w, int i, int j, int k)
	{
		b(w, i, j, k, air, 0);
		b(w, i, j, k + 1, air, 0);
		b(w, i, j, k + 2, air, 0);
		b(w, i, j, k + 3, air, 0);
		b(w, i, j, k + 4, air, 0);
		b(w, i, j, k + 5, air, 0);
		b(w, i, j, k + 6, air, 0);
		b(w, i, j, k + 7, air, 0);
		b(w, i, j, k + 8, air, 0);
		b(w, i, j, k + 9, air, 0);
		b(w, i, j, k + 10, air, 0);
		b(w, i, j, k + 11, air, 0);
		b(w, i, j, k + 12, air, 0);
		b(w, i, j, k + 13, air, 0);
		b(w, i, j, k + 14, air, 0);
		b(w, i, j, k + 15, air, 0);
		b(w, i, j + 1, k, air, 0);
		b(w, i, j + 1, k + 1, air, 0);
		b(w, i, j + 1, k + 2, air, 0);
		b(w, i, j + 1, k + 3, air, 0);
		b(w, i, j + 1, k + 4, air, 0);
		b(w, i, j + 1, k + 5, air, 0);
		b(w, i, j + 1, k + 6, air, 0);
		b(w, i, j + 1, k + 7, air, 0);
		b(w, i, j + 1, k + 8, air, 0);
		b(w, i, j + 1, k + 9, air, 0);
		b(w, i, j + 1, k + 10, air, 0);
		b(w, i, j + 1, k + 11, air, 0);
		b(w, i, j + 1, k + 12, air, 0);
		b(w, i, j + 1, k + 13, air, 0);
		b(w, i, j + 1, k + 14, air, 0);
		b(w, i, j + 1, k + 15, air, 0);
		b(w, i, j + 2, k, air, 0);
		b(w, i, j + 2, k + 1, air, 0);
		b(w, i, j + 2, k + 2, air, 0);
		b(w, i, j + 2, k + 3, air, 0);
		b(w, i, j + 2, k + 4, air, 0);
		b(w, i, j + 2, k + 5, air, 0);
		b(w, i, j + 2, k + 6, air, 0);
		b(w, i, j + 2, k + 7, air, 0);
		b(w, i, j + 2, k + 8, air, 0);
		b(w, i, j + 2, k + 9, air, 0);
		b(w, i, j + 2, k + 10, air, 0);
		b(w, i, j + 2, k + 11, air, 0);
		b(w, i, j + 2, k + 12, air, 0);
		b(w, i, j + 2, k + 13, air, 0);
		b(w, i, j + 2, k + 14, air, 0);
		b(w, i, j + 2, k + 15, air, 0);
		b(w, i, j + 3, k, air, 0);
		b(w, i, j + 3, k + 1, air, 0);
		b(w, i, j + 3, k + 2, air, 0);
		b(w, i, j + 3, k + 3, air, 0);
		b(w, i, j + 3, k + 4, air, 0);
		b(w, i, j + 3, k + 5, air, 0);
		b(w, i, j + 3, k + 6, air, 0);
		b(w, i, j + 3, k + 7, air, 0);
		b(w, i, j + 3, k + 8, air, 0);
		b(w, i, j + 3, k + 9, air, 0);
		b(w, i, j + 3, k + 10, air, 0);
		b(w, i, j + 3, k + 11, air, 0);
		b(w, i, j + 3, k + 12, air, 0);
		b(w, i, j + 3, k + 13, air, 0);
		b(w, i, j + 3, k + 14, air, 0);
		b(w, i, j + 3, k + 15, air, 0);
		b(w, i, j + 4, k, air, 0);
		b(w, i, j + 4, k + 1, air, 0);
		b(w, i, j + 4, k + 2, air, 0);
		b(w, i, j + 4, k + 3, air, 0);
		b(w, i, j + 4, k + 4, air, 0);
		b(w, i, j + 4, k + 5, air, 0);
		b(w, i, j + 4, k + 6, air, 0);
		b(w, i, j + 4, k + 7, air, 0);
		b(w, i, j + 4, k + 8, air, 0);
		b(w, i, j + 4, k + 9, air, 0);
		b(w, i, j + 4, k + 10, air, 0);
		b(w, i, j + 4, k + 11, air, 0);
		b(w, i, j + 4, k + 12, air, 0);
		b(w, i, j + 4, k + 13, air, 0);
		b(w, i, j + 4, k + 14, air, 0);
		b(w, i, j + 4, k + 15, air, 0);
		b(w, i, j + 5, k, air, 0);
		b(w, i, j + 5, k + 1, air, 0);
		b(w, i, j + 5, k + 2, air, 0);
		b(w, i, j + 5, k + 3, air, 0);
		b(w, i, j + 5, k + 4, air, 0);
		b(w, i, j + 5, k + 5, air, 0);
		b(w, i, j + 5, k + 6, air, 0);
		b(w, i, j + 5, k + 7, air, 0);
		b(w, i, j + 5, k + 8, air, 0);
		b(w, i, j + 5, k + 9, air, 0);
		b(w, i, j + 5, k + 10, air, 0);
		b(w, i, j + 5, k + 11, air, 0);
		b(w, i, j + 5, k + 12, air, 0);
		b(w, i, j + 5, k + 13, air, 0);
		b(w, i, j + 5, k + 14, air, 0);
		b(w, i, j + 5, k + 15, air, 0);
		b(w, i, j + 6, k, air, 0);
		b(w, i, j + 6, k + 1, air, 0);
		b(w, i, j + 6, k + 2, air, 0);
		b(w, i, j + 6, k + 3, air, 0);
		b(w, i, j + 6, k + 4, air, 0);
		b(w, i, j + 6, k + 5, air, 0);
		b(w, i, j + 6, k + 6, air, 0);
		b(w, i, j + 6, k + 7, air, 0);
		b(w, i, j + 6, k + 8, air, 0);
		b(w, i, j + 6, k + 9, air, 0);
		b(w, i, j + 6, k + 10, air, 0);
		b(w, i, j + 6, k + 11, air, 0);
		b(w, i, j + 6, k + 12, air, 0);
		b(w, i, j + 6, k + 13, air, 0);
		b(w, i, j + 6, k + 14, air, 0);
		b(w, i, j + 6, k + 15, air, 0);
		b(w, i, j + 7, k, air, 0);
		b(w, i, j + 7, k + 1, air, 0);
		b(w, i, j + 7, k + 2, air, 0);
		b(w, i, j + 7, k + 3, air, 0);
		b(w, i, j + 7, k + 4, air, 0);
		b(w, i, j + 7, k + 5, air, 0);
		b(w, i, j + 7, k + 6, air, 0);
		b(w, i, j + 7, k + 7, stone, 0);
		b(w, i, j + 7, k + 8, stone, 0);
		b(w, i, j + 7, k + 9, stone, 0);
		b(w, i, j + 7, k + 10, stone, 0);
		b(w, i, j + 7, k + 11, air, 0);
		b(w, i, j + 7, k + 12, air, 0);
		b(w, i, j + 7, k + 13, air, 0);
		b(w, i, j + 7, k + 14, air, 0);
		b(w, i, j + 7, k + 15, air, 0);
		b(w, i, j + 8, k, air, 0);
		b(w, i, j + 8, k + 1, air, 0);
		b(w, i, j + 8, k + 2, air, 0);
		b(w, i, j + 8, k + 3, air, 0);
		b(w, i, j + 8, k + 4, air, 0);
		b(w, i, j + 8, k + 5, air, 0);
		b(w, i, j + 8, k + 6, air, 0);
		b(w, i, j + 8, k + 7, stone, 0);
		b(w, i, j + 8, k + 8, stone, 0);
		b(w, i, j + 8, k + 9, stone, 0);
		b(w, i, j + 8, k + 10, stone, 0);
		b(w, i, j + 8, k + 11, air, 0);
		b(w, i, j + 8, k + 12, air, 0);
		b(w, i, j + 8, k + 13, air, 0);
		b(w, i, j + 8, k + 14, air, 0);
		b(w, i, j + 8, k + 15, air, 0);
		b(w, i, j + 9, k, air, 0);
		b(w, i, j + 9, k + 1, air, 0);
		b(w, i, j + 9, k + 2, air, 0);
		b(w, i, j + 9, k + 3, air, 0);
		b(w, i, j + 9, k + 4, air, 0);
		b(w, i, j + 9, k + 5, air, 0);
		b(w, i, j + 9, k + 6, stone, 0);
		b(w, i, j + 9, k + 7, stone, 0);
		b(w, i, j + 9, k + 8, stone, 0);
		b(w, i, j + 9, k + 9, stone, 0);
		b(w, i, j + 9, k + 10, stone, 0);
		b(w, i, j + 9, k + 11, air, 0);
		b(w, i, j + 9, k + 12, air, 0);
		b(w, i, j + 9, k + 13, air, 0);
		b(w, i, j + 9, k + 14, air, 0);
		b(w, i, j + 9, k + 15, air, 0);
		b(w, i, j + 10, k, air, 0);
		b(w, i, j + 10, k + 1, air, 0);
		b(w, i, j + 10, k + 2, air, 0);
		b(w, i, j + 10, k + 3, air, 0);
		b(w, i, j + 10, k + 4, air, 0);
		b(w, i, j + 10, k + 5, air, 0);
		b(w, i, j + 10, k + 6, stone, 0);
		b(w, i, j + 10, k + 7, air, 0);
		b(w, i, j + 10, k + 8, air, 0);
		b(w, i, j + 10, k + 9, air, 0);
		b(w, i, j + 10, k + 10, air, 0);
		b(w, i, j + 10, k + 11, air, 0);
		b(w, i, j + 10, k + 12, air, 0);
		b(w, i, j + 10, k + 13, air, 0);
		b(w, i, j + 10, k + 14, air, 0);
		b(w, i, j + 10, k + 15, air, 0);
		b(w, i, j + 11, k, air, 0);
		b(w, i, j + 11, k + 1, air, 0);
		b(w, i, j + 11, k + 2, air, 0);
		b(w, i, j + 11, k + 3, air, 0);
		b(w, i, j + 11, k + 4, air, 0);
		b(w, i, j + 11, k + 5, air, 0);
		b(w, i, j + 11, k + 6, air, 0);
		b(w, i, j + 11, k + 7, air, 0);
		b(w, i, j + 11, k + 8, air, 0);
		b(w, i, j + 11, k + 9, air, 0);
		b(w, i, j + 11, k + 10, air, 0);
		b(w, i, j + 11, k + 11, air, 0);
		b(w, i, j + 11, k + 12, air, 0);
		b(w, i, j + 11, k + 13, air, 0);
		b(w, i, j + 11, k + 14, air, 0);
		b(w, i, j + 11, k + 15, air, 0);
		b(w, i, j + 12, k, air, 0);
		b(w, i, j + 12, k + 1, air, 0);
		b(w, i, j + 12, k + 2, air, 0);
		b(w, i, j + 12, k + 3, air, 0);
		b(w, i, j + 12, k + 4, air, 0);
		b(w, i, j + 12, k + 5, air, 0);
		b(w, i, j + 12, k + 6, air, 0);
		b(w, i, j + 12, k + 7, air, 0);
		b(w, i, j + 12, k + 8, air, 0);
		b(w, i, j + 12, k + 9, air, 0);
		b(w, i, j + 12, k + 10, air, 0);
		b(w, i, j + 12, k + 11, air, 0);
		b(w, i, j + 12, k + 12, air, 0);
		b(w, i, j + 12, k + 13, air, 0);
		b(w, i, j + 12, k + 14, air, 0);
		b(w, i, j + 12, k + 15, air, 0);
		b(w, i, j + 13, k, air, 0);
		b(w, i, j + 13, k + 1, air, 0);
		b(w, i, j + 13, k + 2, air, 0);
		b(w, i, j + 13, k + 3, air, 0);
		b(w, i, j + 13, k + 4, air, 0);
		b(w, i, j + 13, k + 5, air, 0);
		b(w, i, j + 13, k + 6, air, 0);
		b(w, i, j + 13, k + 7, air, 0);
		b(w, i, j + 13, k + 8, air, 0);
		b(w, i, j + 13, k + 9, air, 0);
		b(w, i, j + 13, k + 10, air, 0);
		b(w, i, j + 13, k + 11, air, 0);
		b(w, i, j + 13, k + 12, air, 0);
		b(w, i, j + 13, k + 13, air, 0);
		b(w, i, j + 13, k + 14, air, 0);
		b(w, i, j + 13, k + 15, air, 0);
		b(w, i, j + 14, k, air, 0);
		b(w, i, j + 14, k + 1, air, 0);
		b(w, i, j + 14, k + 2, air, 0);
		b(w, i, j + 14, k + 3, air, 0);
		b(w, i, j + 14, k + 4, air, 0);
		b(w, i, j + 14, k + 5, air, 0);
		b(w, i, j + 14, k + 6, air, 0);
		b(w, i, j + 14, k + 7, air, 0);
		b(w, i, j + 14, k + 8, air, 0);
		b(w, i, j + 14, k + 9, air, 0);
		b(w, i, j + 14, k + 10, air, 0);
		b(w, i, j + 14, k + 11, air, 0);
		b(w, i, j + 14, k + 12, air, 0);
		b(w, i, j + 14, k + 13, air, 0);
		b(w, i, j + 14, k + 14, air, 0);
		b(w, i, j + 14, k + 15, air, 0);
		b(w, i, j + 15, k, air, 0);
		b(w, i, j + 15, k + 1, air, 0);
		b(w, i, j + 15, k + 2, air, 0);
		b(w, i, j + 15, k + 3, air, 0);
		b(w, i, j + 15, k + 4, air, 0);
		b(w, i, j + 15, k + 5, air, 0);
		b(w, i, j + 15, k + 6, air, 0);
		b(w, i, j + 15, k + 7, air, 0);
		b(w, i, j + 15, k + 8, air, 0);
		b(w, i, j + 15, k + 9, air, 0);
		b(w, i, j + 15, k + 10, air, 0);
		b(w, i, j + 15, k + 11, air, 0);
		b(w, i, j + 15, k + 12, air, 0);
		b(w, i, j + 15, k + 13, air, 0);
		b(w, i, j + 15, k + 14, air, 0);
		b(w, i, j + 15, k + 15, air, 0);
		b(w, i, j + 16, k, air, 0);
		b(w, i, j + 16, k + 1, air, 0);
		b(w, i, j + 16, k + 2, air, 0);
		b(w, i, j + 16, k + 3, air, 0);
		b(w, i, j + 16, k + 4, air, 0);
		b(w, i, j + 16, k + 5, air, 0);
		b(w, i, j + 16, k + 6, air, 0);
		b(w, i, j + 16, k + 7, air, 0);
		b(w, i, j + 16, k + 8, air, 0);
		b(w, i, j + 16, k + 9, air, 0);
		b(w, i, j + 16, k + 10, air, 0);
		b(w, i, j + 16, k + 11, air, 0);
		b(w, i, j + 16, k + 12, air, 0);
		b(w, i, j + 16, k + 13, air, 0);
		b(w, i, j + 16, k + 14, air, 0);
		b(w, i, j + 16, k + 15, air, 0);
		b(w, i + 1, j, k, air, 0);
		b(w, i + 1, j, k + 1, air, 0);
		b(w, i + 1, j, k + 2, air, 0);
		b(w, i + 1, j, k + 3, air, 0);
		b(w, i + 1, j, k + 4, air, 0);
		b(w, i + 1, j, k + 5, air, 0);
		b(w, i + 1, j, k + 6, air, 0);
		b(w, i + 1, j, k + 7, air, 0);
		b(w, i + 1, j, k + 8, air, 0);
		b(w, i + 1, j, k + 9, air, 0);
		b(w, i + 1, j, k + 10, air, 0);
		b(w, i + 1, j, k + 11, air, 0);
		b(w, i + 1, j, k + 12, air, 0);
		b(w, i + 1, j, k + 13, air, 0);
		b(w, i + 1, j, k + 14, air, 0);
		b(w, i + 1, j, k + 15, air, 0);
		b(w, i + 1, j + 1, k, air, 0);
		b(w, i + 1, j + 1, k + 1, air, 0);
		b(w, i + 1, j + 1, k + 2, air, 0);
		b(w, i + 1, j + 1, k + 3, air, 0);
		b(w, i + 1, j + 1, k + 4, air, 0);
		b(w, i + 1, j + 1, k + 5, air, 0);
		b(w, i + 1, j + 1, k + 6, air, 0);
		b(w, i + 1, j + 1, k + 7, air, 0);
		b(w, i + 1, j + 1, k + 8, air, 0);
		b(w, i + 1, j + 1, k + 9, air, 0);
		b(w, i + 1, j + 1, k + 10, air, 0);
		b(w, i + 1, j + 1, k + 11, air, 0);
		b(w, i + 1, j + 1, k + 12, air, 0);
		b(w, i + 1, j + 1, k + 13, air, 0);
		b(w, i + 1, j + 1, k + 14, air, 0);
		b(w, i + 1, j + 1, k + 15, air, 0);
		b(w, i + 1, j + 2, k, air, 0);
		b(w, i + 1, j + 2, k + 1, air, 0);
		b(w, i + 1, j + 2, k + 2, air, 0);
		b(w, i + 1, j + 2, k + 3, air, 0);
		b(w, i + 1, j + 2, k + 4, air, 0);
		b(w, i + 1, j + 2, k + 5, air, 0);
		b(w, i + 1, j + 2, k + 6, air, 0);
		b(w, i + 1, j + 2, k + 7, air, 0);
		b(w, i + 1, j + 2, k + 8, air, 0);
		b(w, i + 1, j + 2, k + 9, air, 0);
		b(w, i + 1, j + 2, k + 10, air, 0);
		b(w, i + 1, j + 2, k + 11, air, 0);
		b(w, i + 1, j + 2, k + 12, air, 0);
		b(w, i + 1, j + 2, k + 13, air, 0);
		b(w, i + 1, j + 2, k + 14, air, 0);
		b(w, i + 1, j + 2, k + 15, air, 0);
		b(w, i + 1, j + 3, k, air, 0);
		b(w, i + 1, j + 3, k + 1, air, 0);
		b(w, i + 1, j + 3, k + 2, air, 0);
		b(w, i + 1, j + 3, k + 3, air, 0);
		b(w, i + 1, j + 3, k + 4, air, 0);
		b(w, i + 1, j + 3, k + 5, air, 0);
		b(w, i + 1, j + 3, k + 6, air, 0);
		b(w, i + 1, j + 3, k + 7, air, 0);
		b(w, i + 1, j + 3, k + 8, air, 0);
		b(w, i + 1, j + 3, k + 9, air, 0);
		b(w, i + 1, j + 3, k + 10, air, 0);
		b(w, i + 1, j + 3, k + 11, air, 0);
		b(w, i + 1, j + 3, k + 12, air, 0);
		b(w, i + 1, j + 3, k + 13, air, 0);
		b(w, i + 1, j + 3, k + 14, air, 0);
		b(w, i + 1, j + 3, k + 15, air, 0);
		b(w, i + 1, j + 4, k, air, 0);
		b(w, i + 1, j + 4, k + 1, air, 0);
		b(w, i + 1, j + 4, k + 2, air, 0);
		b(w, i + 1, j + 4, k + 3, air, 0);
		b(w, i + 1, j + 4, k + 4, air, 0);
		b(w, i + 1, j + 4, k + 5, air, 0);
		b(w, i + 1, j + 4, k + 6, air, 0);
		b(w, i + 1, j + 4, k + 7, air, 0);
		b(w, i + 1, j + 4, k + 8, air, 0);
		b(w, i + 1, j + 4, k + 9, air, 0);
		b(w, i + 1, j + 4, k + 10, stone, 0);
		b(w, i + 1, j + 4, k + 11, air, 0);
		b(w, i + 1, j + 4, k + 12, air, 0);
		b(w, i + 1, j + 4, k + 13, air, 0);
		b(w, i + 1, j + 4, k + 14, air, 0);
		b(w, i + 1, j + 4, k + 15, air, 0);
		b(w, i + 1, j + 5, k, air, 0);
		b(w, i + 1, j + 5, k + 1, air, 0);
		b(w, i + 1, j + 5, k + 2, air, 0);
		b(w, i + 1, j + 5, k + 3, air, 0);
		b(w, i + 1, j + 5, k + 4, air, 0);
		b(w, i + 1, j + 5, k + 5, air, 0);
		b(w, i + 1, j + 5, k + 6, air, 0);
		b(w, i + 1, j + 5, k + 7, stone, 0);
		b(w, i + 1, j + 5, k + 8, stone, 0);
		b(w, i + 1, j + 5, k + 9, stone, 0);
		b(w, i + 1, j + 5, k + 10, stone, 0);
		b(w, i + 1, j + 5, k + 11, stone, 0);
		b(w, i + 1, j + 5, k + 12, air, 0);
		b(w, i + 1, j + 5, k + 13, air, 0);
		b(w, i + 1, j + 5, k + 14, air, 0);
		b(w, i + 1, j + 5, k + 15, air, 0);
		b(w, i + 1, j + 6, k, air, 0);
		b(w, i + 1, j + 6, k + 1, air, 0);
		b(w, i + 1, j + 6, k + 2, air, 0);
		b(w, i + 1, j + 6, k + 3, air, 0);
		b(w, i + 1, j + 6, k + 4, air, 0);
		b(w, i + 1, j + 6, k + 5, air, 0);
		b(w, i + 1, j + 6, k + 6, stone, 0);
		b(w, i + 1, j + 6, k + 7, stone, 0);
		b(w, i + 1, j + 6, k + 8, stone, 0);
		b(w, i + 1, j + 6, k + 9, stone, 0);
		b(w, i + 1, j + 6, k + 10, stone, 0);
		b(w, i + 1, j + 6, k + 11, stone, 0);
		b(w, i + 1, j + 6, k + 12, stone, 0);
		b(w, i + 1, j + 6, k + 13, air, 0);
		b(w, i + 1, j + 6, k + 14, air, 0);
		b(w, i + 1, j + 6, k + 15, air, 0);
		b(w, i + 1, j + 7, k, air, 0);
		b(w, i + 1, j + 7, k + 1, air, 0);
		b(w, i + 1, j + 7, k + 2, air, 0);
		b(w, i + 1, j + 7, k + 3, air, 0);
		b(w, i + 1, j + 7, k + 4, air, 0);
		b(w, i + 1, j + 7, k + 5, air, 0);
		b(w, i + 1, j + 7, k + 6, stone, 0);
		b(w, i + 1, j + 7, k + 7, stone, 0);
		b(w, i + 1, j + 7, k + 8, stone, 0);
		b(w, i + 1, j + 7, k + 9, stone, 0);
		b(w, i + 1, j + 7, k + 10, stone, 0);
		b(w, i + 1, j + 7, k + 11, stone, 0);
		b(w, i + 1, j + 7, k + 12, stone, 0);
		b(w, i + 1, j + 7, k + 13, air, 0);
		b(w, i + 1, j + 7, k + 14, air, 0);
		b(w, i + 1, j + 7, k + 15, air, 0);
		b(w, i + 1, j + 8, k, air, 0);
		b(w, i + 1, j + 8, k + 1, air, 0);
		b(w, i + 1, j + 8, k + 2, air, 0);
		b(w, i + 1, j + 8, k + 3, air, 0);
		b(w, i + 1, j + 8, k + 4, stone, 0);
		b(w, i + 1, j + 8, k + 5, stone, 0);
		b(w, i + 1, j + 8, k + 6, stone, 0);
		b(w, i + 1, j + 8, k + 7, stone, 0);
		b(w, i + 1, j + 8, k + 8, stone, 0);
		b(w, i + 1, j + 8, k + 9, stone, 0);
		b(w, i + 1, j + 8, k + 10, stone, 0);
		b(w, i + 1, j + 8, k + 11, stone, 0);
		b(w, i + 1, j + 8, k + 12, stone, 0);
		b(w, i + 1, j + 8, k + 13, air, 0);
		b(w, i + 1, j + 8, k + 14, air, 0);
		b(w, i + 1, j + 8, k + 15, air, 0);
		b(w, i + 1, j + 9, k, air, 0);
		b(w, i + 1, j + 9, k + 1, air, 0);
		b(w, i + 1, j + 9, k + 2, air, 0);
		b(w, i + 1, j + 9, k + 3, air, 0);
		b(w, i + 1, j + 9, k + 4, stone, 0);
		b(w, i + 1, j + 9, k + 5, stone, 0);
		b(w, i + 1, j + 9, k + 6, stone, 0);
		b(w, i + 1, j + 9, k + 7, stone, 0);
		b(w, i + 1, j + 9, k + 8, stone, 0);
		b(w, i + 1, j + 9, k + 9, stone, 0);
		b(w, i + 1, j + 9, k + 10, stone, 0);
		b(w, i + 1, j + 9, k + 11, stone, 0);
		b(w, i + 1, j + 9, k + 12, stone, 0);
		b(w, i + 1, j + 9, k + 13, air, 0);
		b(w, i + 1, j + 9, k + 14, air, 0);
		b(w, i + 1, j + 9, k + 15, air, 0);
		b(w, i + 1, j + 10, k, air, 0);
		b(w, i + 1, j + 10, k + 1, air, 0);
		b(w, i + 1, j + 10, k + 2, air, 0);
		b(w, i + 1, j + 10, k + 3, air, 0);
		b(w, i + 1, j + 10, k + 4, stone, 0);
		b(w, i + 1, j + 10, k + 5, stone, 0);
		b(w, i + 1, j + 10, k + 6, stone, 0);
		b(w, i + 1, j + 10, k + 7, stone, 0);
		b(w, i + 1, j + 10, k + 8, stone, 0);
		b(w, i + 1, j + 10, k + 9, stone, 0);
		b(w, i + 1, j + 10, k + 10, stone, 0);
		b(w, i + 1, j + 10, k + 11, stone, 0);
		b(w, i + 1, j + 10, k + 12, stone, 0);
		b(w, i + 1, j + 10, k + 13, air, 0);
		b(w, i + 1, j + 10, k + 14, air, 0);
		b(w, i + 1, j + 10, k + 15, air, 0);
		b(w, i + 1, j + 11, k, air, 0);
		b(w, i + 1, j + 11, k + 1, air, 0);
		b(w, i + 1, j + 11, k + 2, air, 0);
		b(w, i + 1, j + 11, k + 3, air, 0);
		b(w, i + 1, j + 11, k + 4, air, 0);
		b(w, i + 1, j + 11, k + 5, stone, 0);
		b(w, i + 1, j + 11, k + 6, stone, 0);
		b(w, i + 1, j + 11, k + 7, air, 0);
		b(w, i + 1, j + 11, k + 8, air, 0);
		b(w, i + 1, j + 11, k + 9, air, 0);
		b(w, i + 1, j + 11, k + 10, air, 0);
		b(w, i + 1, j + 11, k + 11, air, 0);
		b(w, i + 1, j + 11, k + 12, air, 0);
		b(w, i + 1, j + 11, k + 13, air, 0);
		b(w, i + 1, j + 11, k + 14, air, 0);
		b(w, i + 1, j + 11, k + 15, air, 0);
		b(w, i + 1, j + 12, k, air, 0);
		b(w, i + 1, j + 12, k + 1, air, 0);
		b(w, i + 1, j + 12, k + 2, air, 0);
		b(w, i + 1, j + 12, k + 3, air, 0);
		b(w, i + 1, j + 12, k + 4, air, 0);
		b(w, i + 1, j + 12, k + 5, air, 0);
		b(w, i + 1, j + 12, k + 6, air, 0);
		b(w, i + 1, j + 12, k + 7, air, 0);
		b(w, i + 1, j + 12, k + 8, air, 0);
		b(w, i + 1, j + 12, k + 9, air, 0);
		b(w, i + 1, j + 12, k + 10, air, 0);
		b(w, i + 1, j + 12, k + 11, air, 0);
		b(w, i + 1, j + 12, k + 12, air, 0);
		b(w, i + 1, j + 12, k + 13, air, 0);
		b(w, i + 1, j + 12, k + 14, air, 0);
		b(w, i + 1, j + 12, k + 15, air, 0);
		b(w, i + 1, j + 13, k, air, 0);
		b(w, i + 1, j + 13, k + 1, air, 0);
		b(w, i + 1, j + 13, k + 2, air, 0);
		b(w, i + 1, j + 13, k + 3, air, 0);
		b(w, i + 1, j + 13, k + 4, air, 0);
		b(w, i + 1, j + 13, k + 5, air, 0);
		b(w, i + 1, j + 13, k + 6, air, 0);
		b(w, i + 1, j + 13, k + 7, air, 0);
		b(w, i + 1, j + 13, k + 8, air, 0);
		b(w, i + 1, j + 13, k + 9, air, 0);
		b(w, i + 1, j + 13, k + 10, air, 0);
		b(w, i + 1, j + 13, k + 11, air, 0);
		b(w, i + 1, j + 13, k + 12, air, 0);
		b(w, i + 1, j + 13, k + 13, air, 0);
		b(w, i + 1, j + 13, k + 14, air, 0);
		b(w, i + 1, j + 13, k + 15, air, 0);
		b(w, i + 1, j + 14, k, air, 0);
		b(w, i + 1, j + 14, k + 1, air, 0);
		b(w, i + 1, j + 14, k + 2, air, 0);
		b(w, i + 1, j + 14, k + 3, air, 0);
		b(w, i + 1, j + 14, k + 4, air, 0);
		generate_1(w, i, j, k);
	}

	public static void generate_1(World w, int i, int j, int k)
	{
		b(w, i + 1, j + 14, k + 5, air, 0);
		b(w, i + 1, j + 14, k + 6, air, 0);
		b(w, i + 1, j + 14, k + 7, air, 0);
		b(w, i + 1, j + 14, k + 8, air, 0);
		b(w, i + 1, j + 14, k + 9, air, 0);
		b(w, i + 1, j + 14, k + 10, air, 0);
		b(w, i + 1, j + 14, k + 11, air, 0);
		b(w, i + 1, j + 14, k + 12, air, 0);
		b(w, i + 1, j + 14, k + 13, air, 0);
		b(w, i + 1, j + 14, k + 14, air, 0);
		b(w, i + 1, j + 14, k + 15, air, 0);
		b(w, i + 1, j + 15, k, air, 0);
		b(w, i + 1, j + 15, k + 1, air, 0);
		b(w, i + 1, j + 15, k + 2, air, 0);
		b(w, i + 1, j + 15, k + 3, air, 0);
		b(w, i + 1, j + 15, k + 4, air, 0);
		b(w, i + 1, j + 15, k + 5, air, 0);
		b(w, i + 1, j + 15, k + 6, air, 0);
		b(w, i + 1, j + 15, k + 7, air, 0);
		b(w, i + 1, j + 15, k + 8, air, 0);
		b(w, i + 1, j + 15, k + 9, air, 0);
		b(w, i + 1, j + 15, k + 10, air, 0);
		b(w, i + 1, j + 15, k + 11, air, 0);
		b(w, i + 1, j + 15, k + 12, air, 0);
		b(w, i + 1, j + 15, k + 13, air, 0);
		b(w, i + 1, j + 15, k + 14, air, 0);
		b(w, i + 1, j + 15, k + 15, air, 0);
		b(w, i + 1, j + 16, k, air, 0);
		b(w, i + 1, j + 16, k + 1, air, 0);
		b(w, i + 1, j + 16, k + 2, air, 0);
		b(w, i + 1, j + 16, k + 3, air, 0);
		b(w, i + 1, j + 16, k + 4, air, 0);
		b(w, i + 1, j + 16, k + 5, air, 0);
		b(w, i + 1, j + 16, k + 6, air, 0);
		b(w, i + 1, j + 16, k + 7, air, 0);
		b(w, i + 1, j + 16, k + 8, air, 0);
		b(w, i + 1, j + 16, k + 9, air, 0);
		b(w, i + 1, j + 16, k + 10, air, 0);
		b(w, i + 1, j + 16, k + 11, air, 0);
		b(w, i + 1, j + 16, k + 12, air, 0);
		b(w, i + 1, j + 16, k + 13, air, 0);
		b(w, i + 1, j + 16, k + 14, air, 0);
		b(w, i + 1, j + 16, k + 15, air, 0);
		b(w, i + 2, j, k, air, 0);
		b(w, i + 2, j, k + 1, air, 0);
		b(w, i + 2, j, k + 2, air, 0);
		b(w, i + 2, j, k + 3, air, 0);
		b(w, i + 2, j, k + 4, air, 0);
		b(w, i + 2, j, k + 5, air, 0);
		b(w, i + 2, j, k + 6, air, 0);
		b(w, i + 2, j, k + 7, air, 0);
		b(w, i + 2, j, k + 8, air, 0);
		b(w, i + 2, j, k + 9, air, 0);
		b(w, i + 2, j, k + 10, air, 0);
		b(w, i + 2, j, k + 11, air, 0);
		b(w, i + 2, j, k + 12, air, 0);
		b(w, i + 2, j, k + 13, air, 0);
		b(w, i + 2, j, k + 14, air, 0);
		b(w, i + 2, j, k + 15, air, 0);
		b(w, i + 2, j + 1, k, air, 0);
		b(w, i + 2, j + 1, k + 1, air, 0);
		b(w, i + 2, j + 1, k + 2, air, 0);
		b(w, i + 2, j + 1, k + 3, air, 0);
		b(w, i + 2, j + 1, k + 4, air, 0);
		b(w, i + 2, j + 1, k + 5, air, 0);
		b(w, i + 2, j + 1, k + 6, air, 0);
		b(w, i + 2, j + 1, k + 7, air, 0);
		b(w, i + 2, j + 1, k + 8, air, 0);
		b(w, i + 2, j + 1, k + 9, air, 0);
		b(w, i + 2, j + 1, k + 10, air, 0);
		b(w, i + 2, j + 1, k + 11, air, 0);
		b(w, i + 2, j + 1, k + 12, air, 0);
		b(w, i + 2, j + 1, k + 13, air, 0);
		b(w, i + 2, j + 1, k + 14, air, 0);
		b(w, i + 2, j + 1, k + 15, air, 0);
		b(w, i + 2, j + 2, k, air, 0);
		b(w, i + 2, j + 2, k + 1, air, 0);
		b(w, i + 2, j + 2, k + 2, air, 0);
		b(w, i + 2, j + 2, k + 3, air, 0);
		b(w, i + 2, j + 2, k + 4, air, 0);
		b(w, i + 2, j + 2, k + 5, air, 0);
		b(w, i + 2, j + 2, k + 6, air, 0);
		b(w, i + 2, j + 2, k + 7, air, 0);
		b(w, i + 2, j + 2, k + 8, air, 0);
		b(w, i + 2, j + 2, k + 9, air, 0);
		b(w, i + 2, j + 2, k + 10, air, 0);
		b(w, i + 2, j + 2, k + 11, air, 0);
		b(w, i + 2, j + 2, k + 12, air, 0);
		b(w, i + 2, j + 2, k + 13, air, 0);
		b(w, i + 2, j + 2, k + 14, air, 0);
		b(w, i + 2, j + 2, k + 15, air, 0);
		b(w, i + 2, j + 3, k, air, 0);
		b(w, i + 2, j + 3, k + 1, air, 0);
		b(w, i + 2, j + 3, k + 2, air, 0);
		b(w, i + 2, j + 3, k + 3, air, 0);
		b(w, i + 2, j + 3, k + 4, air, 0);
		b(w, i + 2, j + 3, k + 5, air, 0);
		b(w, i + 2, j + 3, k + 6, air, 0);
		b(w, i + 2, j + 3, k + 7, air, 0);
		b(w, i + 2, j + 3, k + 8, air, 0);
		b(w, i + 2, j + 3, k + 9, stone, 0);
		b(w, i + 2, j + 3, k + 10, air, 0);
		b(w, i + 2, j + 3, k + 11, air, 0);
		b(w, i + 2, j + 3, k + 12, air, 0);
		b(w, i + 2, j + 3, k + 13, air, 0);
		b(w, i + 2, j + 3, k + 14, air, 0);
		b(w, i + 2, j + 3, k + 15, air, 0);
		b(w, i + 2, j + 4, k, air, 0);
		b(w, i + 2, j + 4, k + 1, air, 0);
		b(w, i + 2, j + 4, k + 2, air, 0);
		b(w, i + 2, j + 4, k + 3, air, 0);
		b(w, i + 2, j + 4, k + 4, air, 0);
		b(w, i + 2, j + 4, k + 5, air, 0);
		b(w, i + 2, j + 4, k + 6, air, 0);
		b(w, i + 2, j + 4, k + 7, air, 0);
		b(w, i + 2, j + 4, k + 8, stone, 0);
		b(w, i + 2, j + 4, k + 9, stone, 0);
		b(w, i + 2, j + 4, k + 10, stone, 0);
		b(w, i + 2, j + 4, k + 11, stone, 0);
		b(w, i + 2, j + 4, k + 12, stone, 0);
		b(w, i + 2, j + 4, k + 13, air, 0);
		b(w, i + 2, j + 4, k + 14, air, 0);
		b(w, i + 2, j + 4, k + 15, air, 0);
		b(w, i + 2, j + 5, k, air, 0);
		b(w, i + 2, j + 5, k + 1, air, 0);
		b(w, i + 2, j + 5, k + 2, air, 0);
		b(w, i + 2, j + 5, k + 3, air, 0);
		b(w, i + 2, j + 5, k + 4, air, 0);
		b(w, i + 2, j + 5, k + 5, air, 0);
		b(w, i + 2, j + 5, k + 6, air, 0);
		b(w, i + 2, j + 5, k + 7, stone, 0);
		b(w, i + 2, j + 5, k + 8, stone, 0);
		b(w, i + 2, j + 5, k + 9, stone, 0);
		b(w, i + 2, j + 5, k + 10, stone, 0);
		b(w, i + 2, j + 5, k + 11, stone, 0);
		b(w, i + 2, j + 5, k + 12, stone, 0);
		b(w, i + 2, j + 5, k + 13, stone, 0);
		b(w, i + 2, j + 5, k + 14, air, 0);
		b(w, i + 2, j + 5, k + 15, air, 0);
		b(w, i + 2, j + 6, k, air, 0);
		b(w, i + 2, j + 6, k + 1, air, 0);
		b(w, i + 2, j + 6, k + 2, air, 0);
		b(w, i + 2, j + 6, k + 3, air, 0);
		b(w, i + 2, j + 6, k + 4, air, 0);
		b(w, i + 2, j + 6, k + 5, stone, 0);
		b(w, i + 2, j + 6, k + 6, stone, 0);
		b(w, i + 2, j + 6, k + 7, stone, 0);
		b(w, i + 2, j + 6, k + 8, stone, 0);
		b(w, i + 2, j + 6, k + 9, stone, 0);
		b(w, i + 2, j + 6, k + 10, stone, 0);
		b(w, i + 2, j + 6, k + 11, stone, 0);
		b(w, i + 2, j + 6, k + 12, stone, 0);
		b(w, i + 2, j + 6, k + 13, stone, 0);
		b(w, i + 2, j + 6, k + 14, air, 0);
		b(w, i + 2, j + 6, k + 15, air, 0);
		b(w, i + 2, j + 7, k, air, 0);
		b(w, i + 2, j + 7, k + 1, air, 0);
		b(w, i + 2, j + 7, k + 2, air, 0);
		b(w, i + 2, j + 7, k + 3, stone, 0);
		b(w, i + 2, j + 7, k + 4, stone, 0);
		b(w, i + 2, j + 7, k + 5, stone, 0);
		b(w, i + 2, j + 7, k + 6, stone, 0);
		b(w, i + 2, j + 7, k + 7, stone, 0);
		b(w, i + 2, j + 7, k + 8, stone, 0);
		b(w, i + 2, j + 7, k + 9, stone, 0);
		b(w, i + 2, j + 7, k + 10, stone, 0);
		b(w, i + 2, j + 7, k + 11, stone, 0);
		b(w, i + 2, j + 7, k + 12, stone, 0);
		b(w, i + 2, j + 7, k + 13, stone, 0);
		b(w, i + 2, j + 7, k + 14, air, 0);
		b(w, i + 2, j + 7, k + 15, air, 0);
		b(w, i + 2, j + 8, k, air, 0);
		b(w, i + 2, j + 8, k + 1, air, 0);
		b(w, i + 2, j + 8, k + 2, air, 0);
		b(w, i + 2, j + 8, k + 3, stone, 0);
		b(w, i + 2, j + 8, k + 4, stone, 0);
		b(w, i + 2, j + 8, k + 5, stone, 0);
		b(w, i + 2, j + 8, k + 6, stone, 0);
		b(w, i + 2, j + 8, k + 7, stone, 0);
		b(w, i + 2, j + 8, k + 8, stone, 0);
		b(w, i + 2, j + 8, k + 9, stone, 0);
		b(w, i + 2, j + 8, k + 10, stone, 0);
		b(w, i + 2, j + 8, k + 11, stone, 0);
		b(w, i + 2, j + 8, k + 12, stone, 0);
		b(w, i + 2, j + 8, k + 13, stone, 0);
		b(w, i + 2, j + 8, k + 14, stone, 0);
		b(w, i + 2, j + 8, k + 15, air, 0);
		b(w, i + 2, j + 9, k, air, 0);
		b(w, i + 2, j + 9, k + 1, air, 0);
		b(w, i + 2, j + 9, k + 2, air, 0);
		b(w, i + 2, j + 9, k + 3, air, 0);
		b(w, i + 2, j + 9, k + 4, stone, 0);
		b(w, i + 2, j + 9, k + 5, stone, 0);
		b(w, i + 2, j + 9, k + 6, stone, 0);
		b(w, i + 2, j + 9, k + 7, stone, 0);
		b(w, i + 2, j + 9, k + 8, stone, 0);
		b(w, i + 2, j + 9, k + 9, stone, 0);
		b(w, i + 2, j + 9, k + 10, stone, 0);
		b(w, i + 2, j + 9, k + 11, stone, 0);
		b(w, i + 2, j + 9, k + 12, stone, 0);
		b(w, i + 2, j + 9, k + 13, stone, 0);
		b(w, i + 2, j + 9, k + 14, air, 0);
		b(w, i + 2, j + 9, k + 15, air, 0);
		b(w, i + 2, j + 10, k, air, 0);
		b(w, i + 2, j + 10, k + 1, air, 0);
		b(w, i + 2, j + 10, k + 2, air, 0);
		b(w, i + 2, j + 10, k + 3, stone, 0);
		b(w, i + 2, j + 10, k + 4, stone, 0);
		b(w, i + 2, j + 10, k + 5, stone, 0);
		b(w, i + 2, j + 10, k + 6, stone, 0);
		b(w, i + 2, j + 10, k + 7, stone, 0);
		b(w, i + 2, j + 10, k + 8, stone, 0);
		b(w, i + 2, j + 10, k + 9, stone, 0);
		b(w, i + 2, j + 10, k + 10, stone, 0);
		b(w, i + 2, j + 10, k + 11, stone, 0);
		b(w, i + 2, j + 10, k + 12, stone, 0);
		b(w, i + 2, j + 10, k + 13, stone, 0);
		b(w, i + 2, j + 10, k + 14, air, 0);
		b(w, i + 2, j + 10, k + 15, air, 0);
		b(w, i + 2, j + 11, k, air, 0);
		b(w, i + 2, j + 11, k + 1, air, 0);
		b(w, i + 2, j + 11, k + 2, air, 0);
		b(w, i + 2, j + 11, k + 3, stone, 0);
		b(w, i + 2, j + 11, k + 4, stone, 0);
		b(w, i + 2, j + 11, k + 5, stone, 0);
		b(w, i + 2, j + 11, k + 6, stone, 0);
		b(w, i + 2, j + 11, k + 7, stone, 0);
		b(w, i + 2, j + 11, k + 8, air, 0);
		b(w, i + 2, j + 11, k + 9, air, 0);
		b(w, i + 2, j + 11, k + 10, air, 0);
		b(w, i + 2, j + 11, k + 11, air, 0);
		b(w, i + 2, j + 11, k + 12, air, 0);
		b(w, i + 2, j + 11, k + 13, air, 0);
		b(w, i + 2, j + 11, k + 14, air, 0);
		b(w, i + 2, j + 11, k + 15, air, 0);
		b(w, i + 2, j + 12, k, air, 0);
		b(w, i + 2, j + 12, k + 1, air, 0);
		b(w, i + 2, j + 12, k + 2, air, 0);
		b(w, i + 2, j + 12, k + 3, air, 0);
		b(w, i + 2, j + 12, k + 4, air, 0);
		b(w, i + 2, j + 12, k + 5, air, 0);
		b(w, i + 2, j + 12, k + 6, air, 0);
		b(w, i + 2, j + 12, k + 7, air, 0);
		b(w, i + 2, j + 12, k + 8, air, 0);
		b(w, i + 2, j + 12, k + 9, air, 0);
		b(w, i + 2, j + 12, k + 10, air, 0);
		b(w, i + 2, j + 12, k + 11, air, 0);
		b(w, i + 2, j + 12, k + 12, air, 0);
		b(w, i + 2, j + 12, k + 13, air, 0);
		b(w, i + 2, j + 12, k + 14, air, 0);
		b(w, i + 2, j + 12, k + 15, air, 0);
		b(w, i + 2, j + 13, k, air, 0);
		b(w, i + 2, j + 13, k + 1, air, 0);
		b(w, i + 2, j + 13, k + 2, air, 0);
		b(w, i + 2, j + 13, k + 3, air, 0);
		b(w, i + 2, j + 13, k + 4, air, 0);
		b(w, i + 2, j + 13, k + 5, air, 0);
		b(w, i + 2, j + 13, k + 6, air, 0);
		b(w, i + 2, j + 13, k + 7, air, 0);
		b(w, i + 2, j + 13, k + 8, air, 0);
		b(w, i + 2, j + 13, k + 9, air, 0);
		b(w, i + 2, j + 13, k + 10, air, 0);
		b(w, i + 2, j + 13, k + 11, air, 0);
		b(w, i + 2, j + 13, k + 12, air, 0);
		b(w, i + 2, j + 13, k + 13, air, 0);
		b(w, i + 2, j + 13, k + 14, air, 0);
		b(w, i + 2, j + 13, k + 15, air, 0);
		b(w, i + 2, j + 14, k, air, 0);
		b(w, i + 2, j + 14, k + 1, air, 0);
		b(w, i + 2, j + 14, k + 2, air, 0);
		b(w, i + 2, j + 14, k + 3, air, 0);
		b(w, i + 2, j + 14, k + 4, air, 0);
		b(w, i + 2, j + 14, k + 5, air, 0);
		b(w, i + 2, j + 14, k + 6, air, 0);
		b(w, i + 2, j + 14, k + 7, air, 0);
		b(w, i + 2, j + 14, k + 8, air, 0);
		b(w, i + 2, j + 14, k + 9, air, 0);
		b(w, i + 2, j + 14, k + 10, air, 0);
		b(w, i + 2, j + 14, k + 11, air, 0);
		b(w, i + 2, j + 14, k + 12, air, 0);
		b(w, i + 2, j + 14, k + 13, air, 0);
		b(w, i + 2, j + 14, k + 14, air, 0);
		b(w, i + 2, j + 14, k + 15, air, 0);
		b(w, i + 2, j + 15, k, air, 0);
		b(w, i + 2, j + 15, k + 1, air, 0);
		b(w, i + 2, j + 15, k + 2, air, 0);
		b(w, i + 2, j + 15, k + 3, air, 0);
		b(w, i + 2, j + 15, k + 4, air, 0);
		b(w, i + 2, j + 15, k + 5, air, 0);
		b(w, i + 2, j + 15, k + 6, air, 0);
		b(w, i + 2, j + 15, k + 7, air, 0);
		b(w, i + 2, j + 15, k + 8, air, 0);
		b(w, i + 2, j + 15, k + 9, air, 0);
		b(w, i + 2, j + 15, k + 10, air, 0);
		b(w, i + 2, j + 15, k + 11, air, 0);
		b(w, i + 2, j + 15, k + 12, air, 0);
		b(w, i + 2, j + 15, k + 13, air, 0);
		b(w, i + 2, j + 15, k + 14, air, 0);
		b(w, i + 2, j + 15, k + 15, air, 0);
		b(w, i + 2, j + 16, k, air, 0);
		b(w, i + 2, j + 16, k + 1, air, 0);
		b(w, i + 2, j + 16, k + 2, air, 0);
		b(w, i + 2, j + 16, k + 3, air, 0);
		b(w, i + 2, j + 16, k + 4, air, 0);
		b(w, i + 2, j + 16, k + 5, air, 0);
		b(w, i + 2, j + 16, k + 6, air, 0);
		b(w, i + 2, j + 16, k + 7, air, 0);
		b(w, i + 2, j + 16, k + 8, air, 0);
		b(w, i + 2, j + 16, k + 9, air, 0);
		b(w, i + 2, j + 16, k + 10, air, 0);
		b(w, i + 2, j + 16, k + 11, air, 0);
		b(w, i + 2, j + 16, k + 12, air, 0);
		b(w, i + 2, j + 16, k + 13, air, 0);
		b(w, i + 2, j + 16, k + 14, air, 0);
		b(w, i + 2, j + 16, k + 15, air, 0);
		b(w, i + 3, j, k, air, 0);
		b(w, i + 3, j, k + 1, air, 0);
		b(w, i + 3, j, k + 2, air, 0);
		b(w, i + 3, j, k + 3, air, 0);
		b(w, i + 3, j, k + 4, air, 0);
		b(w, i + 3, j, k + 5, air, 0);
		b(w, i + 3, j, k + 6, air, 0);
		b(w, i + 3, j, k + 7, air, 0);
		b(w, i + 3, j, k + 8, air, 0);
		b(w, i + 3, j, k + 9, air, 0);
		b(w, i + 3, j, k + 10, air, 0);
		b(w, i + 3, j, k + 11, air, 0);
		b(w, i + 3, j, k + 12, air, 0);
		b(w, i + 3, j, k + 13, air, 0);
		b(w, i + 3, j, k + 14, air, 0);
		b(w, i + 3, j, k + 15, air, 0);
		b(w, i + 3, j + 1, k, air, 0);
		b(w, i + 3, j + 1, k + 1, air, 0);
		b(w, i + 3, j + 1, k + 2, air, 0);
		b(w, i + 3, j + 1, k + 3, air, 0);
		b(w, i + 3, j + 1, k + 4, air, 0);
		b(w, i + 3, j + 1, k + 5, air, 0);
		b(w, i + 3, j + 1, k + 6, air, 0);
		b(w, i + 3, j + 1, k + 7, air, 0);
		b(w, i + 3, j + 1, k + 8, air, 0);
		b(w, i + 3, j + 1, k + 9, air, 0);
		b(w, i + 3, j + 1, k + 10, air, 0);
		b(w, i + 3, j + 1, k + 11, air, 0);
		b(w, i + 3, j + 1, k + 12, air, 0);
		b(w, i + 3, j + 1, k + 13, air, 0);
		b(w, i + 3, j + 1, k + 14, air, 0);
		b(w, i + 3, j + 1, k + 15, air, 0);
		b(w, i + 3, j + 2, k, air, 0);
		b(w, i + 3, j + 2, k + 1, air, 0);
		b(w, i + 3, j + 2, k + 2, air, 0);
		b(w, i + 3, j + 2, k + 3, air, 0);
		b(w, i + 3, j + 2, k + 4, air, 0);
		b(w, i + 3, j + 2, k + 5, air, 0);
		b(w, i + 3, j + 2, k + 6, air, 0);
		b(w, i + 3, j + 2, k + 7, air, 0);
		b(w, i + 3, j + 2, k + 8, air, 0);
		b(w, i + 3, j + 2, k + 9, stone, 0);
		b(w, i + 3, j + 2, k + 10, stone, 0);
		b(w, i + 3, j + 2, k + 11, stone, 0);
		b(w, i + 3, j + 2, k + 12, air, 0);
		b(w, i + 3, j + 2, k + 13, air, 0);
		b(w, i + 3, j + 2, k + 14, air, 0);
		b(w, i + 3, j + 2, k + 15, air, 0);
		b(w, i + 3, j + 3, k, air, 0);
		b(w, i + 3, j + 3, k + 1, air, 0);
		b(w, i + 3, j + 3, k + 2, air, 0);
		b(w, i + 3, j + 3, k + 3, air, 0);
		b(w, i + 3, j + 3, k + 4, air, 0);
		b(w, i + 3, j + 3, k + 5, air, 0);
		b(w, i + 3, j + 3, k + 6, air, 0);
		b(w, i + 3, j + 3, k + 7, stone, 0);
		b(w, i + 3, j + 3, k + 8, air, 0);
		b(w, i + 3, j + 3, k + 9, stone, 0);
		b(w, i + 3, j + 3, k + 10, stone, 0);
		b(w, i + 3, j + 3, k + 11, stone, 0);
		b(w, i + 3, j + 3, k + 12, stone, 0);
		b(w, i + 3, j + 3, k + 13, air, 0);
		b(w, i + 3, j + 3, k + 14, air, 0);
		b(w, i + 3, j + 3, k + 15, air, 0);
		b(w, i + 3, j + 4, k, air, 0);
		b(w, i + 3, j + 4, k + 1, air, 0);
		b(w, i + 3, j + 4, k + 2, air, 0);
		b(w, i + 3, j + 4, k + 3, air, 0);
		b(w, i + 3, j + 4, k + 4, air, 0);
		b(w, i + 3, j + 4, k + 5, air, 0);
		b(w, i + 3, j + 4, k + 6, air, 0);
		b(w, i + 3, j + 4, k + 7, stone, 0);
		b(w, i + 3, j + 4, k + 8, stone, 0);
		b(w, i + 3, j + 4, k + 9, stone, 0);
		b(w, i + 3, j + 4, k + 10, stone, 0);
		b(w, i + 3, j + 4, k + 11, stone, 0);
		b(w, i + 3, j + 4, k + 12, stone, 0);
		b(w, i + 3, j + 4, k + 13, stone, 0);
		b(w, i + 3, j + 4, k + 14, air, 0);
		b(w, i + 3, j + 4, k + 15, air, 0);
		b(w, i + 3, j + 5, k, air, 0);
		b(w, i + 3, j + 5, k + 1, air, 0);
		b(w, i + 3, j + 5, k + 2, air, 0);
		b(w, i + 3, j + 5, k + 3, air, 0);
		b(w, i + 3, j + 5, k + 4, air, 0);
		b(w, i + 3, j + 5, k + 5, air, 0);
		b(w, i + 3, j + 5, k + 6, stone, 0);
		b(w, i + 3, j + 5, k + 7, stone, 0);
		b(w, i + 3, j + 5, k + 8, stone, 0);
		b(w, i + 3, j + 5, k + 9, stone, 0);
		b(w, i + 3, j + 5, k + 10, stone, 0);
		b(w, i + 3, j + 5, k + 11, stone, 0);
		b(w, i + 3, j + 5, k + 12, stone, 0);
		b(w, i + 3, j + 5, k + 13, stone, 0);
		b(w, i + 3, j + 5, k + 14, stone, 0);
		b(w, i + 3, j + 5, k + 15, air, 0);
		b(w, i + 3, j + 6, k, air, 0);
		b(w, i + 3, j + 6, k + 1, air, 0);
		b(w, i + 3, j + 6, k + 2, air, 0);
		b(w, i + 3, j + 6, k + 3, stone, 0);
		b(w, i + 3, j + 6, k + 4, stone, 0);
		b(w, i + 3, j + 6, k + 5, stone, 0);
		b(w, i + 3, j + 6, k + 6, stone, 0);
		b(w, i + 3, j + 6, k + 7, stone, 0);
		b(w, i + 3, j + 6, k + 8, stone, 0);
		b(w, i + 3, j + 6, k + 9, stone, 0);
		b(w, i + 3, j + 6, k + 10, stone, 0);
		b(w, i + 3, j + 6, k + 11, stone, 0);
		b(w, i + 3, j + 6, k + 12, stone, 0);
		b(w, i + 3, j + 6, k + 13, stone, 0);
		b(w, i + 3, j + 6, k + 14, stone, 0);
		b(w, i + 3, j + 6, k + 15, air, 0);
		b(w, i + 3, j + 7, k, air, 0);
		b(w, i + 3, j + 7, k + 1, air, 0);
		b(w, i + 3, j + 7, k + 2, air, 0);
		b(w, i + 3, j + 7, k + 3, stone, 0);
		b(w, i + 3, j + 7, k + 4, stone, 0);
		b(w, i + 3, j + 7, k + 5, stone, 0);
		b(w, i + 3, j + 7, k + 6, stone, 0);
		b(w, i + 3, j + 7, k + 7, stone, 0);
		b(w, i + 3, j + 7, k + 8, stone, 0);
		b(w, i + 3, j + 7, k + 9, stone, 0);
		b(w, i + 3, j + 7, k + 10, stone, 0);
		b(w, i + 3, j + 7, k + 11, stone, 0);
		b(w, i + 3, j + 7, k + 12, stone, 0);
		b(w, i + 3, j + 7, k + 13, stone, 0);
		b(w, i + 3, j + 7, k + 14, stone, 0);
		b(w, i + 3, j + 7, k + 15, air, 0);
		b(w, i + 3, j + 8, k, air, 0);
		b(w, i + 3, j + 8, k + 1, air, 0);
		b(w, i + 3, j + 8, k + 2, stone, 0);
		b(w, i + 3, j + 8, k + 3, stone, 0);
		b(w, i + 3, j + 8, k + 4, stone, 0);
		b(w, i + 3, j + 8, k + 5, stone, 0);
		b(w, i + 3, j + 8, k + 6, stone, 0);
		b(w, i + 3, j + 8, k + 7, stone, 0);
		b(w, i + 3, j + 8, k + 8, stone, 0);
		b(w, i + 3, j + 8, k + 9, stone, 0);
		b(w, i + 3, j + 8, k + 10, stone, 0);
		b(w, i + 3, j + 8, k + 11, stone, 0);
		b(w, i + 3, j + 8, k + 12, stone, 0);
		b(w, i + 3, j + 8, k + 13, stone, 0);
		b(w, i + 3, j + 8, k + 14, stone, 0);
		b(w, i + 3, j + 8, k + 15, air, 0);
		b(w, i + 3, j + 9, k, air, 0);
		b(w, i + 3, j + 9, k + 1, air, 0);
		b(w, i + 3, j + 9, k + 2, stone, 0);
		b(w, i + 3, j + 9, k + 3, stone, 0);
		b(w, i + 3, j + 9, k + 4, stone, 0);
		b(w, i + 3, j + 9, k + 5, stone, 0);
		b(w, i + 3, j + 9, k + 6, stone, 0);
		b(w, i + 3, j + 9, k + 7, stone, 0);
		b(w, i + 3, j + 9, k + 8, stone, 0);
		b(w, i + 3, j + 9, k + 9, stone, 0);
		b(w, i + 3, j + 9, k + 10, stone, 0);
		b(w, i + 3, j + 9, k + 11, stone, 0);
		b(w, i + 3, j + 9, k + 12, stone, 0);
		b(w, i + 3, j + 9, k + 13, stone, 0);
		b(w, i + 3, j + 9, k + 14, stone, 0);
		b(w, i + 3, j + 9, k + 15, air, 0);
		b(w, i + 3, j + 10, k, air, 0);
		b(w, i + 3, j + 10, k + 1, air, 0);
		b(w, i + 3, j + 10, k + 2, stone, 0);
		b(w, i + 3, j + 10, k + 3, stone, 0);
		b(w, i + 3, j + 10, k + 4, stone, 0);
		b(w, i + 3, j + 10, k + 5, stone, 0);
		b(w, i + 3, j + 10, k + 6, stone, 0);
		b(w, i + 3, j + 10, k + 7, stone, 0);
		b(w, i + 3, j + 10, k + 8, stone, 0);
		b(w, i + 3, j + 10, k + 9, stone, 0);
		b(w, i + 3, j + 10, k + 10, stone, 0);
		b(w, i + 3, j + 10, k + 11, stone, 0);
		b(w, i + 3, j + 10, k + 12, stone, 0);
		b(w, i + 3, j + 10, k + 13, stone, 0);
		b(w, i + 3, j + 10, k + 14, stone, 0);
		b(w, i + 3, j + 10, k + 15, air, 0);
		b(w, i + 3, j + 11, k, air, 0);
		b(w, i + 3, j + 11, k + 1, air, 0);
		b(w, i + 3, j + 11, k + 2, stone, 0);
		b(w, i + 3, j + 11, k + 3, stone, 0);
		b(w, i + 3, j + 11, k + 4, stone, 0);
		b(w, i + 3, j + 11, k + 5, stone, 0);
		b(w, i + 3, j + 11, k + 6, air, 0);
		b(w, i + 3, j + 11, k + 7, air, 0);
		b(w, i + 3, j + 11, k + 8, air, 0);
		b(w, i + 3, j + 11, k + 9, air, 0);
		generate_2(w, i, j, k);
	}

	public static void generate_2(World w, int i, int j, int k)
	{
		b(w, i + 3, j + 11, k + 10, air, 0);
		b(w, i + 3, j + 11, k + 11, air, 0);
		b(w, i + 3, j + 11, k + 12, air, 0);
		b(w, i + 3, j + 11, k + 13, stone, 0);
		b(w, i + 3, j + 11, k + 14, air, 0);
		b(w, i + 3, j + 11, k + 15, air, 0);
		b(w, i + 3, j + 12, k, air, 0);
		b(w, i + 3, j + 12, k + 1, air, 0);
		b(w, i + 3, j + 12, k + 2, air, 0);
		b(w, i + 3, j + 12, k + 3, stone, 0);
		b(w, i + 3, j + 12, k + 4, stone, 0);
		b(w, i + 3, j + 12, k + 5, stone, 0);
		b(w, i + 3, j + 12, k + 6, air, 0);
		b(w, i + 3, j + 12, k + 7, air, 0);
		b(w, i + 3, j + 12, k + 8, air, 0);
		b(w, i + 3, j + 12, k + 9, air, 0);
		b(w, i + 3, j + 12, k + 10, air, 0);
		b(w, i + 3, j + 12, k + 11, air, 0);
		b(w, i + 3, j + 12, k + 12, air, 0);
		b(w, i + 3, j + 12, k + 13, air, 0);
		b(w, i + 3, j + 12, k + 14, air, 0);
		b(w, i + 3, j + 12, k + 15, air, 0);
		b(w, i + 3, j + 13, k, air, 0);
		b(w, i + 3, j + 13, k + 1, air, 0);
		b(w, i + 3, j + 13, k + 2, air, 0);
		b(w, i + 3, j + 13, k + 3, air, 0);
		b(w, i + 3, j + 13, k + 4, air, 0);
		b(w, i + 3, j + 13, k + 5, air, 0);
		b(w, i + 3, j + 13, k + 6, air, 0);
		b(w, i + 3, j + 13, k + 7, air, 0);
		b(w, i + 3, j + 13, k + 8, air, 0);
		b(w, i + 3, j + 13, k + 9, air, 0);
		b(w, i + 3, j + 13, k + 10, air, 0);
		b(w, i + 3, j + 13, k + 11, air, 0);
		b(w, i + 3, j + 13, k + 12, air, 0);
		b(w, i + 3, j + 13, k + 13, air, 0);
		b(w, i + 3, j + 13, k + 14, air, 0);
		b(w, i + 3, j + 13, k + 15, air, 0);
		b(w, i + 3, j + 14, k, air, 0);
		b(w, i + 3, j + 14, k + 1, air, 0);
		b(w, i + 3, j + 14, k + 2, air, 0);
		b(w, i + 3, j + 14, k + 3, air, 0);
		b(w, i + 3, j + 14, k + 4, air, 0);
		b(w, i + 3, j + 14, k + 5, air, 0);
		b(w, i + 3, j + 14, k + 6, air, 0);
		b(w, i + 3, j + 14, k + 7, air, 0);
		b(w, i + 3, j + 14, k + 8, air, 0);
		b(w, i + 3, j + 14, k + 9, air, 0);
		b(w, i + 3, j + 14, k + 10, air, 0);
		b(w, i + 3, j + 14, k + 11, air, 0);
		b(w, i + 3, j + 14, k + 12, air, 0);
		b(w, i + 3, j + 14, k + 13, air, 0);
		b(w, i + 3, j + 14, k + 14, air, 0);
		b(w, i + 3, j + 14, k + 15, air, 0);
		b(w, i + 3, j + 15, k, air, 0);
		b(w, i + 3, j + 15, k + 1, air, 0);
		b(w, i + 3, j + 15, k + 2, air, 0);
		b(w, i + 3, j + 15, k + 3, air, 0);
		b(w, i + 3, j + 15, k + 4, air, 0);
		b(w, i + 3, j + 15, k + 5, air, 0);
		b(w, i + 3, j + 15, k + 6, air, 0);
		b(w, i + 3, j + 15, k + 7, air, 0);
		b(w, i + 3, j + 15, k + 8, air, 0);
		b(w, i + 3, j + 15, k + 9, air, 0);
		b(w, i + 3, j + 15, k + 10, air, 0);
		b(w, i + 3, j + 15, k + 11, air, 0);
		b(w, i + 3, j + 15, k + 12, air, 0);
		b(w, i + 3, j + 15, k + 13, air, 0);
		b(w, i + 3, j + 15, k + 14, air, 0);
		b(w, i + 3, j + 15, k + 15, air, 0);
		b(w, i + 3, j + 16, k, air, 0);
		b(w, i + 3, j + 16, k + 1, air, 0);
		b(w, i + 3, j + 16, k + 2, air, 0);
		b(w, i + 3, j + 16, k + 3, air, 0);
		b(w, i + 3, j + 16, k + 4, air, 0);
		b(w, i + 3, j + 16, k + 5, air, 0);
		b(w, i + 3, j + 16, k + 6, air, 0);
		b(w, i + 3, j + 16, k + 7, air, 0);
		b(w, i + 3, j + 16, k + 8, air, 0);
		b(w, i + 3, j + 16, k + 9, air, 0);
		b(w, i + 3, j + 16, k + 10, air, 0);
		b(w, i + 3, j + 16, k + 11, air, 0);
		b(w, i + 3, j + 16, k + 12, air, 0);
		b(w, i + 3, j + 16, k + 13, air, 0);
		b(w, i + 3, j + 16, k + 14, air, 0);
		b(w, i + 3, j + 16, k + 15, air, 0);
		b(w, i + 4, j, k, air, 0);
		b(w, i + 4, j, k + 1, air, 0);
		b(w, i + 4, j, k + 2, air, 0);
		b(w, i + 4, j, k + 3, air, 0);
		b(w, i + 4, j, k + 4, air, 0);
		b(w, i + 4, j, k + 5, air, 0);
		b(w, i + 4, j, k + 6, air, 0);
		b(w, i + 4, j, k + 7, air, 0);
		b(w, i + 4, j, k + 8, air, 0);
		b(w, i + 4, j, k + 9, air, 0);
		b(w, i + 4, j, k + 10, air, 0);
		b(w, i + 4, j, k + 11, air, 0);
		b(w, i + 4, j, k + 12, air, 0);
		b(w, i + 4, j, k + 13, air, 0);
		b(w, i + 4, j, k + 14, air, 0);
		b(w, i + 4, j, k + 15, air, 0);
		b(w, i + 4, j + 1, k, air, 0);
		b(w, i + 4, j + 1, k + 1, air, 0);
		b(w, i + 4, j + 1, k + 2, air, 0);
		b(w, i + 4, j + 1, k + 3, air, 0);
		b(w, i + 4, j + 1, k + 4, air, 0);
		b(w, i + 4, j + 1, k + 5, air, 0);
		b(w, i + 4, j + 1, k + 6, air, 0);
		b(w, i + 4, j + 1, k + 7, air, 0);
		b(w, i + 4, j + 1, k + 8, air, 0);
		b(w, i + 4, j + 1, k + 9, air, 0);
		b(w, i + 4, j + 1, k + 10, air, 0);
		b(w, i + 4, j + 1, k + 11, air, 0);
		b(w, i + 4, j + 1, k + 12, air, 0);
		b(w, i + 4, j + 1, k + 13, air, 0);
		b(w, i + 4, j + 1, k + 14, air, 0);
		b(w, i + 4, j + 1, k + 15, air, 0);
		b(w, i + 4, j + 2, k, air, 0);
		b(w, i + 4, j + 2, k + 1, air, 0);
		b(w, i + 4, j + 2, k + 2, air, 0);
		b(w, i + 4, j + 2, k + 3, air, 0);
		b(w, i + 4, j + 2, k + 4, air, 0);
		b(w, i + 4, j + 2, k + 5, air, 0);
		b(w, i + 4, j + 2, k + 6, air, 0);
		b(w, i + 4, j + 2, k + 7, stone, 0);
		b(w, i + 4, j + 2, k + 8, stone, 0);
		b(w, i + 4, j + 2, k + 9, stone, 0);
		b(w, i + 4, j + 2, k + 10, stone, 0);
		b(w, i + 4, j + 2, k + 11, stone, 0);
		b(w, i + 4, j + 2, k + 12, stone, 0);
		b(w, i + 4, j + 2, k + 13, air, 0);
		b(w, i + 4, j + 2, k + 14, air, 0);
		b(w, i + 4, j + 2, k + 15, air, 0);
		b(w, i + 4, j + 3, k, air, 0);
		b(w, i + 4, j + 3, k + 1, air, 0);
		b(w, i + 4, j + 3, k + 2, air, 0);
		b(w, i + 4, j + 3, k + 3, air, 0);
		b(w, i + 4, j + 3, k + 4, air, 0);
		b(w, i + 4, j + 3, k + 5, air, 0);
		b(w, i + 4, j + 3, k + 6, stone, 0);
		b(w, i + 4, j + 3, k + 7, stone, 0);
		b(w, i + 4, j + 3, k + 8, stone, 0);
		b(w, i + 4, j + 3, k + 9, stone, 0);
		b(w, i + 4, j + 3, k + 10, stone, 0);
		b(w, i + 4, j + 3, k + 11, stone, 0);
		b(w, i + 4, j + 3, k + 12, stone, 0);
		b(w, i + 4, j + 3, k + 13, stone, 0);
		b(w, i + 4, j + 3, k + 14, air, 0);
		b(w, i + 4, j + 3, k + 15, air, 0);
		b(w, i + 4, j + 4, k, air, 0);
		b(w, i + 4, j + 4, k + 1, air, 0);
		b(w, i + 4, j + 4, k + 2, air, 0);
		b(w, i + 4, j + 4, k + 3, air, 0);
		b(w, i + 4, j + 4, k + 4, air, 0);
		b(w, i + 4, j + 4, k + 5, air, 0);
		b(w, i + 4, j + 4, k + 6, stone, 0);
		b(w, i + 4, j + 4, k + 7, stone, 0);
		b(w, i + 4, j + 4, k + 8, stone, 0);
		b(w, i + 4, j + 4, k + 9, stone, 0);
		b(w, i + 4, j + 4, k + 10, stone, 0);
		b(w, i + 4, j + 4, k + 11, stone, 0);
		b(w, i + 4, j + 4, k + 12, stone, 0);
		b(w, i + 4, j + 4, k + 13, stone, 0);
		b(w, i + 4, j + 4, k + 14, stone, 0);
		b(w, i + 4, j + 4, k + 15, air, 0);
		b(w, i + 4, j + 5, k, air, 0);
		b(w, i + 4, j + 5, k + 1, air, 0);
		b(w, i + 4, j + 5, k + 2, air, 0);
		b(w, i + 4, j + 5, k + 3, air, 0);
		b(w, i + 4, j + 5, k + 4, air, 0);
		b(w, i + 4, j + 5, k + 5, stone, 0);
		b(w, i + 4, j + 5, k + 6, stone, 0);
		b(w, i + 4, j + 5, k + 7, stone, 0);
		b(w, i + 4, j + 5, k + 8, stone, 0);
		b(w, i + 4, j + 5, k + 9, stone, 0);
		b(w, i + 4, j + 5, k + 10, stone, 0);
		b(w, i + 4, j + 5, k + 11, stone, 0);
		b(w, i + 4, j + 5, k + 12, stone, 0);
		b(w, i + 4, j + 5, k + 13, stone, 0);
		b(w, i + 4, j + 5, k + 14, stone, 0);
		b(w, i + 4, j + 5, k + 15, air, 0);
		b(w, i + 4, j + 6, k, air, 0);
		b(w, i + 4, j + 6, k + 1, air, 0);
		b(w, i + 4, j + 6, k + 2, stone, 0);
		b(w, i + 4, j + 6, k + 3, stone, 0);
		b(w, i + 4, j + 6, k + 4, stone, 0);
		b(w, i + 4, j + 6, k + 5, stone, 0);
		b(w, i + 4, j + 6, k + 6, stone, 0);
		b(w, i + 4, j + 6, k + 7, stone, 0);
		b(w, i + 4, j + 6, k + 8, stone, 0);
		b(w, i + 4, j + 6, k + 9, stone, 0);
		b(w, i + 4, j + 6, k + 10, stone, 0);
		b(w, i + 4, j + 6, k + 11, stone, 0);
		b(w, i + 4, j + 6, k + 12, stone, 0);
		b(w, i + 4, j + 6, k + 13, stone, 0);
		b(w, i + 4, j + 6, k + 14, stone, 0);
		b(w, i + 4, j + 6, k + 15, air, 0);
		b(w, i + 4, j + 7, k, air, 0);
		b(w, i + 4, j + 7, k + 1, air, 0);
		b(w, i + 4, j + 7, k + 2, stone, 0);
		b(w, i + 4, j + 7, k + 3, stone, 0);
		b(w, i + 4, j + 7, k + 4, stone, 0);
		b(w, i + 4, j + 7, k + 5, stone, 0);
		b(w, i + 4, j + 7, k + 6, stone, 0);
		b(w, i + 4, j + 7, k + 7, stone, 0);
		b(w, i + 4, j + 7, k + 8, stone, 0);
		b(w, i + 4, j + 7, k + 9, stone, 0);
		b(w, i + 4, j + 7, k + 10, stone, 0);
		b(w, i + 4, j + 7, k + 11, stone, 0);
		b(w, i + 4, j + 7, k + 12, stone, 0);
		b(w, i + 4, j + 7, k + 13, stone, 0);
		b(w, i + 4, j + 7, k + 14, stone, 0);
		b(w, i + 4, j + 7, k + 15, air, 0);
		b(w, i + 4, j + 8, k, air, 0);
		b(w, i + 4, j + 8, k + 1, stone, 0);
		b(w, i + 4, j + 8, k + 2, stone, 0);
		b(w, i + 4, j + 8, k + 3, stone, 0);
		b(w, i + 4, j + 8, k + 4, stone, 0);
		b(w, i + 4, j + 8, k + 5, stone, 0);
		b(w, i + 4, j + 8, k + 6, stone, 0);
		b(w, i + 4, j + 8, k + 7, stone, 0);
		b(w, i + 4, j + 8, k + 8, stone, 0);
		b(w, i + 4, j + 8, k + 9, stone, 0);
		b(w, i + 4, j + 8, k + 10, stone, 0);
		b(w, i + 4, j + 8, k + 11, stone, 0);
		b(w, i + 4, j + 8, k + 12, stone, 0);
		b(w, i + 4, j + 8, k + 13, stone, 0);
		b(w, i + 4, j + 8, k + 14, stone, 0);
		b(w, i + 4, j + 8, k + 15, stone, 0);
		b(w, i + 4, j + 9, k, air, 0);
		b(w, i + 4, j + 9, k + 1, stone, 0);
		b(w, i + 4, j + 9, k + 2, stone, 0);
		b(w, i + 4, j + 9, k + 3, stone, 0);
		b(w, i + 4, j + 9, k + 4, stone, 0);
		b(w, i + 4, j + 9, k + 5, stone, 0);
		b(w, i + 4, j + 9, k + 6, stone, 0);
		b(w, i + 4, j + 9, k + 7, stone, 0);
		b(w, i + 4, j + 9, k + 8, stone, 0);
		b(w, i + 4, j + 9, k + 9, stone, 0);
		b(w, i + 4, j + 9, k + 10, stone, 0);
		b(w, i + 4, j + 9, k + 11, stone, 0);
		b(w, i + 4, j + 9, k + 12, stone, 0);
		b(w, i + 4, j + 9, k + 13, stone, 0);
		b(w, i + 4, j + 9, k + 14, stone, 0);
		b(w, i + 4, j + 9, k + 15, air, 0);
		b(w, i + 4, j + 10, k, air, 0);
		b(w, i + 4, j + 10, k + 1, stone, 0);
		b(w, i + 4, j + 10, k + 2, stone, 0);
		b(w, i + 4, j + 10, k + 3, stone, 0);
		b(w, i + 4, j + 10, k + 4, stone, 0);
		b(w, i + 4, j + 10, k + 5, stone, 0);
		b(w, i + 4, j + 10, k + 6, stone, 0);
		b(w, i + 4, j + 10, k + 7, stone, 0);
		b(w, i + 4, j + 10, k + 8, stone, 0);
		b(w, i + 4, j + 10, k + 9, stone, 0);
		b(w, i + 4, j + 10, k + 10, stone, 0);
		b(w, i + 4, j + 10, k + 11, stone, 0);
		b(w, i + 4, j + 10, k + 12, stone, 0);
		b(w, i + 4, j + 10, k + 13, stone, 0);
		b(w, i + 4, j + 10, k + 14, stone, 0);
		b(w, i + 4, j + 10, k + 15, stone, 0);
		b(w, i + 4, j + 11, k, air, 0);
		b(w, i + 4, j + 11, k + 1, air, 0);
		b(w, i + 4, j + 11, k + 2, stone, 0);
		b(w, i + 4, j + 11, k + 3, stone, 0);
		b(w, i + 4, j + 11, k + 4, stone, 0);
		b(w, i + 4, j + 11, k + 5, stone, 0);
		b(w, i + 4, j + 11, k + 6, stone, 0);
		b(w, i + 4, j + 11, k + 7, air, 0);
		b(w, i + 4, j + 11, k + 8, air, 0);
		b(w, i + 4, j + 11, k + 9, air, 0);
		b(w, i + 4, j + 11, k + 10, air, 0);
		b(w, i + 4, j + 11, k + 11, air, 0);
		b(w, i + 4, j + 11, k + 12, air, 0);
		b(w, i + 4, j + 11, k + 13, stone, 0);
		b(w, i + 4, j + 11, k + 14, stone, 0);
		b(w, i + 4, j + 11, k + 15, air, 0);
		b(w, i + 4, j + 12, k, air, 0);
		b(w, i + 4, j + 12, k + 1, air, 0);
		b(w, i + 4, j + 12, k + 2, stone, 0);
		b(w, i + 4, j + 12, k + 3, stone, 0);
		b(w, i + 4, j + 12, k + 4, stone, 0);
		b(w, i + 4, j + 12, k + 5, stone, 0);
		b(w, i + 4, j + 12, k + 6, air, 0);
		b(w, i + 4, j + 12, k + 7, air, 0);
		b(w, i + 4, j + 12, k + 8, air, 0);
		b(w, i + 4, j + 12, k + 9, air, 0);
		b(w, i + 4, j + 12, k + 10, air, 0);
		b(w, i + 4, j + 12, k + 11, air, 0);
		b(w, i + 4, j + 12, k + 12, air, 0);
		b(w, i + 4, j + 12, k + 13, air, 0);
		b(w, i + 4, j + 12, k + 14, stone, 0);
		b(w, i + 4, j + 12, k + 15, air, 0);
		b(w, i + 4, j + 13, k, air, 0);
		b(w, i + 4, j + 13, k + 1, air, 0);
		b(w, i + 4, j + 13, k + 2, air, 0);
		b(w, i + 4, j + 13, k + 3, stone, 0);
		b(w, i + 4, j + 13, k + 4, air, 0);
		b(w, i + 4, j + 13, k + 5, air, 0);
		b(w, i + 4, j + 13, k + 6, air, 0);
		b(w, i + 4, j + 13, k + 7, air, 0);
		b(w, i + 4, j + 13, k + 8, air, 0);
		b(w, i + 4, j + 13, k + 9, air, 0);
		b(w, i + 4, j + 13, k + 10, air, 0);
		b(w, i + 4, j + 13, k + 11, air, 0);
		b(w, i + 4, j + 13, k + 12, air, 0);
		b(w, i + 4, j + 13, k + 13, air, 0);
		b(w, i + 4, j + 13, k + 14, air, 0);
		b(w, i + 4, j + 13, k + 15, air, 0);
		b(w, i + 4, j + 14, k, air, 0);
		b(w, i + 4, j + 14, k + 1, air, 0);
		b(w, i + 4, j + 14, k + 2, air, 0);
		b(w, i + 4, j + 14, k + 3, air, 0);
		b(w, i + 4, j + 14, k + 4, stone, 0);
		b(w, i + 4, j + 14, k + 5, air, 0);
		b(w, i + 4, j + 14, k + 6, air, 0);
		b(w, i + 4, j + 14, k + 7, air, 0);
		b(w, i + 4, j + 14, k + 8, air, 0);
		b(w, i + 4, j + 14, k + 9, air, 0);
		b(w, i + 4, j + 14, k + 10, air, 0);
		b(w, i + 4, j + 14, k + 11, air, 0);
		b(w, i + 4, j + 14, k + 12, air, 0);
		b(w, i + 4, j + 14, k + 13, air, 0);
		b(w, i + 4, j + 14, k + 14, air, 0);
		b(w, i + 4, j + 14, k + 15, air, 0);
		b(w, i + 4, j + 15, k, air, 0);
		b(w, i + 4, j + 15, k + 1, air, 0);
		b(w, i + 4, j + 15, k + 2, air, 0);
		b(w, i + 4, j + 15, k + 3, air, 0);
		b(w, i + 4, j + 15, k + 4, air, 0);
		b(w, i + 4, j + 15, k + 5, air, 0);
		b(w, i + 4, j + 15, k + 6, air, 0);
		b(w, i + 4, j + 15, k + 7, air, 0);
		b(w, i + 4, j + 15, k + 8, air, 0);
		b(w, i + 4, j + 15, k + 9, air, 0);
		b(w, i + 4, j + 15, k + 10, air, 0);
		b(w, i + 4, j + 15, k + 11, air, 0);
		b(w, i + 4, j + 15, k + 12, air, 0);
		b(w, i + 4, j + 15, k + 13, air, 0);
		b(w, i + 4, j + 15, k + 14, air, 0);
		b(w, i + 4, j + 15, k + 15, air, 0);
		b(w, i + 4, j + 16, k, air, 0);
		b(w, i + 4, j + 16, k + 1, air, 0);
		b(w, i + 4, j + 16, k + 2, air, 0);
		b(w, i + 4, j + 16, k + 3, air, 0);
		b(w, i + 4, j + 16, k + 4, air, 0);
		b(w, i + 4, j + 16, k + 5, air, 0);
		b(w, i + 4, j + 16, k + 6, air, 0);
		b(w, i + 4, j + 16, k + 7, air, 0);
		b(w, i + 4, j + 16, k + 8, air, 0);
		b(w, i + 4, j + 16, k + 9, air, 0);
		b(w, i + 4, j + 16, k + 10, air, 0);
		b(w, i + 4, j + 16, k + 11, air, 0);
		b(w, i + 4, j + 16, k + 12, air, 0);
		b(w, i + 4, j + 16, k + 13, air, 0);
		b(w, i + 4, j + 16, k + 14, air, 0);
		b(w, i + 4, j + 16, k + 15, air, 0);
		b(w, i + 5, j, k, air, 0);
		b(w, i + 5, j, k + 1, air, 0);
		b(w, i + 5, j, k + 2, air, 0);
		b(w, i + 5, j, k + 3, air, 0);
		b(w, i + 5, j, k + 4, air, 0);
		b(w, i + 5, j, k + 5, air, 0);
		b(w, i + 5, j, k + 6, air, 0);
		b(w, i + 5, j, k + 7, air, 0);
		b(w, i + 5, j, k + 8, air, 0);
		b(w, i + 5, j, k + 9, air, 0);
		b(w, i + 5, j, k + 10, air, 0);
		b(w, i + 5, j, k + 11, air, 0);
		b(w, i + 5, j, k + 12, air, 0);
		b(w, i + 5, j, k + 13, air, 0);
		b(w, i + 5, j, k + 14, air, 0);
		b(w, i + 5, j, k + 15, air, 0);
		b(w, i + 5, j + 1, k, air, 0);
		b(w, i + 5, j + 1, k + 1, air, 0);
		b(w, i + 5, j + 1, k + 2, air, 0);
		b(w, i + 5, j + 1, k + 3, air, 0);
		b(w, i + 5, j + 1, k + 4, air, 0);
		b(w, i + 5, j + 1, k + 5, air, 0);
		b(w, i + 5, j + 1, k + 6, air, 0);
		b(w, i + 5, j + 1, k + 7, air, 0);
		b(w, i + 5, j + 1, k + 8, stone, 0);
		b(w, i + 5, j + 1, k + 9, stone, 0);
		b(w, i + 5, j + 1, k + 10, stone, 0);
		b(w, i + 5, j + 1, k + 11, stone, 0);
		b(w, i + 5, j + 1, k + 12, air, 0);
		b(w, i + 5, j + 1, k + 13, air, 0);
		b(w, i + 5, j + 1, k + 14, air, 0);
		b(w, i + 5, j + 1, k + 15, air, 0);
		b(w, i + 5, j + 2, k, air, 0);
		b(w, i + 5, j + 2, k + 1, air, 0);
		b(w, i + 5, j + 2, k + 2, air, 0);
		b(w, i + 5, j + 2, k + 3, air, 0);
		b(w, i + 5, j + 2, k + 4, air, 0);
		b(w, i + 5, j + 2, k + 5, air, 0);
		b(w, i + 5, j + 2, k + 6, stone, 0);
		b(w, i + 5, j + 2, k + 7, stone, 0);
		b(w, i + 5, j + 2, k + 8, stone, 0);
		b(w, i + 5, j + 2, k + 9, stone, 0);
		b(w, i + 5, j + 2, k + 10, stone, 0);
		b(w, i + 5, j + 2, k + 11, stone, 0);
		b(w, i + 5, j + 2, k + 12, stone, 0);
		b(w, i + 5, j + 2, k + 13, stone, 0);
		b(w, i + 5, j + 2, k + 14, air, 0);
		b(w, i + 5, j + 2, k + 15, air, 0);
		b(w, i + 5, j + 3, k, air, 0);
		b(w, i + 5, j + 3, k + 1, air, 0);
		b(w, i + 5, j + 3, k + 2, air, 0);
		b(w, i + 5, j + 3, k + 3, air, 0);
		b(w, i + 5, j + 3, k + 4, air, 0);
		b(w, i + 5, j + 3, k + 5, air, 0);
		b(w, i + 5, j + 3, k + 6, stone, 0);
		b(w, i + 5, j + 3, k + 7, stone, 0);
		b(w, i + 5, j + 3, k + 8, stone, 0);
		b(w, i + 5, j + 3, k + 9, stone, 0);
		b(w, i + 5, j + 3, k + 10, stone, 0);
		b(w, i + 5, j + 3, k + 11, stone, 0);
		b(w, i + 5, j + 3, k + 12, stone, 0);
		b(w, i + 5, j + 3, k + 13, stone, 0);
		b(w, i + 5, j + 3, k + 14, stone, 0);
		b(w, i + 5, j + 3, k + 15, air, 0);
		b(w, i + 5, j + 4, k, air, 0);
		b(w, i + 5, j + 4, k + 1, air, 0);
		b(w, i + 5, j + 4, k + 2, air, 0);
		b(w, i + 5, j + 4, k + 3, air, 0);
		b(w, i + 5, j + 4, k + 4, air, 0);
		b(w, i + 5, j + 4, k + 5, stone, 0);
		b(w, i + 5, j + 4, k + 6, stone, 0);
		b(w, i + 5, j + 4, k + 7, stone, 0);
		b(w, i + 5, j + 4, k + 8, stone, 0);
		b(w, i + 5, j + 4, k + 9, stone, 0);
		b(w, i + 5, j + 4, k + 10, stone, 0);
		b(w, i + 5, j + 4, k + 11, stone, 0);
		b(w, i + 5, j + 4, k + 12, stone, 0);
		b(w, i + 5, j + 4, k + 13, stone, 0);
		b(w, i + 5, j + 4, k + 14, stone, 0);
		b(w, i + 5, j + 4, k + 15, air, 0);
		b(w, i + 5, j + 5, k, air, 0);
		b(w, i + 5, j + 5, k + 1, air, 0);
		b(w, i + 5, j + 5, k + 2, air, 0);
		b(w, i + 5, j + 5, k + 3, stone, 0);
		b(w, i + 5, j + 5, k + 4, stone, 0);
		b(w, i + 5, j + 5, k + 5, stone, 0);
		b(w, i + 5, j + 5, k + 6, stone, 0);
		b(w, i + 5, j + 5, k + 7, stone, 0);
		b(w, i + 5, j + 5, k + 8, stone, 0);
		b(w, i + 5, j + 5, k + 9, stone, 0);
		b(w, i + 5, j + 5, k + 10, stone, 0);
		b(w, i + 5, j + 5, k + 11, stone, 0);
		b(w, i + 5, j + 5, k + 12, stone, 0);
		b(w, i + 5, j + 5, k + 13, stone, 0);
		b(w, i + 5, j + 5, k + 14, stone, 0);
		b(w, i + 5, j + 5, k + 15, air, 0);
		b(w, i + 5, j + 6, k, air, 0);
		b(w, i + 5, j + 6, k + 1, air, 0);
		b(w, i + 5, j + 6, k + 2, stone, 0);
		b(w, i + 5, j + 6, k + 3, stone, 0);
		b(w, i + 5, j + 6, k + 4, stone, 0);
		b(w, i + 5, j + 6, k + 5, stone, 0);
		b(w, i + 5, j + 6, k + 6, stone, 0);
		b(w, i + 5, j + 6, k + 7, stone, 0);
		b(w, i + 5, j + 6, k + 8, stone, 0);
		b(w, i + 5, j + 6, k + 9, stone, 0);
		b(w, i + 5, j + 6, k + 10, stone, 0);
		b(w, i + 5, j + 6, k + 11, stone, 0);
		b(w, i + 5, j + 6, k + 12, stone, 0);
		b(w, i + 5, j + 6, k + 13, stone, 0);
		b(w, i + 5, j + 6, k + 14, stone, 0);
		b(w, i + 5, j + 6, k + 15, air, 0);
		b(w, i + 5, j + 7, k, air, 0);
		b(w, i + 5, j + 7, k + 1, stone, 0);
		b(w, i + 5, j + 7, k + 2, stone, 0);
		b(w, i + 5, j + 7, k + 3, stone, 0);
		b(w, i + 5, j + 7, k + 4, stone, 0);
		b(w, i + 5, j + 7, k + 5, stone, 0);
		b(w, i + 5, j + 7, k + 6, stone, 0);
		b(w, i + 5, j + 7, k + 7, stone, 0);
		b(w, i + 5, j + 7, k + 8, stone, 0);
		b(w, i + 5, j + 7, k + 9, stone, 0);
		b(w, i + 5, j + 7, k + 10, stone, 0);
		b(w, i + 5, j + 7, k + 11, stone, 0);
		b(w, i + 5, j + 7, k + 12, stone, 0);
		b(w, i + 5, j + 7, k + 13, stone, 0);
		b(w, i + 5, j + 7, k + 14, stone, 0);
		b(w, i + 5, j + 7, k + 15, air, 0);
		b(w, i + 5, j + 8, k, air, 0);
		b(w, i + 5, j + 8, k + 1, stone, 0);
		b(w, i + 5, j + 8, k + 2, stone, 0);
		b(w, i + 5, j + 8, k + 3, stone, 0);
		b(w, i + 5, j + 8, k + 4, stone, 0);
		b(w, i + 5, j + 8, k + 5, stone, 0);
		b(w, i + 5, j + 8, k + 6, stone, 0);
		b(w, i + 5, j + 8, k + 7, stone, 0);
		b(w, i + 5, j + 8, k + 8, stone, 0);
		b(w, i + 5, j + 8, k + 9, stone, 0);
		b(w, i + 5, j + 8, k + 10, stone, 0);
		b(w, i + 5, j + 8, k + 11, stone, 0);
		b(w, i + 5, j + 8, k + 12, stone, 0);
		b(w, i + 5, j + 8, k + 13, stone, 0);
		b(w, i + 5, j + 8, k + 14, stone, 0);
		generate_3(w, i, j, k);
	}

	public static void generate_3(World w, int i, int j, int k)
	{
		b(w, i + 5, j + 8, k + 15, air, 0);
		b(w, i + 5, j + 9, k, air, 0);
		b(w, i + 5, j + 9, k + 1, stone, 0);
		b(w, i + 5, j + 9, k + 2, stone, 0);
		b(w, i + 5, j + 9, k + 3, stone, 0);
		b(w, i + 5, j + 9, k + 4, stone, 0);
		b(w, i + 5, j + 9, k + 5, stone, 0);
		b(w, i + 5, j + 9, k + 6, stone, 0);
		b(w, i + 5, j + 9, k + 7, stone, 0);
		b(w, i + 5, j + 9, k + 8, stone, 0);
		b(w, i + 5, j + 9, k + 9, stone, 0);
		b(w, i + 5, j + 9, k + 10, stone, 0);
		b(w, i + 5, j + 9, k + 11, stone, 0);
		b(w, i + 5, j + 9, k + 12, stone, 0);
		b(w, i + 5, j + 9, k + 13, stone, 0);
		b(w, i + 5, j + 9, k + 14, stone, 0);
		b(w, i + 5, j + 9, k + 15, air, 0);
		b(w, i + 5, j + 10, k, air, 0);
		b(w, i + 5, j + 10, k + 1, stone, 0);
		b(w, i + 5, j + 10, k + 2, stone, 0);
		b(w, i + 5, j + 10, k + 3, stone, 0);
		b(w, i + 5, j + 10, k + 4, stone, 0);
		b(w, i + 5, j + 10, k + 5, stone, 0);
		b(w, i + 5, j + 10, k + 6, stone, 0);
		b(w, i + 5, j + 10, k + 7, stone, 0);
		b(w, i + 5, j + 10, k + 8, stone, 0);
		b(w, i + 5, j + 10, k + 9, stone, 0);
		b(w, i + 5, j + 10, k + 10, stone, 0);
		b(w, i + 5, j + 10, k + 11, stone, 0);
		b(w, i + 5, j + 10, k + 12, stone, 0);
		b(w, i + 5, j + 10, k + 13, stone, 0);
		b(w, i + 5, j + 10, k + 14, stone, 0);
		b(w, i + 5, j + 10, k + 15, air, 0);
		b(w, i + 5, j + 11, k, air, 0);
		b(w, i + 5, j + 11, k + 1, stone, 0);
		b(w, i + 5, j + 11, k + 2, stone, 0);
		b(w, i + 5, j + 11, k + 3, stone, 0);
		b(w, i + 5, j + 11, k + 4, stone, 0);
		b(w, i + 5, j + 11, k + 5, stone, 0);
		b(w, i + 5, j + 11, k + 6, stone, 0);
		b(w, i + 5, j + 11, k + 7, stone, 0);
		b(w, i + 5, j + 11, k + 8, air, 0);
		b(w, i + 5, j + 11, k + 9, air, 0);
		b(w, i + 5, j + 11, k + 10, air, 0);
		b(w, i + 5, j + 11, k + 11, air, 0);
		b(w, i + 5, j + 11, k + 12, stone, 0);
		b(w, i + 5, j + 11, k + 13, stone, 0);
		b(w, i + 5, j + 11, k + 14, stone, 0);
		b(w, i + 5, j + 11, k + 15, air, 0);
		b(w, i + 5, j + 12, k, air, 0);
		b(w, i + 5, j + 12, k + 1, air, 0);
		b(w, i + 5, j + 12, k + 2, stone, 0);
		b(w, i + 5, j + 12, k + 3, stone, 0);
		b(w, i + 5, j + 12, k + 4, stone, 0);
		b(w, i + 5, j + 12, k + 5, air, 0);
		b(w, i + 5, j + 12, k + 6, air, 0);
		b(w, i + 5, j + 12, k + 7, air, 0);
		b(w, i + 5, j + 12, k + 8, air, 0);
		b(w, i + 5, j + 12, k + 9, air, 0);
		b(w, i + 5, j + 12, k + 10, air, 0);
		b(w, i + 5, j + 12, k + 11, air, 0);
		b(w, i + 5, j + 12, k + 12, air, 0);
		b(w, i + 5, j + 12, k + 13, stone, 0);
		b(w, i + 5, j + 12, k + 14, stone, 0);
		b(w, i + 5, j + 12, k + 15, air, 0);
		b(w, i + 5, j + 13, k, air, 0);
		b(w, i + 5, j + 13, k + 1, air, 0);
		b(w, i + 5, j + 13, k + 2, stone, 0);
		b(w, i + 5, j + 13, k + 3, stone, 0);
		b(w, i + 5, j + 13, k + 4, air, 0);
		b(w, i + 5, j + 13, k + 5, air, 0);
		b(w, i + 5, j + 13, k + 6, air, 0);
		b(w, i + 5, j + 13, k + 7, air, 0);
		b(w, i + 5, j + 13, k + 8, air, 0);
		b(w, i + 5, j + 13, k + 9, air, 0);
		b(w, i + 5, j + 13, k + 10, air, 0);
		b(w, i + 5, j + 13, k + 11, air, 0);
		b(w, i + 5, j + 13, k + 12, air, 0);
		b(w, i + 5, j + 13, k + 13, air, 0);
		b(w, i + 5, j + 13, k + 14, air, 0);
		b(w, i + 5, j + 13, k + 15, air, 0);
		b(w, i + 5, j + 14, k, air, 0);
		b(w, i + 5, j + 14, k + 1, air, 0);
		b(w, i + 5, j + 14, k + 2, air, 0);
		b(w, i + 5, j + 14, k + 3, stone, 0);
		b(w, i + 5, j + 14, k + 4, stone, 0);
		b(w, i + 5, j + 14, k + 5, air, 0);
		b(w, i + 5, j + 14, k + 6, air, 0);
		b(w, i + 5, j + 14, k + 7, air, 0);
		b(w, i + 5, j + 14, k + 8, air, 0);
		b(w, i + 5, j + 14, k + 9, air, 0);
		b(w, i + 5, j + 14, k + 10, air, 0);
		b(w, i + 5, j + 14, k + 11, air, 0);
		b(w, i + 5, j + 14, k + 12, air, 0);
		b(w, i + 5, j + 14, k + 13, air, 0);
		b(w, i + 5, j + 14, k + 14, air, 0);
		b(w, i + 5, j + 14, k + 15, air, 0);
		b(w, i + 5, j + 15, k, air, 0);
		b(w, i + 5, j + 15, k + 1, air, 0);
		b(w, i + 5, j + 15, k + 2, air, 0);
		b(w, i + 5, j + 15, k + 3, air, 0);
		b(w, i + 5, j + 15, k + 4, air, 0);
		b(w, i + 5, j + 15, k + 5, air, 0);
		b(w, i + 5, j + 15, k + 6, air, 0);
		b(w, i + 5, j + 15, k + 7, air, 0);
		b(w, i + 5, j + 15, k + 8, air, 0);
		b(w, i + 5, j + 15, k + 9, air, 0);
		b(w, i + 5, j + 15, k + 10, air, 0);
		b(w, i + 5, j + 15, k + 11, air, 0);
		b(w, i + 5, j + 15, k + 12, air, 0);
		b(w, i + 5, j + 15, k + 13, air, 0);
		b(w, i + 5, j + 15, k + 14, air, 0);
		b(w, i + 5, j + 15, k + 15, air, 0);
		b(w, i + 5, j + 16, k, air, 0);
		b(w, i + 5, j + 16, k + 1, air, 0);
		b(w, i + 5, j + 16, k + 2, air, 0);
		b(w, i + 5, j + 16, k + 3, air, 0);
		b(w, i + 5, j + 16, k + 4, air, 0);
		b(w, i + 5, j + 16, k + 5, air, 0);
		b(w, i + 5, j + 16, k + 6, air, 0);
		b(w, i + 5, j + 16, k + 7, air, 0);
		b(w, i + 5, j + 16, k + 8, air, 0);
		b(w, i + 5, j + 16, k + 9, air, 0);
		b(w, i + 5, j + 16, k + 10, air, 0);
		b(w, i + 5, j + 16, k + 11, air, 0);
		b(w, i + 5, j + 16, k + 12, air, 0);
		b(w, i + 5, j + 16, k + 13, air, 0);
		b(w, i + 5, j + 16, k + 14, air, 0);
		b(w, i + 5, j + 16, k + 15, air, 0);
		b(w, i + 6, j, k, air, 0);
		b(w, i + 6, j, k + 1, air, 0);
		b(w, i + 6, j, k + 2, air, 0);
		b(w, i + 6, j, k + 3, air, 0);
		b(w, i + 6, j, k + 4, air, 0);
		b(w, i + 6, j, k + 5, air, 0);
		b(w, i + 6, j, k + 6, air, 0);
		b(w, i + 6, j, k + 7, air, 0);
		b(w, i + 6, j, k + 8, stone, 0);
		b(w, i + 6, j, k + 9, air, 0);
		b(w, i + 6, j, k + 10, stone, 0);
		b(w, i + 6, j, k + 11, air, 0);
		b(w, i + 6, j, k + 12, air, 0);
		b(w, i + 6, j, k + 13, air, 0);
		b(w, i + 6, j, k + 14, air, 0);
		b(w, i + 6, j, k + 15, air, 0);
		b(w, i + 6, j + 1, k, air, 0);
		b(w, i + 6, j + 1, k + 1, air, 0);
		b(w, i + 6, j + 1, k + 2, air, 0);
		b(w, i + 6, j + 1, k + 3, air, 0);
		b(w, i + 6, j + 1, k + 4, air, 0);
		b(w, i + 6, j + 1, k + 5, air, 0);
		b(w, i + 6, j + 1, k + 6, air, 0);
		b(w, i + 6, j + 1, k + 7, stone, 0);
		b(w, i + 6, j + 1, k + 8, stone, 0);
		b(w, i + 6, j + 1, k + 9, stone, 0);
		b(w, i + 6, j + 1, k + 10, stone, 0);
		b(w, i + 6, j + 1, k + 11, stone, 0);
		b(w, i + 6, j + 1, k + 12, stone, 0);
		b(w, i + 6, j + 1, k + 13, air, 0);
		b(w, i + 6, j + 1, k + 14, air, 0);
		b(w, i + 6, j + 1, k + 15, air, 0);
		b(w, i + 6, j + 2, k, air, 0);
		b(w, i + 6, j + 2, k + 1, air, 0);
		b(w, i + 6, j + 2, k + 2, air, 0);
		b(w, i + 6, j + 2, k + 3, air, 0);
		b(w, i + 6, j + 2, k + 4, air, 0);
		b(w, i + 6, j + 2, k + 5, stone, 0);
		b(w, i + 6, j + 2, k + 6, stone, 0);
		b(w, i + 6, j + 2, k + 7, stone, 0);
		b(w, i + 6, j + 2, k + 8, stone, 0);
		b(w, i + 6, j + 2, k + 9, stone, 0);
		b(w, i + 6, j + 2, k + 10, stone, 0);
		b(w, i + 6, j + 2, k + 11, stone, 0);
		b(w, i + 6, j + 2, k + 12, stone, 0);
		b(w, i + 6, j + 2, k + 13, stone, 0);
		b(w, i + 6, j + 2, k + 14, air, 0);
		b(w, i + 6, j + 2, k + 15, air, 0);
		b(w, i + 6, j + 3, k, air, 0);
		b(w, i + 6, j + 3, k + 1, air, 0);
		b(w, i + 6, j + 3, k + 2, air, 0);
		b(w, i + 6, j + 3, k + 3, stone, 0);
		b(w, i + 6, j + 3, k + 4, stone, 0);
		b(w, i + 6, j + 3, k + 5, stone, 0);
		b(w, i + 6, j + 3, k + 6, stone, 0);
		b(w, i + 6, j + 3, k + 7, stone, 0);
		b(w, i + 6, j + 3, k + 8, stone, 0);
		b(w, i + 6, j + 3, k + 9, stone, 0);
		b(w, i + 6, j + 3, k + 10, stone, 0);
		b(w, i + 6, j + 3, k + 11, stone, 0);
		b(w, i + 6, j + 3, k + 12, stone, 0);
		b(w, i + 6, j + 3, k + 13, stone, 0);
		b(w, i + 6, j + 3, k + 14, stone, 0);
		b(w, i + 6, j + 3, k + 15, air, 0);
		b(w, i + 6, j + 4, k, air, 0);
		b(w, i + 6, j + 4, k + 1, air, 0);
		b(w, i + 6, j + 4, k + 2, air, 0);
		b(w, i + 6, j + 4, k + 3, stone, 0);
		b(w, i + 6, j + 4, k + 4, stone, 0);
		b(w, i + 6, j + 4, k + 5, stone, 0);
		b(w, i + 6, j + 4, k + 6, stone, 0);
		b(w, i + 6, j + 4, k + 7, stone, 0);
		b(w, i + 6, j + 4, k + 8, stone, 0);
		b(w, i + 6, j + 4, k + 9, stone, 0);
		b(w, i + 6, j + 4, k + 10, stone, 0);
		b(w, i + 6, j + 4, k + 11, stone, 0);
		b(w, i + 6, j + 4, k + 12, air, 0);
		b(w, i + 6, j + 4, k + 13, air, 0);
		b(w, i + 6, j + 4, k + 14, air, 0);
		b(w, i + 6, j + 4, k + 15, air, 0);
		b(w, i + 6, j + 5, k, air, 0);
		b(w, i + 6, j + 5, k + 1, air, 0);
		b(w, i + 6, j + 5, k + 2, stone, 0);
		b(w, i + 6, j + 5, k + 3, stone, 0);
		b(w, i + 6, j + 5, k + 4, stone, 0);
		b(w, i + 6, j + 5, k + 5, stone, 0);
		b(w, i + 6, j + 5, k + 6, stone, 0);
		b(w, i + 6, j + 5, k + 7, stone, 0);
		b(w, i + 6, j + 5, k + 8, stone, 0);
		b(w, i + 6, j + 5, k + 9, stone, 0);
		b(w, i + 6, j + 5, k + 10, stone, 0);
		b(w, i + 6, j + 5, k + 11, stone, 0);
		b(w, i + 6, j + 5, k + 12, air, 0);
		b(w, i + 6, j + 5, k + 13, air, 0);
		b(w, i + 6, j + 5, k + 14, air, 0);
		b(w, i + 6, j + 5, k + 15, air, 0);
		b(w, i + 6, j + 6, k, air, 0);
		b(w, i + 6, j + 6, k + 1, stone, 0);
		b(w, i + 6, j + 6, k + 2, stone, 0);
		b(w, i + 6, j + 6, k + 3, stone, 0);
		b(w, i + 6, j + 6, k + 4, stone, 0);
		b(w, i + 6, j + 6, k + 5, stone, 0);
		b(w, i + 6, j + 6, k + 6, stone, 0);
		b(w, i + 6, j + 6, k + 7, stone, 0);
		b(w, i + 6, j + 6, k + 8, stone, 0);
		b(w, i + 6, j + 6, k + 9, stone, 0);
		b(w, i + 6, j + 6, k + 10, stone, 0);
		b(w, i + 6, j + 6, k + 11, stone, 0);
		b(w, i + 6, j + 6, k + 12, stone, 0);
		b(w, i + 6, j + 6, k + 13, stone, 0);
		b(w, i + 6, j + 6, k + 14, air, 0);
		b(w, i + 6, j + 6, k + 15, air, 0);
		b(w, i + 6, j + 7, k, air, 0);
		b(w, i + 6, j + 7, k + 1, stone, 0);
		b(w, i + 6, j + 7, k + 2, stone, 0);
		b(w, i + 6, j + 7, k + 3, stone, 0);
		b(w, i + 6, j + 7, k + 4, stone, 0);
		b(w, i + 6, j + 7, k + 5, stone, 0);
		b(w, i + 6, j + 7, k + 6, stone, 0);
		b(w, i + 6, j + 7, k + 7, stone, 0);
		b(w, i + 6, j + 7, k + 8, stone, 0);
		b(w, i + 6, j + 7, k + 9, stone, 0);
		b(w, i + 6, j + 7, k + 10, stone, 0);
		b(w, i + 6, j + 7, k + 11, stone, 0);
		b(w, i + 6, j + 7, k + 12, stone, 0);
		b(w, i + 6, j + 7, k + 13, stone, 0);
		b(w, i + 6, j + 7, k + 14, air, 0);
		b(w, i + 6, j + 7, k + 15, air, 0);
		b(w, i + 6, j + 8, k, stone, 0);
		b(w, i + 6, j + 8, k + 1, stone, 0);
		b(w, i + 6, j + 8, k + 2, stone, 0);
		b(w, i + 6, j + 8, k + 3, stone, 0);
		b(w, i + 6, j + 8, k + 4, stone, 0);
		b(w, i + 6, j + 8, k + 5, stone, 0);
		b(w, i + 6, j + 8, k + 6, stone, 0);
		b(w, i + 6, j + 8, k + 7, stone, 0);
		b(w, i + 6, j + 8, k + 8, stone, 0);
		b(w, i + 6, j + 8, k + 9, stone, 0);
		b(w, i + 6, j + 8, k + 10, stone, 0);
		b(w, i + 6, j + 8, k + 11, stone, 0);
		b(w, i + 6, j + 8, k + 12, air, 0);
		b(w, i + 6, j + 8, k + 13, air, 0);
		b(w, i + 6, j + 8, k + 14, air, 0);
		b(w, i + 6, j + 8, k + 15, air, 0);
		b(w, i + 6, j + 9, k, stone, 0);
		b(w, i + 6, j + 9, k + 1, stone, 0);
		b(w, i + 6, j + 9, k + 2, stone, 0);
		b(w, i + 6, j + 9, k + 3, stone, 0);
		b(w, i + 6, j + 9, k + 4, stone, 0);
		b(w, i + 6, j + 9, k + 5, stone, 0);
		b(w, i + 6, j + 9, k + 6, stone, 0);
		b(w, i + 6, j + 9, k + 7, stone, 0);
		b(w, i + 6, j + 9, k + 8, stone, 0);
		b(w, i + 6, j + 9, k + 9, stone, 0);
		b(w, i + 6, j + 9, k + 10, stone, 0);
		b(w, i + 6, j + 9, k + 11, stone, 0);
		b(w, i + 6, j + 9, k + 12, stone, 0);
		b(w, i + 6, j + 9, k + 13, stone, 0);
		b(w, i + 6, j + 9, k + 14, air, 0);
		b(w, i + 6, j + 9, k + 15, air, 0);
		b(w, i + 6, j + 10, k, stone, 0);
		b(w, i + 6, j + 10, k + 1, stone, 0);
		b(w, i + 6, j + 10, k + 2, stone, 0);
		b(w, i + 6, j + 10, k + 3, stone, 0);
		b(w, i + 6, j + 10, k + 4, stone, 0);
		b(w, i + 6, j + 10, k + 5, stone, 0);
		b(w, i + 6, j + 10, k + 6, stone, 0);
		b(w, i + 6, j + 10, k + 7, stone, 0);
		b(w, i + 6, j + 10, k + 8, stone, 0);
		b(w, i + 6, j + 10, k + 9, stone, 0);
		b(w, i + 6, j + 10, k + 10, stone, 0);
		b(w, i + 6, j + 10, k + 11, stone, 0);
		b(w, i + 6, j + 10, k + 12, stone, 0);
		b(w, i + 6, j + 10, k + 13, stone, 0);
		b(w, i + 6, j + 10, k + 14, air, 0);
		b(w, i + 6, j + 10, k + 15, air, 0);
		b(w, i + 6, j + 11, k, air, 0);
		b(w, i + 6, j + 11, k + 1, stone, 0);
		b(w, i + 6, j + 11, k + 2, stone, 0);
		b(w, i + 6, j + 11, k + 3, stone, 0);
		b(w, i + 6, j + 11, k + 4, stone, 0);
		b(w, i + 6, j + 11, k + 5, stone, 0);
		b(w, i + 6, j + 11, k + 6, stone, 0);
		b(w, i + 6, j + 11, k + 7, stone, 0);
		b(w, i + 6, j + 11, k + 8, air, 0);
		b(w, i + 6, j + 11, k + 9, air, 0);
		b(w, i + 6, j + 11, k + 10, air, 0);
		b(w, i + 6, j + 11, k + 11, air, 0);
		b(w, i + 6, j + 11, k + 12, stone, 0);
		b(w, i + 6, j + 11, k + 13, stone, 0);
		b(w, i + 6, j + 11, k + 14, stone, 0);
		b(w, i + 6, j + 11, k + 15, air, 0);
		b(w, i + 6, j + 12, k, air, 0);
		b(w, i + 6, j + 12, k + 1, stone, 0);
		b(w, i + 6, j + 12, k + 2, stone, 0);
		b(w, i + 6, j + 12, k + 3, stone, 0);
		b(w, i + 6, j + 12, k + 4, stone, 0);
		b(w, i + 6, j + 12, k + 5, stone, 0);
		b(w, i + 6, j + 12, k + 6, stone, 0);
		b(w, i + 6, j + 12, k + 7, air, 0);
		b(w, i + 6, j + 12, k + 8, air, 0);
		b(w, i + 6, j + 12, k + 9, air, 0);
		b(w, i + 6, j + 12, k + 10, air, 0);
		b(w, i + 6, j + 12, k + 11, air, 0);
		b(w, i + 6, j + 12, k + 12, air, 0);
		b(w, i + 6, j + 12, k + 13, stone, 0);
		b(w, i + 6, j + 12, k + 14, stone, 0);
		b(w, i + 6, j + 12, k + 15, air, 0);
		b(w, i + 6, j + 13, k, air, 0);
		b(w, i + 6, j + 13, k + 1, air, 0);
		b(w, i + 6, j + 13, k + 2, stone, 0);
		b(w, i + 6, j + 13, k + 3, stone, 0);
		b(w, i + 6, j + 13, k + 4, stone, 0);
		b(w, i + 6, j + 13, k + 5, stone, 0);
		b(w, i + 6, j + 13, k + 6, stone, 0);
		b(w, i + 6, j + 13, k + 7, air, 0);
		b(w, i + 6, j + 13, k + 8, air, 0);
		b(w, i + 6, j + 13, k + 9, air, 0);
		b(w, i + 6, j + 13, k + 10, air, 0);
		b(w, i + 6, j + 13, k + 11, air, 0);
		b(w, i + 6, j + 13, k + 12, air, 0);
		b(w, i + 6, j + 13, k + 13, air, 0);
		b(w, i + 6, j + 13, k + 14, air, 0);
		b(w, i + 6, j + 13, k + 15, air, 0);
		b(w, i + 6, j + 14, k, air, 0);
		b(w, i + 6, j + 14, k + 1, air, 0);
		b(w, i + 6, j + 14, k + 2, air, 0);
		b(w, i + 6, j + 14, k + 3, stone, 0);
		b(w, i + 6, j + 14, k + 4, stone, 0);
		b(w, i + 6, j + 14, k + 5, stone, 0);
		b(w, i + 6, j + 14, k + 6, air, 0);
		b(w, i + 6, j + 14, k + 7, air, 0);
		b(w, i + 6, j + 14, k + 8, air, 0);
		b(w, i + 6, j + 14, k + 9, air, 0);
		b(w, i + 6, j + 14, k + 10, air, 0);
		b(w, i + 6, j + 14, k + 11, air, 0);
		b(w, i + 6, j + 14, k + 12, air, 0);
		b(w, i + 6, j + 14, k + 13, air, 0);
		b(w, i + 6, j + 14, k + 14, air, 0);
		b(w, i + 6, j + 14, k + 15, air, 0);
		b(w, i + 6, j + 15, k, air, 0);
		b(w, i + 6, j + 15, k + 1, air, 0);
		b(w, i + 6, j + 15, k + 2, air, 0);
		b(w, i + 6, j + 15, k + 3, air, 0);
		b(w, i + 6, j + 15, k + 4, stone, 0);
		b(w, i + 6, j + 15, k + 5, stone, 0);
		b(w, i + 6, j + 15, k + 6, air, 0);
		b(w, i + 6, j + 15, k + 7, air, 0);
		b(w, i + 6, j + 15, k + 8, air, 0);
		b(w, i + 6, j + 15, k + 9, air, 0);
		b(w, i + 6, j + 15, k + 10, air, 0);
		b(w, i + 6, j + 15, k + 11, air, 0);
		b(w, i + 6, j + 15, k + 12, air, 0);
		b(w, i + 6, j + 15, k + 13, air, 0);
		b(w, i + 6, j + 15, k + 14, air, 0);
		b(w, i + 6, j + 15, k + 15, air, 0);
		b(w, i + 6, j + 16, k, air, 0);
		b(w, i + 6, j + 16, k + 1, air, 0);
		b(w, i + 6, j + 16, k + 2, air, 0);
		b(w, i + 6, j + 16, k + 3, air, 0);
		b(w, i + 6, j + 16, k + 4, air, 0);
		b(w, i + 6, j + 16, k + 5, air, 0);
		b(w, i + 6, j + 16, k + 6, air, 0);
		b(w, i + 6, j + 16, k + 7, air, 0);
		b(w, i + 6, j + 16, k + 8, air, 0);
		b(w, i + 6, j + 16, k + 9, air, 0);
		b(w, i + 6, j + 16, k + 10, air, 0);
		b(w, i + 6, j + 16, k + 11, air, 0);
		b(w, i + 6, j + 16, k + 12, air, 0);
		b(w, i + 6, j + 16, k + 13, air, 0);
		b(w, i + 6, j + 16, k + 14, air, 0);
		b(w, i + 6, j + 16, k + 15, air, 0);
		b(w, i + 7, j, k, air, 0);
		b(w, i + 7, j, k + 1, air, 0);
		b(w, i + 7, j, k + 2, air, 0);
		b(w, i + 7, j, k + 3, air, 0);
		b(w, i + 7, j, k + 4, air, 0);
		b(w, i + 7, j, k + 5, air, 0);
		b(w, i + 7, j, k + 6, air, 0);
		b(w, i + 7, j, k + 7, stone, 0);
		b(w, i + 7, j, k + 8, stone, 0);
		b(w, i + 7, j, k + 9, stone, 0);
		b(w, i + 7, j, k + 10, stone, 0);
		b(w, i + 7, j, k + 11, air, 0);
		b(w, i + 7, j, k + 12, air, 0);
		b(w, i + 7, j, k + 13, air, 0);
		b(w, i + 7, j, k + 14, air, 0);
		b(w, i + 7, j, k + 15, air, 0);
		b(w, i + 7, j + 1, k, air, 0);
		b(w, i + 7, j + 1, k + 1, air, 0);
		b(w, i + 7, j + 1, k + 2, air, 0);
		b(w, i + 7, j + 1, k + 3, air, 0);
		b(w, i + 7, j + 1, k + 4, air, 0);
		b(w, i + 7, j + 1, k + 5, air, 0);
		b(w, i + 7, j + 1, k + 6, stone, 0);
		b(w, i + 7, j + 1, k + 7, stone, 0);
		b(w, i + 7, j + 1, k + 8, stone, 0);
		b(w, i + 7, j + 1, k + 9, stone, 0);
		b(w, i + 7, j + 1, k + 10, stone, 0);
		b(w, i + 7, j + 1, k + 11, stone, 0);
		b(w, i + 7, j + 1, k + 12, stone, 0);
		b(w, i + 7, j + 1, k + 13, air, 0);
		b(w, i + 7, j + 1, k + 14, air, 0);
		b(w, i + 7, j + 1, k + 15, air, 0);
		b(w, i + 7, j + 2, k, air, 0);
		b(w, i + 7, j + 2, k + 1, air, 0);
		b(w, i + 7, j + 2, k + 2, air, 0);
		b(w, i + 7, j + 2, k + 3, stone, 0);
		b(w, i + 7, j + 2, k + 4, stone, 0);
		b(w, i + 7, j + 2, k + 5, stone, 0);
		b(w, i + 7, j + 2, k + 6, stone, 0);
		b(w, i + 7, j + 2, k + 7, stone, 0);
		b(w, i + 7, j + 2, k + 8, stone, 0);
		b(w, i + 7, j + 2, k + 9, stone, 0);
		b(w, i + 7, j + 2, k + 10, stone, 0);
		b(w, i + 7, j + 2, k + 11, stone, 0);
		b(w, i + 7, j + 2, k + 12, stone, 0);
		b(w, i + 7, j + 2, k + 13, stone, 0);
		b(w, i + 7, j + 2, k + 14, air, 0);
		b(w, i + 7, j + 2, k + 15, air, 0);
		b(w, i + 7, j + 3, k, air, 0);
		b(w, i + 7, j + 3, k + 1, air, 0);
		b(w, i + 7, j + 3, k + 2, stone, 0);
		b(w, i + 7, j + 3, k + 3, stone, 0);
		b(w, i + 7, j + 3, k + 4, stone, 0);
		b(w, i + 7, j + 3, k + 5, stone, 0);
		b(w, i + 7, j + 3, k + 6, stone, 0);
		b(w, i + 7, j + 3, k + 7, stone, 0);
		b(w, i + 7, j + 3, k + 8, stone, 0);
		b(w, i + 7, j + 3, k + 9, stone, 0);
		b(w, i + 7, j + 3, k + 10, stone, 0);
		b(w, i + 7, j + 3, k + 11, stone, 0);
		b(w, i + 7, j + 3, k + 12, stone, 0);
		b(w, i + 7, j + 3, k + 13, stone, 0);
		b(w, i + 7, j + 3, k + 14, stone, 0);
		b(w, i + 7, j + 3, k + 15, air, 0);
		b(w, i + 7, j + 4, k, air, 0);
		b(w, i + 7, j + 4, k + 1, air, 0);
		b(w, i + 7, j + 4, k + 2, stone, 0);
		b(w, i + 7, j + 4, k + 3, stone, 0);
		b(w, i + 7, j + 4, k + 4, stone, 0);
		b(w, i + 7, j + 4, k + 5, stone, 0);
		b(w, i + 7, j + 4, k + 6, stone, 0);
		b(w, i + 7, j + 4, k + 7, stone, 0);
		b(w, i + 7, j + 4, k + 8, stone, 0);
		b(w, i + 7, j + 4, k + 9, stone, 0);
		b(w, i + 7, j + 4, k + 10, stone, 0);
		b(w, i + 7, j + 4, k + 11, stone, 0);
		b(w, i + 7, j + 4, k + 12, air, 0);
		b(w, i + 7, j + 4, k + 13, air, 0);
		b(w, i + 7, j + 4, k + 14, air, 0);
		b(w, i + 7, j + 4, k + 15, air, 0);
		b(w, i + 7, j + 5, k, air, 0);
		b(w, i + 7, j + 5, k + 1, stone, 0);
		b(w, i + 7, j + 5, k + 2, stone, 0);
		b(w, i + 7, j + 5, k + 3, stone, 0);
		b(w, i + 7, j + 5, k + 4, stone, 0);
		b(w, i + 7, j + 5, k + 5, stone, 0);
		b(w, i + 7, j + 5, k + 6, stone, 0);
		b(w, i + 7, j + 5, k + 7, stone, 0);
		b(w, i + 7, j + 5, k + 8, stone, 0);
		b(w, i + 7, j + 5, k + 9, stone, 0);
		b(w, i + 7, j + 5, k + 10, stone, 0);
		b(w, i + 7, j + 5, k + 11, stone, 0);
		b(w, i + 7, j + 5, k + 12, air, 0);
		b(w, i + 7, j + 5, k + 13, air, 0);
		b(w, i + 7, j + 5, k + 14, air, 0);
		b(w, i + 7, j + 5, k + 15, air, 0);
		b(w, i + 7, j + 6, k, air, 0);
		b(w, i + 7, j + 6, k + 1, stone, 0);
		b(w, i + 7, j + 6, k + 2, stone, 0);
		b(w, i + 7, j + 6, k + 3, stone, 0);
		generate_4(w, i, j, k);
	}

	public static void generate_4(World w, int i, int j, int k)
	{
		b(w, i + 7, j + 6, k + 4, stone, 0);
		b(w, i + 7, j + 6, k + 5, stone, 0);
		b(w, i + 7, j + 6, k + 6, stone, 0);
		b(w, i + 7, j + 6, k + 7, stone, 0);
		b(w, i + 7, j + 6, k + 8, stone, 0);
		b(w, i + 7, j + 6, k + 9, stone, 0);
		b(w, i + 7, j + 6, k + 10, stone, 0);
		b(w, i + 7, j + 6, k + 11, stone, 0);
		b(w, i + 7, j + 6, k + 12, air, 0);
		b(w, i + 7, j + 6, k + 13, air, 0);
		b(w, i + 7, j + 6, k + 14, air, 0);
		b(w, i + 7, j + 6, k + 15, air, 0);
		b(w, i + 7, j + 7, k, air, 0);
		b(w, i + 7, j + 7, k + 1, stone, 0);
		b(w, i + 7, j + 7, k + 2, stone, 0);
		b(w, i + 7, j + 7, k + 3, stone, 0);
		b(w, i + 7, j + 7, k + 4, stone, 0);
		b(w, i + 7, j + 7, k + 5, stone, 0);
		b(w, i + 7, j + 7, k + 6, stone, 0);
		b(w, i + 7, j + 7, k + 7, stone, 0);
		b(w, i + 7, j + 7, k + 8, stone, 0);
		b(w, i + 7, j + 7, k + 9, stone, 0);
		b(w, i + 7, j + 7, k + 10, stone, 0);
		b(w, i + 7, j + 7, k + 11, stone, 0);
		b(w, i + 7, j + 7, k + 12, air, 0);
		b(w, i + 7, j + 7, k + 13, air, 0);
		b(w, i + 7, j + 7, k + 14, air, 0);
		b(w, i + 7, j + 7, k + 15, air, 0);
		b(w, i + 7, j + 8, k, air, 0);
		b(w, i + 7, j + 8, k + 1, stone, 0);
		b(w, i + 7, j + 8, k + 2, stone, 0);
		b(w, i + 7, j + 8, k + 3, stone, 0);
		b(w, i + 7, j + 8, k + 4, stone, 0);
		b(w, i + 7, j + 8, k + 5, stone, 0);
		b(w, i + 7, j + 8, k + 6, stone, 0);
		b(w, i + 7, j + 8, k + 7, stone, 0);
		b(w, i + 7, j + 8, k + 8, stone, 0);
		b(w, i + 7, j + 8, k + 9, stone, 0);
		b(w, i + 7, j + 8, k + 10, stone, 0);
		b(w, i + 7, j + 8, k + 11, air, 0);
		b(w, i + 7, j + 8, k + 12, air, 0);
		b(w, i + 7, j + 8, k + 13, air, 0);
		b(w, i + 7, j + 8, k + 14, air, 0);
		b(w, i + 7, j + 8, k + 15, air, 0);
		b(w, i + 7, j + 9, k, air, 0);
		b(w, i + 7, j + 9, k + 1, stone, 0);
		b(w, i + 7, j + 9, k + 2, stone, 0);
		b(w, i + 7, j + 9, k + 3, stone, 0);
		b(w, i + 7, j + 9, k + 4, stone, 0);
		b(w, i + 7, j + 9, k + 5, stone, 0);
		b(w, i + 7, j + 9, k + 6, stone, 0);
		b(w, i + 7, j + 9, k + 7, stone, 0);
		b(w, i + 7, j + 9, k + 8, stone, 0);
		b(w, i + 7, j + 9, k + 9, stone, 0);
		b(w, i + 7, j + 9, k + 10, stone, 0);
		b(w, i + 7, j + 9, k + 11, stone, 0);
		b(w, i + 7, j + 9, k + 12, stone, 0);
		b(w, i + 7, j + 9, k + 13, air, 0);
		b(w, i + 7, j + 9, k + 14, air, 0);
		b(w, i + 7, j + 9, k + 15, air, 0);
		b(w, i + 7, j + 10, k, air, 0);
		b(w, i + 7, j + 10, k + 1, stone, 0);
		b(w, i + 7, j + 10, k + 2, stone, 0);
		b(w, i + 7, j + 10, k + 3, stone, 0);
		b(w, i + 7, j + 10, k + 4, stone, 0);
		b(w, i + 7, j + 10, k + 5, stone, 0);
		b(w, i + 7, j + 10, k + 6, stone, 0);
		b(w, i + 7, j + 10, k + 7, stone, 0);
		b(w, i + 7, j + 10, k + 8, stone, 0);
		b(w, i + 7, j + 10, k + 9, stone, 0);
		b(w, i + 7, j + 10, k + 10, stone, 0);
		b(w, i + 7, j + 10, k + 11, stone, 0);
		b(w, i + 7, j + 10, k + 12, stone, 0);
		b(w, i + 7, j + 10, k + 13, stone, 0);
		b(w, i + 7, j + 10, k + 14, air, 0);
		b(w, i + 7, j + 10, k + 15, air, 0);
		b(w, i + 7, j + 11, k, air, 0);
		b(w, i + 7, j + 11, k + 1, stone, 0);
		b(w, i + 7, j + 11, k + 2, stone, 0);
		b(w, i + 7, j + 11, k + 3, stone, 0);
		b(w, i + 7, j + 11, k + 4, stone, 0);
		b(w, i + 7, j + 11, k + 5, stone, 0);
		b(w, i + 7, j + 11, k + 6, stone, 0);
		b(w, i + 7, j + 11, k + 7, stone, 0);
		b(w, i + 7, j + 11, k + 8, stone, 0);
		b(w, i + 7, j + 11, k + 9, stone, 0);
		b(w, i + 7, j + 11, k + 10, stone, 0);
		b(w, i + 7, j + 11, k + 11, stone, 0);
		b(w, i + 7, j + 11, k + 12, stone, 0);
		b(w, i + 7, j + 11, k + 13, stone, 0);
		b(w, i + 7, j + 11, k + 14, air, 0);
		b(w, i + 7, j + 11, k + 15, air, 0);
		b(w, i + 7, j + 12, k, air, 0);
		b(w, i + 7, j + 12, k + 1, stone, 0);
		b(w, i + 7, j + 12, k + 2, stone, 0);
		b(w, i + 7, j + 12, k + 3, stone, 0);
		b(w, i + 7, j + 12, k + 4, stone, 0);
		b(w, i + 7, j + 12, k + 5, stone, 0);
		b(w, i + 7, j + 12, k + 6, stone, 0);
		b(w, i + 7, j + 12, k + 7, stone, 0);
		b(w, i + 7, j + 12, k + 8, air, 0);
		b(w, i + 7, j + 12, k + 9, air, 0);
		b(w, i + 7, j + 12, k + 10, air, 0);
		b(w, i + 7, j + 12, k + 11, air, 0);
		b(w, i + 7, j + 12, k + 12, stone, 0);
		b(w, i + 7, j + 12, k + 13, stone, 0);
		b(w, i + 7, j + 12, k + 14, stone, 0);
		b(w, i + 7, j + 12, k + 15, air, 0);
		b(w, i + 7, j + 13, k, air, 0);
		b(w, i + 7, j + 13, k + 1, air, 0);
		b(w, i + 7, j + 13, k + 2, stone, 0);
		b(w, i + 7, j + 13, k + 3, stone, 0);
		b(w, i + 7, j + 13, k + 4, stone, 0);
		b(w, i + 7, j + 13, k + 5, stone, 0);
		b(w, i + 7, j + 13, k + 6, stone, 0);
		b(w, i + 7, j + 13, k + 7, stone, 0);
		b(w, i + 7, j + 13, k + 8, air, 0);
		b(w, i + 7, j + 13, k + 9, air, 0);
		b(w, i + 7, j + 13, k + 10, air, 0);
		b(w, i + 7, j + 13, k + 11, air, 0);
		b(w, i + 7, j + 13, k + 12, air, 0);
		b(w, i + 7, j + 13, k + 13, air, 0);
		b(w, i + 7, j + 13, k + 14, air, 0);
		b(w, i + 7, j + 13, k + 15, air, 0);
		b(w, i + 7, j + 14, k, air, 0);
		b(w, i + 7, j + 14, k + 1, air, 0);
		b(w, i + 7, j + 14, k + 2, air, 0);
		b(w, i + 7, j + 14, k + 3, stone, 0);
		b(w, i + 7, j + 14, k + 4, stone, 0);
		b(w, i + 7, j + 14, k + 5, stone, 0);
		b(w, i + 7, j + 14, k + 6, stone, 0);
		b(w, i + 7, j + 14, k + 7, air, 0);
		b(w, i + 7, j + 14, k + 8, air, 0);
		b(w, i + 7, j + 14, k + 9, air, 0);
		b(w, i + 7, j + 14, k + 10, air, 0);
		b(w, i + 7, j + 14, k + 11, air, 0);
		b(w, i + 7, j + 14, k + 12, air, 0);
		b(w, i + 7, j + 14, k + 13, air, 0);
		b(w, i + 7, j + 14, k + 14, air, 0);
		b(w, i + 7, j + 14, k + 15, air, 0);
		b(w, i + 7, j + 15, k, air, 0);
		b(w, i + 7, j + 15, k + 1, air, 0);
		b(w, i + 7, j + 15, k + 2, air, 0);
		b(w, i + 7, j + 15, k + 3, air, 0);
		b(w, i + 7, j + 15, k + 4, stone, 0);
		b(w, i + 7, j + 15, k + 5, stone, 0);
		b(w, i + 7, j + 15, k + 6, stone, 0);
		b(w, i + 7, j + 15, k + 7, air, 0);
		b(w, i + 7, j + 15, k + 8, air, 0);
		b(w, i + 7, j + 15, k + 9, air, 0);
		b(w, i + 7, j + 15, k + 10, air, 0);
		b(w, i + 7, j + 15, k + 11, air, 0);
		b(w, i + 7, j + 15, k + 12, air, 0);
		b(w, i + 7, j + 15, k + 13, air, 0);
		b(w, i + 7, j + 15, k + 14, air, 0);
		b(w, i + 7, j + 15, k + 15, air, 0);
		b(w, i + 7, j + 16, k, air, 0);
		b(w, i + 7, j + 16, k + 1, air, 0);
		b(w, i + 7, j + 16, k + 2, air, 0);
		b(w, i + 7, j + 16, k + 3, air, 0);
		b(w, i + 7, j + 16, k + 4, air, 0);
		b(w, i + 7, j + 16, k + 5, air, 0);
		b(w, i + 7, j + 16, k + 6, air, 0);
		b(w, i + 7, j + 16, k + 7, air, 0);
		b(w, i + 7, j + 16, k + 8, air, 0);
		b(w, i + 7, j + 16, k + 9, air, 0);
		b(w, i + 7, j + 16, k + 10, air, 0);
		b(w, i + 7, j + 16, k + 11, air, 0);
		b(w, i + 7, j + 16, k + 12, air, 0);
		b(w, i + 7, j + 16, k + 13, air, 0);
		b(w, i + 7, j + 16, k + 14, air, 0);
		b(w, i + 7, j + 16, k + 15, air, 0);
		b(w, i + 8, j, k, air, 0);
		b(w, i + 8, j, k + 1, air, 0);
		b(w, i + 8, j, k + 2, air, 0);
		b(w, i + 8, j, k + 3, air, 0);
		b(w, i + 8, j, k + 4, air, 0);
		b(w, i + 8, j, k + 5, air, 0);
		b(w, i + 8, j, k + 6, air, 0);
		b(w, i + 8, j, k + 7, stone, 0);
		b(w, i + 8, j, k + 8, stone, 0);
		b(w, i + 8, j, k + 9, stone, 0);
		b(w, i + 8, j, k + 10, stone, 0);
		b(w, i + 8, j, k + 11, air, 0);
		b(w, i + 8, j, k + 12, air, 0);
		b(w, i + 8, j, k + 13, air, 0);
		b(w, i + 8, j, k + 14, air, 0);
		b(w, i + 8, j, k + 15, air, 0);
		b(w, i + 8, j + 1, k, air, 0);
		b(w, i + 8, j + 1, k + 1, air, 0);
		b(w, i + 8, j + 1, k + 2, air, 0);
		b(w, i + 8, j + 1, k + 3, air, 0);
		b(w, i + 8, j + 1, k + 4, stone, 0);
		b(w, i + 8, j + 1, k + 5, stone, 0);
		b(w, i + 8, j + 1, k + 6, stone, 0);
		b(w, i + 8, j + 1, k + 7, stone, 0);
		b(w, i + 8, j + 1, k + 8, stone, 0);
		b(w, i + 8, j + 1, k + 9, stone, 0);
		b(w, i + 8, j + 1, k + 10, stone, 0);
		b(w, i + 8, j + 1, k + 11, stone, 0);
		b(w, i + 8, j + 1, k + 12, stone, 0);
		b(w, i + 8, j + 1, k + 13, air, 0);
		b(w, i + 8, j + 1, k + 14, air, 0);
		b(w, i + 8, j + 1, k + 15, air, 0);
		b(w, i + 8, j + 2, k, air, 0);
		b(w, i + 8, j + 2, k + 1, air, 0);
		b(w, i + 8, j + 2, k + 2, air, 0);
		b(w, i + 8, j + 2, k + 3, stone, 0);
		b(w, i + 8, j + 2, k + 4, stone, 0);
		b(w, i + 8, j + 2, k + 5, stone, 0);
		b(w, i + 8, j + 2, k + 6, stone, 0);
		b(w, i + 8, j + 2, k + 7, stone, 0);
		b(w, i + 8, j + 2, k + 8, stone, 0);
		b(w, i + 8, j + 2, k + 9, stone, 0);
		b(w, i + 8, j + 2, k + 10, stone, 0);
		b(w, i + 8, j + 2, k + 11, stone, 0);
		b(w, i + 8, j + 2, k + 12, stone, 0);
		b(w, i + 8, j + 2, k + 13, stone, 0);
		b(w, i + 8, j + 2, k + 14, stone, 0);
		b(w, i + 8, j + 2, k + 15, air, 0);
		b(w, i + 8, j + 3, k, air, 0);
		b(w, i + 8, j + 3, k + 1, air, 0);
		b(w, i + 8, j + 3, k + 2, stone, 0);
		b(w, i + 8, j + 3, k + 3, stone, 0);
		b(w, i + 8, j + 3, k + 4, stone, 0);
		b(w, i + 8, j + 3, k + 5, stone, 0);
		b(w, i + 8, j + 3, k + 6, stone, 0);
		b(w, i + 8, j + 3, k + 7, stone, 0);
		b(w, i + 8, j + 3, k + 8, stone, 0);
		b(w, i + 8, j + 3, k + 9, stone, 0);
		b(w, i + 8, j + 3, k + 10, stone, 0);
		b(w, i + 8, j + 3, k + 11, stone, 0);
		b(w, i + 8, j + 3, k + 12, stone, 0);
		b(w, i + 8, j + 3, k + 13, stone, 0);
		b(w, i + 8, j + 3, k + 14, stone, 0);
		b(w, i + 8, j + 3, k + 15, air, 0);
		b(w, i + 8, j + 4, k, air, 0);
		b(w, i + 8, j + 4, k + 1, stone, 0);
		b(w, i + 8, j + 4, k + 2, stone, 0);
		b(w, i + 8, j + 4, k + 3, stone, 0);
		b(w, i + 8, j + 4, k + 4, stone, 0);
		b(w, i + 8, j + 4, k + 5, stone, 0);
		b(w, i + 8, j + 4, k + 6, stone, 0);
		b(w, i + 8, j + 4, k + 7, air, 0);
		b(w, i + 8, j + 4, k + 8, stone, 0);
		b(w, i + 8, j + 4, k + 9, stone, 0);
		b(w, i + 8, j + 4, k + 10, stone, 0);
		b(w, i + 8, j + 4, k + 11, stone, 0);
		b(w, i + 8, j + 4, k + 12, air, 0);
		b(w, i + 8, j + 4, k + 13, air, 0);
		b(w, i + 8, j + 4, k + 14, air, 0);
		b(w, i + 8, j + 4, k + 15, air, 0);
		b(w, i + 8, j + 5, k, air, 0);
		b(w, i + 8, j + 5, k + 1, air, 0);
		b(w, i + 8, j + 5, k + 2, stone, 0);
		b(w, i + 8, j + 5, k + 3, stone, 0);
		b(w, i + 8, j + 5, k + 4, stone, 0);
		b(w, i + 8, j + 5, k + 5, stone, 0);
		b(w, i + 8, j + 5, k + 6, air, 0);
		b(w, i + 8, j + 5, k + 7, air, 0);
		b(w, i + 8, j + 5, k + 8, air, 0);
		b(w, i + 8, j + 5, k + 9, stone, 0);
		b(w, i + 8, j + 5, k + 10, stone, 0);
		b(w, i + 8, j + 5, k + 11, stone, 0);
		b(w, i + 8, j + 5, k + 12, air, 0);
		b(w, i + 8, j + 5, k + 13, air, 0);
		b(w, i + 8, j + 5, k + 14, air, 0);
		b(w, i + 8, j + 5, k + 15, air, 0);
		b(w, i + 8, j + 6, k, air, 0);
		b(w, i + 8, j + 6, k + 1, air, 0);
		b(w, i + 8, j + 6, k + 2, air, 0);
		b(w, i + 8, j + 6, k + 3, stone, 0);
		b(w, i + 8, j + 6, k + 4, stone, 0);
		b(w, i + 8, j + 6, k + 5, air, 0);
		b(w, i + 8, j + 6, k + 6, air, 0);
		b(w, i + 8, j + 6, k + 7, air, 0);
		b(w, i + 8, j + 6, k + 8, air, 0);
		b(w, i + 8, j + 6, k + 9, air, 0);
		b(w, i + 8, j + 6, k + 10, stone, 0);
		b(w, i + 8, j + 6, k + 11, stone, 0);
		b(w, i + 8, j + 6, k + 12, air, 0);
		b(w, i + 8, j + 6, k + 13, air, 0);
		b(w, i + 8, j + 6, k + 14, air, 0);
		b(w, i + 8, j + 6, k + 15, air, 0);
		b(w, i + 8, j + 7, k, air, 0);
		b(w, i + 8, j + 7, k + 1, air, 0);
		b(w, i + 8, j + 7, k + 2, stone, 0);
		b(w, i + 8, j + 7, k + 3, stone, 0);
		b(w, i + 8, j + 7, k + 4, stone, 0);
		b(w, i + 8, j + 7, k + 5, air, 0);
		b(w, i + 8, j + 7, k + 6, air, 0);
		b(w, i + 8, j + 7, k + 7, air, 0);
		b(w, i + 8, j + 7, k + 8, air, 0);
		b(w, i + 8, j + 7, k + 9, stone, 0);
		b(w, i + 8, j + 7, k + 10, stone, 0);
		b(w, i + 8, j + 7, k + 11, stone, 0);
		b(w, i + 8, j + 7, k + 12, air, 0);
		b(w, i + 8, j + 7, k + 13, air, 0);
		b(w, i + 8, j + 7, k + 14, air, 0);
		b(w, i + 8, j + 7, k + 15, air, 0);
		b(w, i + 8, j + 8, k, air, 0);
		b(w, i + 8, j + 8, k + 1, air, 0);
		b(w, i + 8, j + 8, k + 2, air, 0);
		b(w, i + 8, j + 8, k + 3, stone, 0);
		b(w, i + 8, j + 8, k + 4, stone, 0);
		b(w, i + 8, j + 8, k + 5, stone, 0);
		b(w, i + 8, j + 8, k + 6, stone, 0);
		b(w, i + 8, j + 8, k + 7, stone, 0);
		b(w, i + 8, j + 8, k + 8, stone, 0);
		b(w, i + 8, j + 8, k + 9, stone, 0);
		b(w, i + 8, j + 8, k + 10, stone, 0);
		b(w, i + 8, j + 8, k + 11, air, 0);
		b(w, i + 8, j + 8, k + 12, air, 0);
		b(w, i + 8, j + 8, k + 13, air, 0);
		b(w, i + 8, j + 8, k + 14, air, 0);
		b(w, i + 8, j + 8, k + 15, air, 0);
		b(w, i + 8, j + 9, k, air, 0);
		b(w, i + 8, j + 9, k + 1, air, 0);
		b(w, i + 8, j + 9, k + 2, air, 0);
		b(w, i + 8, j + 9, k + 3, stone, 0);
		b(w, i + 8, j + 9, k + 4, stone, 0);
		b(w, i + 8, j + 9, k + 5, stone, 0);
		b(w, i + 8, j + 9, k + 6, stone, 0);
		b(w, i + 8, j + 9, k + 7, stone, 0);
		b(w, i + 8, j + 9, k + 8, air, 0);
		b(w, i + 8, j + 9, k + 9, stone, 0);
		b(w, i + 8, j + 9, k + 10, stone, 0);
		b(w, i + 8, j + 9, k + 11, stone, 0);
		b(w, i + 8, j + 9, k + 12, air, 0);
		b(w, i + 8, j + 9, k + 13, air, 0);
		b(w, i + 8, j + 9, k + 14, air, 0);
		b(w, i + 8, j + 9, k + 15, air, 0);
		b(w, i + 8, j + 10, k, air, 0);
		b(w, i + 8, j + 10, k + 1, air, 0);
		b(w, i + 8, j + 10, k + 2, air, 0);
		b(w, i + 8, j + 10, k + 3, stone, 0);
		b(w, i + 8, j + 10, k + 4, stone, 0);
		b(w, i + 8, j + 10, k + 5, stone, 0);
		b(w, i + 8, j + 10, k + 6, stone, 0);
		b(w, i + 8, j + 10, k + 7, stone, 0);
		b(w, i + 8, j + 10, k + 8, air, 0);
		b(w, i + 8, j + 10, k + 9, stone, 0);
		b(w, i + 8, j + 10, k + 10, stone, 0);
		b(w, i + 8, j + 10, k + 11, stone, 0);
		b(w, i + 8, j + 10, k + 12, stone, 0);
		b(w, i + 8, j + 10, k + 13, air, 0);
		b(w, i + 8, j + 10, k + 14, air, 0);
		b(w, i + 8, j + 10, k + 15, air, 0);
		b(w, i + 8, j + 11, k, air, 0);
		b(w, i + 8, j + 11, k + 1, air, 0);
		b(w, i + 8, j + 11, k + 2, stone, 0);
		b(w, i + 8, j + 11, k + 3, stone, 0);
		b(w, i + 8, j + 11, k + 4, stone, 0);
		b(w, i + 8, j + 11, k + 5, stone, 0);
		b(w, i + 8, j + 11, k + 6, stone, 0);
		b(w, i + 8, j + 11, k + 7, stone, 0);
		b(w, i + 8, j + 11, k + 8, air, 0);
		b(w, i + 8, j + 11, k + 9, stone, 0);
		b(w, i + 8, j + 11, k + 10, stone, 0);
		b(w, i + 8, j + 11, k + 11, stone, 0);
		b(w, i + 8, j + 11, k + 12, stone, 0);
		b(w, i + 8, j + 11, k + 13, air, 0);
		b(w, i + 8, j + 11, k + 14, air, 0);
		b(w, i + 8, j + 11, k + 15, air, 0);
		b(w, i + 8, j + 12, k, air, 0);
		b(w, i + 8, j + 12, k + 1, air, 0);
		b(w, i + 8, j + 12, k + 2, air, 0);
		b(w, i + 8, j + 12, k + 3, stone, 0);
		b(w, i + 8, j + 12, k + 4, stone, 0);
		b(w, i + 8, j + 12, k + 5, stone, 0);
		b(w, i + 8, j + 12, k + 6, stone, 0);
		b(w, i + 8, j + 12, k + 7, stone, 0);
		b(w, i + 8, j + 12, k + 8, air, 0);
		b(w, i + 8, j + 12, k + 9, stone, 0);
		b(w, i + 8, j + 12, k + 10, stone, 0);
		b(w, i + 8, j + 12, k + 11, stone, 0);
		b(w, i + 8, j + 12, k + 12, stone, 0);
		b(w, i + 8, j + 12, k + 13, stone, 0);
		b(w, i + 8, j + 12, k + 14, air, 0);
		b(w, i + 8, j + 12, k + 15, air, 0);
		b(w, i + 8, j + 13, k, air, 0);
		b(w, i + 8, j + 13, k + 1, air, 0);
		b(w, i + 8, j + 13, k + 2, air, 0);
		b(w, i + 8, j + 13, k + 3, stone, 0);
		b(w, i + 8, j + 13, k + 4, stone, 0);
		b(w, i + 8, j + 13, k + 5, stone, 0);
		b(w, i + 8, j + 13, k + 6, stone, 0);
		b(w, i + 8, j + 13, k + 7, stone, 0);
		b(w, i + 8, j + 13, k + 8, air, 0);
		b(w, i + 8, j + 13, k + 9, stone, 0);
		b(w, i + 8, j + 13, k + 10, stone, 0);
		b(w, i + 8, j + 13, k + 11, stone, 0);
		b(w, i + 8, j + 13, k + 12, stone, 0);
		b(w, i + 8, j + 13, k + 13, stone, 0);
		b(w, i + 8, j + 13, k + 14, stone, 0);
		b(w, i + 8, j + 13, k + 15, air, 0);
		b(w, i + 8, j + 14, k, air, 0);
		b(w, i + 8, j + 14, k + 1, air, 0);
		b(w, i + 8, j + 14, k + 2, air, 0);
		b(w, i + 8, j + 14, k + 3, stone, 0);
		b(w, i + 8, j + 14, k + 4, stone, 0);
		b(w, i + 8, j + 14, k + 5, stone, 0);
		b(w, i + 8, j + 14, k + 6, stone, 0);
		b(w, i + 8, j + 14, k + 7, stone, 0);
		b(w, i + 8, j + 14, k + 8, air, 0);
		b(w, i + 8, j + 14, k + 9, stone, 0);
		b(w, i + 8, j + 14, k + 10, stone, 0);
		b(w, i + 8, j + 14, k + 11, stone, 0);
		b(w, i + 8, j + 14, k + 12, stone, 0);
		b(w, i + 8, j + 14, k + 13, stone, 0);
		b(w, i + 8, j + 14, k + 14, air, 0);
		b(w, i + 8, j + 14, k + 15, air, 0);
		b(w, i + 8, j + 15, k, air, 0);
		b(w, i + 8, j + 15, k + 1, air, 0);
		b(w, i + 8, j + 15, k + 2, air, 0);
		b(w, i + 8, j + 15, k + 3, air, 0);
		b(w, i + 8, j + 15, k + 4, stone, 0);
		b(w, i + 8, j + 15, k + 5, stone, 0);
		b(w, i + 8, j + 15, k + 6, stone, 0);
		b(w, i + 8, j + 15, k + 7, stone, 0);
		b(w, i + 8, j + 15, k + 8, air, 0);
		b(w, i + 8, j + 15, k + 9, stone, 0);
		b(w, i + 8, j + 15, k + 10, stone, 0);
		b(w, i + 8, j + 15, k + 11, stone, 0);
		b(w, i + 8, j + 15, k + 12, stone, 0);
		b(w, i + 8, j + 15, k + 13, air, 0);
		b(w, i + 8, j + 15, k + 14, air, 0);
		b(w, i + 8, j + 15, k + 15, air, 0);
		b(w, i + 8, j + 16, k, air, 0);
		b(w, i + 8, j + 16, k + 1, air, 0);
		b(w, i + 8, j + 16, k + 2, air, 0);
		b(w, i + 8, j + 16, k + 3, air, 0);
		b(w, i + 8, j + 16, k + 4, air, 0);
		b(w, i + 8, j + 16, k + 5, air, 0);
		b(w, i + 8, j + 16, k + 6, stone, 0);
		b(w, i + 8, j + 16, k + 7, air, 0);
		b(w, i + 8, j + 16, k + 8, stone, 0);
		b(w, i + 8, j + 16, k + 9, air, 0);
		b(w, i + 8, j + 16, k + 10, air, 0);
		b(w, i + 8, j + 16, k + 11, air, 0);
		b(w, i + 8, j + 16, k + 12, air, 0);
		b(w, i + 8, j + 16, k + 13, air, 0);
		b(w, i + 8, j + 16, k + 14, air, 0);
		b(w, i + 8, j + 16, k + 15, air, 0);
		b(w, i + 9, j, k, air, 0);
		b(w, i + 9, j, k + 1, air, 0);
		b(w, i + 9, j, k + 2, air, 0);
		b(w, i + 9, j, k + 3, air, 0);
		b(w, i + 9, j, k + 4, air, 0);
		b(w, i + 9, j, k + 5, air, 0);
		b(w, i + 9, j, k + 6, stone, 0);
		b(w, i + 9, j, k + 7, stone, 0);
		b(w, i + 9, j, k + 8, stone, 0);
		b(w, i + 9, j, k + 9, stone, 0);
		b(w, i + 9, j, k + 10, stone, 0);
		b(w, i + 9, j, k + 11, air, 0);
		b(w, i + 9, j, k + 12, air, 0);
		b(w, i + 9, j, k + 13, air, 0);
		b(w, i + 9, j, k + 14, air, 0);
		b(w, i + 9, j, k + 15, air, 0);
		b(w, i + 9, j + 1, k, air, 0);
		b(w, i + 9, j + 1, k + 1, air, 0);
		b(w, i + 9, j + 1, k + 2, air, 0);
		b(w, i + 9, j + 1, k + 3, air, 0);
		b(w, i + 9, j + 1, k + 4, stone, 0);
		b(w, i + 9, j + 1, k + 5, stone, 0);
		b(w, i + 9, j + 1, k + 6, stone, 0);
		b(w, i + 9, j + 1, k + 7, stone, 0);
		b(w, i + 9, j + 1, k + 8, stone, 0);
		b(w, i + 9, j + 1, k + 9, stone, 0);
		b(w, i + 9, j + 1, k + 10, stone, 0);
		b(w, i + 9, j + 1, k + 11, stone, 0);
		b(w, i + 9, j + 1, k + 12, stone, 0);
		b(w, i + 9, j + 1, k + 13, air, 0);
		b(w, i + 9, j + 1, k + 14, air, 0);
		b(w, i + 9, j + 1, k + 15, air, 0);
		b(w, i + 9, j + 2, k, air, 0);
		b(w, i + 9, j + 2, k + 1, air, 0);
		b(w, i + 9, j + 2, k + 2, air, 0);
		b(w, i + 9, j + 2, k + 3, stone, 0);
		b(w, i + 9, j + 2, k + 4, stone, 0);
		b(w, i + 9, j + 2, k + 5, stone, 0);
		b(w, i + 9, j + 2, k + 6, stone, 0);
		b(w, i + 9, j + 2, k + 7, stone, 0);
		b(w, i + 9, j + 2, k + 8, stone, 0);
		b(w, i + 9, j + 2, k + 9, stone, 0);
		b(w, i + 9, j + 2, k + 10, stone, 0);
		b(w, i + 9, j + 2, k + 11, stone, 0);
		b(w, i + 9, j + 2, k + 12, stone, 0);
		b(w, i + 9, j + 2, k + 13, stone, 0);
		b(w, i + 9, j + 2, k + 14, air, 0);
		b(w, i + 9, j + 2, k + 15, air, 0);
		b(w, i + 9, j + 3, k, air, 0);
		b(w, i + 9, j + 3, k + 1, air, 0);
		b(w, i + 9, j + 3, k + 2, stone, 0);
		b(w, i + 9, j + 3, k + 3, stone, 0);
		b(w, i + 9, j + 3, k + 4, stone, 0);
		b(w, i + 9, j + 3, k + 5, stone, 0);
		b(w, i + 9, j + 3, k + 6, stone, 0);
		b(w, i + 9, j + 3, k + 7, stone, 0);
		b(w, i + 9, j + 3, k + 8, stone, 0);
		generate_5(w, i, j, k);
	}

	public static void generate_5(World w, int i, int j, int k)
	{
		b(w, i + 9, j + 3, k + 9, stone, 0);
		b(w, i + 9, j + 3, k + 10, stone, 0);
		b(w, i + 9, j + 3, k + 11, stone, 0);
		b(w, i + 9, j + 3, k + 12, stone, 0);
		b(w, i + 9, j + 3, k + 13, stone, 0);
		b(w, i + 9, j + 3, k + 14, stone, 0);
		b(w, i + 9, j + 3, k + 15, air, 0);
		b(w, i + 9, j + 4, k, air, 0);
		b(w, i + 9, j + 4, k + 1, air, 0);
		b(w, i + 9, j + 4, k + 2, stone, 0);
		b(w, i + 9, j + 4, k + 3, stone, 0);
		b(w, i + 9, j + 4, k + 4, stone, 0);
		b(w, i + 9, j + 4, k + 5, air, 0);
		b(w, i + 9, j + 4, k + 6, air, 0);
		b(w, i + 9, j + 4, k + 7, air, 0);
		b(w, i + 9, j + 4, k + 8, air, 0);
		b(w, i + 9, j + 4, k + 9, stone, 0);
		b(w, i + 9, j + 4, k + 10, stone, 0);
		b(w, i + 9, j + 4, k + 11, stone, 0);
		b(w, i + 9, j + 4, k + 12, air, 0);
		b(w, i + 9, j + 4, k + 13, air, 0);
		b(w, i + 9, j + 4, k + 14, air, 0);
		b(w, i + 9, j + 4, k + 15, air, 0);
		b(w, i + 9, j + 5, k, air, 0);
		b(w, i + 9, j + 5, k + 1, air, 0);
		b(w, i + 9, j + 5, k + 2, air, 0);
		b(w, i + 9, j + 5, k + 3, air, 0);
		b(w, i + 9, j + 5, k + 4, stone, 0);
		b(w, i + 9, j + 5, k + 5, air, 0);
		b(w, i + 9, j + 5, k + 6, air, 0);
		b(w, i + 9, j + 5, k + 7, air, 0);
		b(w, i + 9, j + 5, k + 8, air, 0);
		b(w, i + 9, j + 5, k + 9, air, 0);
		b(w, i + 9, j + 5, k + 10, stone, 0);
		b(w, i + 9, j + 5, k + 11, stone, 0);
		b(w, i + 9, j + 5, k + 12, air, 0);
		b(w, i + 9, j + 5, k + 13, air, 0);
		b(w, i + 9, j + 5, k + 14, air, 0);
		b(w, i + 9, j + 5, k + 15, air, 0);
		b(w, i + 9, j + 6, k, air, 0);
		b(w, i + 9, j + 6, k + 1, air, 0);
		b(w, i + 9, j + 6, k + 2, air, 0);
		b(w, i + 9, j + 6, k + 3, stone, 0);
		b(w, i + 9, j + 6, k + 4, stone, 0);
		b(w, i + 9, j + 6, k + 5, air, 0);
		b(w, i + 9, j + 6, k + 6, air, 0);
		b(w, i + 9, j + 6, k + 7, air, 0);
		b(w, i + 9, j + 6, k + 8, air, 0);
		b(w, i + 9, j + 6, k + 9, air, 0);
		b(w, i + 9, j + 6, k + 10, stone, 0);
		b(w, i + 9, j + 6, k + 11, stone, 0);
		b(w, i + 9, j + 6, k + 12, air, 0);
		b(w, i + 9, j + 6, k + 13, air, 0);
		b(w, i + 9, j + 6, k + 14, air, 0);
		b(w, i + 9, j + 6, k + 15, air, 0);
		b(w, i + 9, j + 7, k, air, 0);
		b(w, i + 9, j + 7, k + 1, air, 0);
		b(w, i + 9, j + 7, k + 2, air, 0);
		b(w, i + 9, j + 7, k + 3, stone, 0);
		b(w, i + 9, j + 7, k + 4, stone, 0);
		b(w, i + 9, j + 7, k + 5, air, 0);
		b(w, i + 9, j + 7, k + 6, air, 0);
		b(w, i + 9, j + 7, k + 7, air, 0);
		b(w, i + 9, j + 7, k + 8, air, 0);
		b(w, i + 9, j + 7, k + 9, air, 0);
		b(w, i + 9, j + 7, k + 10, stone, 0);
		b(w, i + 9, j + 7, k + 11, stone, 0);
		b(w, i + 9, j + 7, k + 12, air, 0);
		b(w, i + 9, j + 7, k + 13, air, 0);
		b(w, i + 9, j + 7, k + 14, air, 0);
		b(w, i + 9, j + 7, k + 15, air, 0);
		b(w, i + 9, j + 8, k, air, 0);
		b(w, i + 9, j + 8, k + 1, air, 0);
		b(w, i + 9, j + 8, k + 2, air, 0);
		b(w, i + 9, j + 8, k + 3, stone, 0);
		b(w, i + 9, j + 8, k + 4, stone, 0);
		b(w, i + 9, j + 8, k + 5, stone, 0);
		b(w, i + 9, j + 8, k + 6, air, 0);
		b(w, i + 9, j + 8, k + 7, air, 0);
		b(w, i + 9, j + 8, k + 8, air, 0);
		b(w, i + 9, j + 8, k + 9, stone, 0);
		b(w, i + 9, j + 8, k + 10, stone, 0);
		b(w, i + 9, j + 8, k + 11, air, 0);
		b(w, i + 9, j + 8, k + 12, air, 0);
		b(w, i + 9, j + 8, k + 13, air, 0);
		b(w, i + 9, j + 8, k + 14, air, 0);
		b(w, i + 9, j + 8, k + 15, air, 0);
		b(w, i + 9, j + 9, k, air, 0);
		b(w, i + 9, j + 9, k + 1, air, 0);
		b(w, i + 9, j + 9, k + 2, air, 0);
		b(w, i + 9, j + 9, k + 3, stone, 0);
		b(w, i + 9, j + 9, k + 4, stone, 0);
		b(w, i + 9, j + 9, k + 5, stone, 0);
		b(w, i + 9, j + 9, k + 6, air, 0);
		b(w, i + 9, j + 9, k + 7, air, 0);
		b(w, i + 9, j + 9, k + 8, air, 0);
		b(w, i + 9, j + 9, k + 9, stone, 0);
		b(w, i + 9, j + 9, k + 10, stone, 0);
		b(w, i + 9, j + 9, k + 11, air, 0);
		b(w, i + 9, j + 9, k + 12, air, 0);
		b(w, i + 9, j + 9, k + 13, air, 0);
		b(w, i + 9, j + 9, k + 14, air, 0);
		b(w, i + 9, j + 9, k + 15, air, 0);
		b(w, i + 9, j + 10, k, air, 0);
		b(w, i + 9, j + 10, k + 1, air, 0);
		b(w, i + 9, j + 10, k + 2, air, 0);
		b(w, i + 9, j + 10, k + 3, stone, 0);
		b(w, i + 9, j + 10, k + 4, stone, 0);
		b(w, i + 9, j + 10, k + 5, stone, 0);
		b(w, i + 9, j + 10, k + 6, stone, 0);
		b(w, i + 9, j + 10, k + 7, stone, 0);
		b(w, i + 9, j + 10, k + 8, stone, 0);
		b(w, i + 9, j + 10, k + 9, stone, 0);
		b(w, i + 9, j + 10, k + 10, stone, 0);
		b(w, i + 9, j + 10, k + 11, stone, 0);
		b(w, i + 9, j + 10, k + 12, air, 0);
		b(w, i + 9, j + 10, k + 13, air, 0);
		b(w, i + 9, j + 10, k + 14, air, 0);
		b(w, i + 9, j + 10, k + 15, air, 0);
		b(w, i + 9, j + 11, k, air, 0);
		b(w, i + 9, j + 11, k + 1, air, 0);
		b(w, i + 9, j + 11, k + 2, air, 0);
		b(w, i + 9, j + 11, k + 3, air, 0);
		b(w, i + 9, j + 11, k + 4, stone, 0);
		b(w, i + 9, j + 11, k + 5, stone, 0);
		b(w, i + 9, j + 11, k + 6, stone, 0);
		b(w, i + 9, j + 11, k + 7, stone, 0);
		b(w, i + 9, j + 11, k + 8, stone, 0);
		b(w, i + 9, j + 11, k + 9, stone, 0);
		b(w, i + 9, j + 11, k + 10, stone, 0);
		b(w, i + 9, j + 11, k + 11, stone, 0);
		b(w, i + 9, j + 11, k + 12, stone, 0);
		b(w, i + 9, j + 11, k + 13, air, 0);
		b(w, i + 9, j + 11, k + 14, air, 0);
		b(w, i + 9, j + 11, k + 15, air, 0);
		b(w, i + 9, j + 12, k, air, 0);
		b(w, i + 9, j + 12, k + 1, air, 0);
		b(w, i + 9, j + 12, k + 2, air, 0);
		b(w, i + 9, j + 12, k + 3, air, 0);
		b(w, i + 9, j + 12, k + 4, stone, 0);
		b(w, i + 9, j + 12, k + 5, air, 0);
		b(w, i + 9, j + 12, k + 6, air, 0);
		b(w, i + 9, j + 12, k + 7, stone, 0);
		b(w, i + 9, j + 12, k + 8, stone, 0);
		b(w, i + 9, j + 12, k + 9, stone, 0);
		b(w, i + 9, j + 12, k + 10, stone, 0);
		b(w, i + 9, j + 12, k + 11, stone, 0);
		b(w, i + 9, j + 12, k + 12, stone, 0);
		b(w, i + 9, j + 12, k + 13, stone, 0);
		b(w, i + 9, j + 12, k + 14, air, 0);
		b(w, i + 9, j + 12, k + 15, air, 0);
		b(w, i + 9, j + 13, k, air, 0);
		b(w, i + 9, j + 13, k + 1, air, 0);
		b(w, i + 9, j + 13, k + 2, air, 0);
		b(w, i + 9, j + 13, k + 3, air, 0);
		b(w, i + 9, j + 13, k + 4, air, 0);
		b(w, i + 9, j + 13, k + 5, air, 0);
		b(w, i + 9, j + 13, k + 6, air, 0);
		b(w, i + 9, j + 13, k + 7, air, 0);
		b(w, i + 9, j + 13, k + 8, air, 0);
		b(w, i + 9, j + 13, k + 9, stone, 0);
		b(w, i + 9, j + 13, k + 10, stone, 0);
		b(w, i + 9, j + 13, k + 11, stone, 0);
		b(w, i + 9, j + 13, k + 12, stone, 0);
		b(w, i + 9, j + 13, k + 13, stone, 0);
		b(w, i + 9, j + 13, k + 14, stone, 0);
		b(w, i + 9, j + 13, k + 15, air, 0);
		b(w, i + 9, j + 14, k, air, 0);
		b(w, i + 9, j + 14, k + 1, air, 0);
		b(w, i + 9, j + 14, k + 2, air, 0);
		b(w, i + 9, j + 14, k + 3, air, 0);
		b(w, i + 9, j + 14, k + 4, air, 0);
		b(w, i + 9, j + 14, k + 5, air, 0);
		b(w, i + 9, j + 14, k + 6, air, 0);
		b(w, i + 9, j + 14, k + 7, air, 0);
		b(w, i + 9, j + 14, k + 8, air, 0);
		b(w, i + 9, j + 14, k + 9, stone, 0);
		b(w, i + 9, j + 14, k + 10, stone, 0);
		b(w, i + 9, j + 14, k + 11, stone, 0);
		b(w, i + 9, j + 14, k + 12, stone, 0);
		b(w, i + 9, j + 14, k + 13, stone, 0);
		b(w, i + 9, j + 14, k + 14, air, 0);
		b(w, i + 9, j + 14, k + 15, air, 0);
		b(w, i + 9, j + 15, k, air, 0);
		b(w, i + 9, j + 15, k + 1, air, 0);
		b(w, i + 9, j + 15, k + 2, air, 0);
		b(w, i + 9, j + 15, k + 3, air, 0);
		b(w, i + 9, j + 15, k + 4, air, 0);
		b(w, i + 9, j + 15, k + 5, air, 0);
		b(w, i + 9, j + 15, k + 6, air, 0);
		b(w, i + 9, j + 15, k + 7, air, 0);
		b(w, i + 9, j + 15, k + 8, air, 0);
		b(w, i + 9, j + 15, k + 9, stone, 0);
		b(w, i + 9, j + 15, k + 10, stone, 0);
		b(w, i + 9, j + 15, k + 11, stone, 0);
		b(w, i + 9, j + 15, k + 12, stone, 0);
		b(w, i + 9, j + 15, k + 13, air, 0);
		b(w, i + 9, j + 15, k + 14, air, 0);
		b(w, i + 9, j + 15, k + 15, air, 0);
		b(w, i + 9, j + 16, k, air, 0);
		b(w, i + 9, j + 16, k + 1, air, 0);
		b(w, i + 9, j + 16, k + 2, air, 0);
		b(w, i + 9, j + 16, k + 3, air, 0);
		b(w, i + 9, j + 16, k + 4, air, 0);
		b(w, i + 9, j + 16, k + 5, air, 0);
		b(w, i + 9, j + 16, k + 6, air, 0);
		b(w, i + 9, j + 16, k + 7, air, 0);
		b(w, i + 9, j + 16, k + 8, air, 0);
		b(w, i + 9, j + 16, k + 9, stone, 0);
		b(w, i + 9, j + 16, k + 10, stone, 0);
		b(w, i + 9, j + 16, k + 11, air, 0);
		b(w, i + 9, j + 16, k + 12, air, 0);
		b(w, i + 9, j + 16, k + 13, air, 0);
		b(w, i + 9, j + 16, k + 14, air, 0);
		b(w, i + 9, j + 16, k + 15, air, 0);
		b(w, i + 10, j, k, air, 0);
		b(w, i + 10, j, k + 1, air, 0);
		b(w, i + 10, j, k + 2, air, 0);
		b(w, i + 10, j, k + 3, air, 0);
		b(w, i + 10, j, k + 4, air, 0);
		b(w, i + 10, j, k + 5, air, 0);
		b(w, i + 10, j, k + 6, stone, 0);
		b(w, i + 10, j, k + 7, stone, 0);
		b(w, i + 10, j, k + 8, stone, 0);
		b(w, i + 10, j, k + 9, stone, 0);
		b(w, i + 10, j, k + 10, stone, 0);
		b(w, i + 10, j, k + 11, air, 0);
		b(w, i + 10, j, k + 12, air, 0);
		b(w, i + 10, j, k + 13, air, 0);
		b(w, i + 10, j, k + 14, air, 0);
		b(w, i + 10, j, k + 15, air, 0);
		b(w, i + 10, j + 1, k, air, 0);
		b(w, i + 10, j + 1, k + 1, air, 0);
		b(w, i + 10, j + 1, k + 2, air, 0);
		b(w, i + 10, j + 1, k + 3, air, 0);
		b(w, i + 10, j + 1, k + 4, stone, 0);
		b(w, i + 10, j + 1, k + 5, stone, 0);
		b(w, i + 10, j + 1, k + 6, stone, 0);
		b(w, i + 10, j + 1, k + 7, stone, 0);
		b(w, i + 10, j + 1, k + 8, stone, 0);
		b(w, i + 10, j + 1, k + 9, stone, 0);
		b(w, i + 10, j + 1, k + 10, stone, 0);
		b(w, i + 10, j + 1, k + 11, stone, 0);
		b(w, i + 10, j + 1, k + 12, stone, 0);
		b(w, i + 10, j + 1, k + 13, air, 0);
		b(w, i + 10, j + 1, k + 14, air, 0);
		b(w, i + 10, j + 1, k + 15, air, 0);
		b(w, i + 10, j + 2, k, air, 0);
		b(w, i + 10, j + 2, k + 1, air, 0);
		b(w, i + 10, j + 2, k + 2, air, 0);
		b(w, i + 10, j + 2, k + 3, stone, 0);
		b(w, i + 10, j + 2, k + 4, stone, 0);
		b(w, i + 10, j + 2, k + 5, stone, 0);
		b(w, i + 10, j + 2, k + 6, stone, 0);
		b(w, i + 10, j + 2, k + 7, stone, 0);
		b(w, i + 10, j + 2, k + 8, stone, 0);
		b(w, i + 10, j + 2, k + 9, stone, 0);
		b(w, i + 10, j + 2, k + 10, stone, 0);
		b(w, i + 10, j + 2, k + 11, stone, 0);
		b(w, i + 10, j + 2, k + 12, stone, 0);
		b(w, i + 10, j + 2, k + 13, stone, 0);
		b(w, i + 10, j + 2, k + 14, air, 0);
		b(w, i + 10, j + 2, k + 15, air, 0);
		b(w, i + 10, j + 3, k, air, 0);
		b(w, i + 10, j + 3, k + 1, air, 0);
		b(w, i + 10, j + 3, k + 2, stone, 0);
		b(w, i + 10, j + 3, k + 3, stone, 0);
		b(w, i + 10, j + 3, k + 4, stone, 0);
		b(w, i + 10, j + 3, k + 5, stone, 0);
		b(w, i + 10, j + 3, k + 6, stone, 0);
		b(w, i + 10, j + 3, k + 7, air, 0);
		b(w, i + 10, j + 3, k + 8, stone, 0);
		b(w, i + 10, j + 3, k + 9, stone, 0);
		b(w, i + 10, j + 3, k + 10, stone, 0);
		b(w, i + 10, j + 3, k + 11, stone, 0);
		b(w, i + 10, j + 3, k + 12, stone, 0);
		b(w, i + 10, j + 3, k + 13, stone, 0);
		b(w, i + 10, j + 3, k + 14, stone, 0);
		b(w, i + 10, j + 3, k + 15, air, 0);
		b(w, i + 10, j + 4, k, air, 0);
		b(w, i + 10, j + 4, k + 1, air, 0);
		b(w, i + 10, j + 4, k + 2, air, 0);
		b(w, i + 10, j + 4, k + 3, air, 0);
		b(w, i + 10, j + 4, k + 4, stone, 0);
		b(w, i + 10, j + 4, k + 5, air, 0);
		b(w, i + 10, j + 4, k + 6, air, 0);
		b(w, i + 10, j + 4, k + 7, air, 0);
		b(w, i + 10, j + 4, k + 8, air, 0);
		b(w, i + 10, j + 4, k + 9, stone, 0);
		b(w, i + 10, j + 4, k + 10, stone, 0);
		b(w, i + 10, j + 4, k + 11, stone, 0);
		b(w, i + 10, j + 4, k + 12, air, 0);
		b(w, i + 10, j + 4, k + 13, air, 0);
		b(w, i + 10, j + 4, k + 14, air, 0);
		b(w, i + 10, j + 4, k + 15, air, 0);
		b(w, i + 10, j + 5, k, air, 0);
		b(w, i + 10, j + 5, k + 1, air, 0);
		b(w, i + 10, j + 5, k + 2, air, 0);
		b(w, i + 10, j + 5, k + 3, air, 0);
		b(w, i + 10, j + 5, k + 4, stone, 0);
		b(w, i + 10, j + 5, k + 5, air, 0);
		b(w, i + 10, j + 5, k + 6, air, 0);
		b(w, i + 10, j + 5, k + 7, air, 0);
		b(w, i + 10, j + 5, k + 8, air, 0);
		b(w, i + 10, j + 5, k + 9, air, 0);
		b(w, i + 10, j + 5, k + 10, stone, 0);
		b(w, i + 10, j + 5, k + 11, stone, 0);
		b(w, i + 10, j + 5, k + 12, air, 0);
		b(w, i + 10, j + 5, k + 13, air, 0);
		b(w, i + 10, j + 5, k + 14, air, 0);
		b(w, i + 10, j + 5, k + 15, air, 0);
		b(w, i + 10, j + 6, k, air, 0);
		b(w, i + 10, j + 6, k + 1, air, 0);
		b(w, i + 10, j + 6, k + 2, air, 0);
		b(w, i + 10, j + 6, k + 3, air, 0);
		b(w, i + 10, j + 6, k + 4, stone, 0);
		b(w, i + 10, j + 6, k + 5, air, 0);
		b(w, i + 10, j + 6, k + 6, air, 0);
		b(w, i + 10, j + 6, k + 7, air, 0);
		b(w, i + 10, j + 6, k + 8, air, 0);
		b(w, i + 10, j + 6, k + 9, air, 0);
		b(w, i + 10, j + 6, k + 10, stone, 0);
		b(w, i + 10, j + 6, k + 11, stone, 0);
		b(w, i + 10, j + 6, k + 12, air, 0);
		b(w, i + 10, j + 6, k + 13, air, 0);
		b(w, i + 10, j + 6, k + 14, air, 0);
		b(w, i + 10, j + 6, k + 15, air, 0);
		b(w, i + 10, j + 7, k, air, 0);
		b(w, i + 10, j + 7, k + 1, air, 0);
		b(w, i + 10, j + 7, k + 2, air, 0);
		b(w, i + 10, j + 7, k + 3, air, 0);
		b(w, i + 10, j + 7, k + 4, stone, 0);
		b(w, i + 10, j + 7, k + 5, air, 0);
		b(w, i + 10, j + 7, k + 6, air, 0);
		b(w, i + 10, j + 7, k + 7, air, 0);
		b(w, i + 10, j + 7, k + 8, air, 0);
		b(w, i + 10, j + 7, k + 9, air, 0);
		b(w, i + 10, j + 7, k + 10, stone, 0);
		b(w, i + 10, j + 7, k + 11, stone, 0);
		b(w, i + 10, j + 7, k + 12, air, 0);
		b(w, i + 10, j + 7, k + 13, air, 0);
		b(w, i + 10, j + 7, k + 14, air, 0);
		b(w, i + 10, j + 7, k + 15, air, 0);
		b(w, i + 10, j + 8, k, air, 0);
		b(w, i + 10, j + 8, k + 1, air, 0);
		b(w, i + 10, j + 8, k + 2, air, 0);
		b(w, i + 10, j + 8, k + 3, air, 0);
		b(w, i + 10, j + 8, k + 4, stone, 0);
		b(w, i + 10, j + 8, k + 5, stone, 0);
		b(w, i + 10, j + 8, k + 6, air, 0);
		b(w, i + 10, j + 8, k + 7, air, 0);
		b(w, i + 10, j + 8, k + 8, air, 0);
		b(w, i + 10, j + 8, k + 9, stone, 0);
		b(w, i + 10, j + 8, k + 10, stone, 0);
		b(w, i + 10, j + 8, k + 11, air, 0);
		b(w, i + 10, j + 8, k + 12, air, 0);
		b(w, i + 10, j + 8, k + 13, air, 0);
		b(w, i + 10, j + 8, k + 14, air, 0);
		b(w, i + 10, j + 8, k + 15, air, 0);
		b(w, i + 10, j + 9, k, air, 0);
		b(w, i + 10, j + 9, k + 1, air, 0);
		b(w, i + 10, j + 9, k + 2, air, 0);
		b(w, i + 10, j + 9, k + 3, air, 0);
		b(w, i + 10, j + 9, k + 4, stone, 0);
		b(w, i + 10, j + 9, k + 5, stone, 0);
		b(w, i + 10, j + 9, k + 6, air, 0);
		b(w, i + 10, j + 9, k + 7, air, 0);
		b(w, i + 10, j + 9, k + 8, air, 0);
		b(w, i + 10, j + 9, k + 9, stone, 0);
		b(w, i + 10, j + 9, k + 10, stone, 0);
		b(w, i + 10, j + 9, k + 11, air, 0);
		b(w, i + 10, j + 9, k + 12, air, 0);
		b(w, i + 10, j + 9, k + 13, air, 0);
		b(w, i + 10, j + 9, k + 14, air, 0);
		b(w, i + 10, j + 9, k + 15, air, 0);
		b(w, i + 10, j + 10, k, air, 0);
		b(w, i + 10, j + 10, k + 1, air, 0);
		b(w, i + 10, j + 10, k + 2, air, 0);
		b(w, i + 10, j + 10, k + 3, air, 0);
		b(w, i + 10, j + 10, k + 4, stone, 0);
		b(w, i + 10, j + 10, k + 5, stone, 0);
		b(w, i + 10, j + 10, k + 6, stone, 0);
		b(w, i + 10, j + 10, k + 7, stone, 0);
		b(w, i + 10, j + 10, k + 8, stone, 0);
		b(w, i + 10, j + 10, k + 9, stone, 0);
		b(w, i + 10, j + 10, k + 10, stone, 0);
		b(w, i + 10, j + 10, k + 11, stone, 0);
		b(w, i + 10, j + 10, k + 12, air, 0);
		b(w, i + 10, j + 10, k + 13, air, 0);
		b(w, i + 10, j + 10, k + 14, air, 0);
		b(w, i + 10, j + 10, k + 15, air, 0);
		b(w, i + 10, j + 11, k, air, 0);
		b(w, i + 10, j + 11, k + 1, air, 0);
		b(w, i + 10, j + 11, k + 2, air, 0);
		b(w, i + 10, j + 11, k + 3, air, 0);
		b(w, i + 10, j + 11, k + 4, air, 0);
		b(w, i + 10, j + 11, k + 5, air, 0);
		b(w, i + 10, j + 11, k + 6, air, 0);
		b(w, i + 10, j + 11, k + 7, air, 0);
		b(w, i + 10, j + 11, k + 8, stone, 0);
		b(w, i + 10, j + 11, k + 9, stone, 0);
		b(w, i + 10, j + 11, k + 10, stone, 0);
		b(w, i + 10, j + 11, k + 11, stone, 0);
		b(w, i + 10, j + 11, k + 12, stone, 0);
		b(w, i + 10, j + 11, k + 13, air, 0);
		b(w, i + 10, j + 11, k + 14, air, 0);
		b(w, i + 10, j + 11, k + 15, air, 0);
		b(w, i + 10, j + 12, k, air, 0);
		b(w, i + 10, j + 12, k + 1, air, 0);
		b(w, i + 10, j + 12, k + 2, air, 0);
		b(w, i + 10, j + 12, k + 3, air, 0);
		b(w, i + 10, j + 12, k + 4, air, 0);
		b(w, i + 10, j + 12, k + 5, air, 0);
		b(w, i + 10, j + 12, k + 6, air, 0);
		b(w, i + 10, j + 12, k + 7, air, 0);
		b(w, i + 10, j + 12, k + 8, stone, 0);
		b(w, i + 10, j + 12, k + 9, stone, 0);
		b(w, i + 10, j + 12, k + 10, stone, 0);
		b(w, i + 10, j + 12, k + 11, stone, 0);
		b(w, i + 10, j + 12, k + 12, air, 0);
		b(w, i + 10, j + 12, k + 13, air, 0);
		b(w, i + 10, j + 12, k + 14, stone, 0);
		b(w, i + 10, j + 12, k + 15, air, 0);
		b(w, i + 10, j + 13, k, air, 0);
		b(w, i + 10, j + 13, k + 1, air, 0);
		b(w, i + 10, j + 13, k + 2, air, 0);
		b(w, i + 10, j + 13, k + 3, air, 0);
		b(w, i + 10, j + 13, k + 4, air, 0);
		b(w, i + 10, j + 13, k + 5, air, 0);
		b(w, i + 10, j + 13, k + 6, air, 0);
		b(w, i + 10, j + 13, k + 7, air, 0);
		b(w, i + 10, j + 13, k + 8, air, 0);
		b(w, i + 10, j + 13, k + 9, stone, 0);
		b(w, i + 10, j + 13, k + 10, stone, 0);
		b(w, i + 10, j + 13, k + 11, stone, 0);
		b(w, i + 10, j + 13, k + 12, stone, 0);
		b(w, i + 10, j + 13, k + 13, stone, 0);
		b(w, i + 10, j + 13, k + 14, air, 0);
		b(w, i + 10, j + 13, k + 15, air, 0);
		b(w, i + 10, j + 14, k, air, 0);
		b(w, i + 10, j + 14, k + 1, air, 0);
		b(w, i + 10, j + 14, k + 2, air, 0);
		b(w, i + 10, j + 14, k + 3, air, 0);
		b(w, i + 10, j + 14, k + 4, air, 0);
		b(w, i + 10, j + 14, k + 5, air, 0);
		b(w, i + 10, j + 14, k + 6, air, 0);
		b(w, i + 10, j + 14, k + 7, air, 0);
		b(w, i + 10, j + 14, k + 8, air, 0);
		b(w, i + 10, j + 14, k + 9, stone, 0);
		b(w, i + 10, j + 14, k + 10, stone, 0);
		b(w, i + 10, j + 14, k + 11, stone, 0);
		b(w, i + 10, j + 14, k + 12, stone, 0);
		b(w, i + 10, j + 14, k + 13, air, 0);
		b(w, i + 10, j + 14, k + 14, air, 0);
		b(w, i + 10, j + 14, k + 15, air, 0);
		b(w, i + 10, j + 15, k, air, 0);
		b(w, i + 10, j + 15, k + 1, air, 0);
		b(w, i + 10, j + 15, k + 2, air, 0);
		b(w, i + 10, j + 15, k + 3, air, 0);
		b(w, i + 10, j + 15, k + 4, air, 0);
		b(w, i + 10, j + 15, k + 5, air, 0);
		b(w, i + 10, j + 15, k + 6, air, 0);
		b(w, i + 10, j + 15, k + 7, air, 0);
		b(w, i + 10, j + 15, k + 8, air, 0);
		b(w, i + 10, j + 15, k + 9, stone, 0);
		b(w, i + 10, j + 15, k + 10, stone, 0);
		b(w, i + 10, j + 15, k + 11, stone, 0);
		b(w, i + 10, j + 15, k + 12, stone, 0);
		b(w, i + 10, j + 15, k + 13, air, 0);
		b(w, i + 10, j + 15, k + 14, air, 0);
		b(w, i + 10, j + 15, k + 15, air, 0);
		b(w, i + 10, j + 16, k, air, 0);
		b(w, i + 10, j + 16, k + 1, air, 0);
		b(w, i + 10, j + 16, k + 2, air, 0);
		b(w, i + 10, j + 16, k + 3, air, 0);
		b(w, i + 10, j + 16, k + 4, air, 0);
		b(w, i + 10, j + 16, k + 5, air, 0);
		b(w, i + 10, j + 16, k + 6, air, 0);
		b(w, i + 10, j + 16, k + 7, air, 0);
		b(w, i + 10, j + 16, k + 8, air, 0);
		b(w, i + 10, j + 16, k + 9, air, 0);
		b(w, i + 10, j + 16, k + 10, stone, 0);
		b(w, i + 10, j + 16, k + 11, air, 0);
		b(w, i + 10, j + 16, k + 12, air, 0);
		b(w, i + 10, j + 16, k + 13, air, 0);
		b(w, i + 10, j + 16, k + 14, air, 0);
		b(w, i + 10, j + 16, k + 15, air, 0);
		b(w, i + 11, j, k, air, 0);
		b(w, i + 11, j, k + 1, air, 0);
		b(w, i + 11, j, k + 2, air, 0);
		b(w, i + 11, j, k + 3, air, 0);
		b(w, i + 11, j, k + 4, air, 0);
		b(w, i + 11, j, k + 5, air, 0);
		b(w, i + 11, j, k + 6, air, 0);
		b(w, i + 11, j, k + 7, air, 0);
		b(w, i + 11, j, k + 8, air, 0);
		b(w, i + 11, j, k + 9, air, 0);
		b(w, i + 11, j, k + 10, air, 0);
		b(w, i + 11, j, k + 11, air, 0);
		b(w, i + 11, j, k + 12, air, 0);
		b(w, i + 11, j, k + 13, air, 0);
		generate_6(w, i, j, k);
	}

	public static void generate_6(World w, int i, int j, int k)
	{
		b(w, i + 11, j, k + 14, air, 0);
		b(w, i + 11, j, k + 15, air, 0);
		b(w, i + 11, j + 1, k, air, 0);
		b(w, i + 11, j + 1, k + 1, air, 0);
		b(w, i + 11, j + 1, k + 2, air, 0);
		b(w, i + 11, j + 1, k + 3, air, 0);
		b(w, i + 11, j + 1, k + 4, air, 0);
		b(w, i + 11, j + 1, k + 5, stone, 0);
		b(w, i + 11, j + 1, k + 6, stone, 0);
		b(w, i + 11, j + 1, k + 7, stone, 0);
		b(w, i + 11, j + 1, k + 8, stone, 0);
		b(w, i + 11, j + 1, k + 9, stone, 0);
		b(w, i + 11, j + 1, k + 10, stone, 0);
		b(w, i + 11, j + 1, k + 11, stone, 0);
		b(w, i + 11, j + 1, k + 12, air, 0);
		b(w, i + 11, j + 1, k + 13, air, 0);
		b(w, i + 11, j + 1, k + 14, air, 0);
		b(w, i + 11, j + 1, k + 15, air, 0);
		b(w, i + 11, j + 2, k, air, 0);
		b(w, i + 11, j + 2, k + 1, air, 0);
		b(w, i + 11, j + 2, k + 2, air, 0);
		b(w, i + 11, j + 2, k + 3, stone, 0);
		b(w, i + 11, j + 2, k + 4, stone, 0);
		b(w, i + 11, j + 2, k + 5, stone, 0);
		b(w, i + 11, j + 2, k + 6, stone, 0);
		b(w, i + 11, j + 2, k + 7, stone, 0);
		b(w, i + 11, j + 2, k + 8, stone, 0);
		b(w, i + 11, j + 2, k + 9, stone, 0);
		b(w, i + 11, j + 2, k + 10, stone, 0);
		b(w, i + 11, j + 2, k + 11, stone, 0);
		b(w, i + 11, j + 2, k + 12, stone, 0);
		b(w, i + 11, j + 2, k + 13, stone, 0);
		b(w, i + 11, j + 2, k + 14, air, 0);
		b(w, i + 11, j + 2, k + 15, air, 0);
		b(w, i + 11, j + 3, k, air, 0);
		b(w, i + 11, j + 3, k + 1, air, 0);
		b(w, i + 11, j + 3, k + 2, air, 0);
		b(w, i + 11, j + 3, k + 3, stone, 0);
		b(w, i + 11, j + 3, k + 4, stone, 0);
		b(w, i + 11, j + 3, k + 5, stone, 0);
		b(w, i + 11, j + 3, k + 6, stone, 0);
		b(w, i + 11, j + 3, k + 7, stone, 0);
		b(w, i + 11, j + 3, k + 8, stone, 0);
		b(w, i + 11, j + 3, k + 9, stone, 0);
		b(w, i + 11, j + 3, k + 10, stone, 0);
		b(w, i + 11, j + 3, k + 11, stone, 0);
		b(w, i + 11, j + 3, k + 12, stone, 0);
		b(w, i + 11, j + 3, k + 13, stone, 0);
		b(w, i + 11, j + 3, k + 14, stone, 0);
		b(w, i + 11, j + 3, k + 15, air, 0);
		b(w, i + 11, j + 4, k, air, 0);
		b(w, i + 11, j + 4, k + 1, air, 0);
		b(w, i + 11, j + 4, k + 2, air, 0);
		b(w, i + 11, j + 4, k + 3, air, 0);
		b(w, i + 11, j + 4, k + 4, stone, 0);
		b(w, i + 11, j + 4, k + 5, air, 0);
		b(w, i + 11, j + 4, k + 6, air, 0);
		b(w, i + 11, j + 4, k + 7, air, 0);
		b(w, i + 11, j + 4, k + 8, air, 0);
		b(w, i + 11, j + 4, k + 9, stone, 0);
		b(w, i + 11, j + 4, k + 10, stone, 0);
		b(w, i + 11, j + 4, k + 11, stone, 0);
		b(w, i + 11, j + 4, k + 12, stone, 0);
		b(w, i + 11, j + 4, k + 13, air, 0);
		b(w, i + 11, j + 4, k + 14, stone, 0);
		b(w, i + 11, j + 4, k + 15, air, 0);
		b(w, i + 11, j + 5, k, air, 0);
		b(w, i + 11, j + 5, k + 1, air, 0);
		b(w, i + 11, j + 5, k + 2, air, 0);
		b(w, i + 11, j + 5, k + 3, air, 0);
		b(w, i + 11, j + 5, k + 4, air, 0);
		b(w, i + 11, j + 5, k + 5, air, 0);
		b(w, i + 11, j + 5, k + 6, air, 0);
		b(w, i + 11, j + 5, k + 7, air, 0);
		b(w, i + 11, j + 5, k + 8, air, 0);
		b(w, i + 11, j + 5, k + 9, air, 0);
		b(w, i + 11, j + 5, k + 10, stone, 0);
		b(w, i + 11, j + 5, k + 11, stone, 0);
		b(w, i + 11, j + 5, k + 12, stone, 0);
		b(w, i + 11, j + 5, k + 13, air, 0);
		b(w, i + 11, j + 5, k + 14, air, 0);
		b(w, i + 11, j + 5, k + 15, air, 0);
		b(w, i + 11, j + 6, k, air, 0);
		b(w, i + 11, j + 6, k + 1, air, 0);
		b(w, i + 11, j + 6, k + 2, air, 0);
		b(w, i + 11, j + 6, k + 3, air, 0);
		b(w, i + 11, j + 6, k + 4, air, 0);
		b(w, i + 11, j + 6, k + 5, air, 0);
		b(w, i + 11, j + 6, k + 6, air, 0);
		b(w, i + 11, j + 6, k + 7, air, 0);
		b(w, i + 11, j + 6, k + 8, air, 0);
		b(w, i + 11, j + 6, k + 9, air, 0);
		b(w, i + 11, j + 6, k + 10, stone, 0);
		b(w, i + 11, j + 6, k + 11, stone, 0);
		b(w, i + 11, j + 6, k + 12, air, 0);
		b(w, i + 11, j + 6, k + 13, air, 0);
		b(w, i + 11, j + 6, k + 14, air, 0);
		b(w, i + 11, j + 6, k + 15, air, 0);
		b(w, i + 11, j + 7, k, air, 0);
		b(w, i + 11, j + 7, k + 1, air, 0);
		b(w, i + 11, j + 7, k + 2, air, 0);
		b(w, i + 11, j + 7, k + 3, air, 0);
		b(w, i + 11, j + 7, k + 4, air, 0);
		b(w, i + 11, j + 7, k + 5, air, 0);
		b(w, i + 11, j + 7, k + 6, air, 0);
		b(w, i + 11, j + 7, k + 7, air, 0);
		b(w, i + 11, j + 7, k + 8, air, 0);
		b(w, i + 11, j + 7, k + 9, air, 0);
		b(w, i + 11, j + 7, k + 10, stone, 0);
		b(w, i + 11, j + 7, k + 11, stone, 0);
		b(w, i + 11, j + 7, k + 12, air, 0);
		b(w, i + 11, j + 7, k + 13, air, 0);
		b(w, i + 11, j + 7, k + 14, air, 0);
		b(w, i + 11, j + 7, k + 15, air, 0);
		b(w, i + 11, j + 8, k, air, 0);
		b(w, i + 11, j + 8, k + 1, air, 0);
		b(w, i + 11, j + 8, k + 2, air, 0);
		b(w, i + 11, j + 8, k + 3, air, 0);
		b(w, i + 11, j + 8, k + 4, air, 0);
		b(w, i + 11, j + 8, k + 5, air, 0);
		b(w, i + 11, j + 8, k + 6, air, 0);
		b(w, i + 11, j + 8, k + 7, air, 0);
		b(w, i + 11, j + 8, k + 8, air, 0);
		b(w, i + 11, j + 8, k + 9, air, 0);
		b(w, i + 11, j + 8, k + 10, stone, 0);
		b(w, i + 11, j + 8, k + 11, stone, 0);
		b(w, i + 11, j + 8, k + 12, air, 0);
		b(w, i + 11, j + 8, k + 13, air, 0);
		b(w, i + 11, j + 8, k + 14, air, 0);
		b(w, i + 11, j + 8, k + 15, air, 0);
		b(w, i + 11, j + 9, k, air, 0);
		b(w, i + 11, j + 9, k + 1, air, 0);
		b(w, i + 11, j + 9, k + 2, air, 0);
		b(w, i + 11, j + 9, k + 3, air, 0);
		b(w, i + 11, j + 9, k + 4, air, 0);
		b(w, i + 11, j + 9, k + 5, air, 0);
		b(w, i + 11, j + 9, k + 6, air, 0);
		b(w, i + 11, j + 9, k + 7, air, 0);
		b(w, i + 11, j + 9, k + 8, air, 0);
		b(w, i + 11, j + 9, k + 9, stone, 0);
		b(w, i + 11, j + 9, k + 10, stone, 0);
		b(w, i + 11, j + 9, k + 11, stone, 0);
		b(w, i + 11, j + 9, k + 12, air, 0);
		b(w, i + 11, j + 9, k + 13, air, 0);
		b(w, i + 11, j + 9, k + 14, air, 0);
		b(w, i + 11, j + 9, k + 15, air, 0);
		b(w, i + 11, j + 10, k, air, 0);
		b(w, i + 11, j + 10, k + 1, air, 0);
		b(w, i + 11, j + 10, k + 2, air, 0);
		b(w, i + 11, j + 10, k + 3, air, 0);
		b(w, i + 11, j + 10, k + 4, stone, 0);
		b(w, i + 11, j + 10, k + 5, stone, 0);
		b(w, i + 11, j + 10, k + 6, air, 0);
		b(w, i + 11, j + 10, k + 7, air, 0);
		b(w, i + 11, j + 10, k + 8, air, 0);
		b(w, i + 11, j + 10, k + 9, stone, 0);
		b(w, i + 11, j + 10, k + 10, stone, 0);
		b(w, i + 11, j + 10, k + 11, stone, 0);
		b(w, i + 11, j + 10, k + 12, stone, 0);
		b(w, i + 11, j + 10, k + 13, air, 0);
		b(w, i + 11, j + 10, k + 14, air, 0);
		b(w, i + 11, j + 10, k + 15, air, 0);
		b(w, i + 11, j + 11, k, air, 0);
		b(w, i + 11, j + 11, k + 1, air, 0);
		b(w, i + 11, j + 11, k + 2, air, 0);
		b(w, i + 11, j + 11, k + 3, air, 0);
		b(w, i + 11, j + 11, k + 4, air, 0);
		b(w, i + 11, j + 11, k + 5, air, 0);
		b(w, i + 11, j + 11, k + 6, air, 0);
		b(w, i + 11, j + 11, k + 7, air, 0);
		b(w, i + 11, j + 11, k + 8, stone, 0);
		b(w, i + 11, j + 11, k + 9, stone, 0);
		b(w, i + 11, j + 11, k + 10, stone, 0);
		b(w, i + 11, j + 11, k + 11, air, 0);
		b(w, i + 11, j + 11, k + 12, air, 0);
		b(w, i + 11, j + 11, k + 13, air, 0);
		b(w, i + 11, j + 11, k + 14, air, 0);
		b(w, i + 11, j + 11, k + 15, air, 0);
		b(w, i + 11, j + 12, k, air, 0);
		b(w, i + 11, j + 12, k + 1, air, 0);
		b(w, i + 11, j + 12, k + 2, air, 0);
		b(w, i + 11, j + 12, k + 3, air, 0);
		b(w, i + 11, j + 12, k + 4, air, 0);
		b(w, i + 11, j + 12, k + 5, air, 0);
		b(w, i + 11, j + 12, k + 6, air, 0);
		b(w, i + 11, j + 12, k + 7, air, 0);
		b(w, i + 11, j + 12, k + 8, air, 0);
		b(w, i + 11, j + 12, k + 9, stone, 0);
		b(w, i + 11, j + 12, k + 10, air, 0);
		b(w, i + 11, j + 12, k + 11, air, 0);
		b(w, i + 11, j + 12, k + 12, air, 0);
		b(w, i + 11, j + 12, k + 13, air, 0);
		b(w, i + 11, j + 12, k + 14, air, 0);
		b(w, i + 11, j + 12, k + 15, air, 0);
		b(w, i + 11, j + 13, k, air, 0);
		b(w, i + 11, j + 13, k + 1, air, 0);
		b(w, i + 11, j + 13, k + 2, air, 0);
		b(w, i + 11, j + 13, k + 3, air, 0);
		b(w, i + 11, j + 13, k + 4, air, 0);
		b(w, i + 11, j + 13, k + 5, air, 0);
		b(w, i + 11, j + 13, k + 6, air, 0);
		b(w, i + 11, j + 13, k + 7, air, 0);
		b(w, i + 11, j + 13, k + 8, air, 0);
		b(w, i + 11, j + 13, k + 9, stone, 0);
		b(w, i + 11, j + 13, k + 10, stone, 0);
		b(w, i + 11, j + 13, k + 11, air, 0);
		b(w, i + 11, j + 13, k + 12, air, 0);
		b(w, i + 11, j + 13, k + 13, air, 0);
		b(w, i + 11, j + 13, k + 14, air, 0);
		b(w, i + 11, j + 13, k + 15, air, 0);
		b(w, i + 11, j + 14, k, air, 0);
		b(w, i + 11, j + 14, k + 1, air, 0);
		b(w, i + 11, j + 14, k + 2, air, 0);
		b(w, i + 11, j + 14, k + 3, air, 0);
		b(w, i + 11, j + 14, k + 4, air, 0);
		b(w, i + 11, j + 14, k + 5, air, 0);
		b(w, i + 11, j + 14, k + 6, air, 0);
		b(w, i + 11, j + 14, k + 7, air, 0);
		b(w, i + 11, j + 14, k + 8, air, 0);
		b(w, i + 11, j + 14, k + 9, stone, 0);
		b(w, i + 11, j + 14, k + 10, stone, 0);
		b(w, i + 11, j + 14, k + 11, air, 0);
		b(w, i + 11, j + 14, k + 12, air, 0);
		b(w, i + 11, j + 14, k + 13, air, 0);
		b(w, i + 11, j + 14, k + 14, air, 0);
		b(w, i + 11, j + 14, k + 15, air, 0);
		b(w, i + 11, j + 15, k, air, 0);
		b(w, i + 11, j + 15, k + 1, air, 0);
		b(w, i + 11, j + 15, k + 2, air, 0);
		b(w, i + 11, j + 15, k + 3, air, 0);
		b(w, i + 11, j + 15, k + 4, air, 0);
		b(w, i + 11, j + 15, k + 5, air, 0);
		b(w, i + 11, j + 15, k + 6, air, 0);
		b(w, i + 11, j + 15, k + 7, air, 0);
		b(w, i + 11, j + 15, k + 8, air, 0);
		b(w, i + 11, j + 15, k + 9, stone, 0);
		b(w, i + 11, j + 15, k + 10, stone, 0);
		b(w, i + 11, j + 15, k + 11, stone, 0);
		b(w, i + 11, j + 15, k + 12, air, 0);
		b(w, i + 11, j + 15, k + 13, air, 0);
		b(w, i + 11, j + 15, k + 14, air, 0);
		b(w, i + 11, j + 15, k + 15, air, 0);
		b(w, i + 11, j + 16, k, air, 0);
		b(w, i + 11, j + 16, k + 1, air, 0);
		b(w, i + 11, j + 16, k + 2, air, 0);
		b(w, i + 11, j + 16, k + 3, air, 0);
		b(w, i + 11, j + 16, k + 4, air, 0);
		b(w, i + 11, j + 16, k + 5, air, 0);
		b(w, i + 11, j + 16, k + 6, air, 0);
		b(w, i + 11, j + 16, k + 7, air, 0);
		b(w, i + 11, j + 16, k + 8, air, 0);
		b(w, i + 11, j + 16, k + 9, air, 0);
		b(w, i + 11, j + 16, k + 10, air, 0);
		b(w, i + 11, j + 16, k + 11, air, 0);
		b(w, i + 11, j + 16, k + 12, air, 0);
		b(w, i + 11, j + 16, k + 13, air, 0);
		b(w, i + 11, j + 16, k + 14, air, 0);
		b(w, i + 11, j + 16, k + 15, air, 0);
		b(w, i + 12, j, k, air, 0);
		b(w, i + 12, j, k + 1, air, 0);
		b(w, i + 12, j, k + 2, air, 0);
		b(w, i + 12, j, k + 3, air, 0);
		b(w, i + 12, j, k + 4, air, 0);
		b(w, i + 12, j, k + 5, air, 0);
		b(w, i + 12, j, k + 6, air, 0);
		b(w, i + 12, j, k + 7, air, 0);
		b(w, i + 12, j, k + 8, air, 0);
		b(w, i + 12, j, k + 9, air, 0);
		b(w, i + 12, j, k + 10, air, 0);
		b(w, i + 12, j, k + 11, air, 0);
		b(w, i + 12, j, k + 12, air, 0);
		b(w, i + 12, j, k + 13, air, 0);
		b(w, i + 12, j, k + 14, air, 0);
		b(w, i + 12, j, k + 15, air, 0);
		b(w, i + 12, j + 1, k, air, 0);
		b(w, i + 12, j + 1, k + 1, air, 0);
		b(w, i + 12, j + 1, k + 2, air, 0);
		b(w, i + 12, j + 1, k + 3, air, 0);
		b(w, i + 12, j + 1, k + 4, air, 0);
		b(w, i + 12, j + 1, k + 5, air, 0);
		b(w, i + 12, j + 1, k + 6, stone, 0);
		b(w, i + 12, j + 1, k + 7, stone, 0);
		b(w, i + 12, j + 1, k + 8, stone, 0);
		b(w, i + 12, j + 1, k + 9, stone, 0);
		b(w, i + 12, j + 1, k + 10, stone, 0);
		b(w, i + 12, j + 1, k + 11, air, 0);
		b(w, i + 12, j + 1, k + 12, air, 0);
		b(w, i + 12, j + 1, k + 13, air, 0);
		b(w, i + 12, j + 1, k + 14, air, 0);
		b(w, i + 12, j + 1, k + 15, air, 0);
		b(w, i + 12, j + 2, k, air, 0);
		b(w, i + 12, j + 2, k + 1, air, 0);
		b(w, i + 12, j + 2, k + 2, air, 0);
		b(w, i + 12, j + 2, k + 3, air, 0);
		b(w, i + 12, j + 2, k + 4, stone, 0);
		b(w, i + 12, j + 2, k + 5, stone, 0);
		b(w, i + 12, j + 2, k + 6, stone, 0);
		b(w, i + 12, j + 2, k + 7, stone, 0);
		b(w, i + 12, j + 2, k + 8, stone, 0);
		b(w, i + 12, j + 2, k + 9, stone, 0);
		b(w, i + 12, j + 2, k + 10, stone, 0);
		b(w, i + 12, j + 2, k + 11, stone, 0);
		b(w, i + 12, j + 2, k + 12, stone, 0);
		b(w, i + 12, j + 2, k + 13, air, 0);
		b(w, i + 12, j + 2, k + 14, air, 0);
		b(w, i + 12, j + 2, k + 15, air, 0);
		b(w, i + 12, j + 3, k, air, 0);
		b(w, i + 12, j + 3, k + 1, air, 0);
		b(w, i + 12, j + 3, k + 2, air, 0);
		b(w, i + 12, j + 3, k + 3, air, 0);
		b(w, i + 12, j + 3, k + 4, stone, 0);
		b(w, i + 12, j + 3, k + 5, stone, 0);
		b(w, i + 12, j + 3, k + 6, stone, 0);
		b(w, i + 12, j + 3, k + 7, stone, 0);
		b(w, i + 12, j + 3, k + 8, stone, 0);
		b(w, i + 12, j + 3, k + 9, stone, 0);
		b(w, i + 12, j + 3, k + 10, stone, 0);
		b(w, i + 12, j + 3, k + 11, stone, 0);
		b(w, i + 12, j + 3, k + 12, stone, 0);
		b(w, i + 12, j + 3, k + 13, stone, 0);
		b(w, i + 12, j + 3, k + 14, air, 0);
		b(w, i + 12, j + 3, k + 15, air, 0);
		b(w, i + 12, j + 4, k, air, 0);
		b(w, i + 12, j + 4, k + 1, air, 0);
		b(w, i + 12, j + 4, k + 2, air, 0);
		b(w, i + 12, j + 4, k + 3, air, 0);
		b(w, i + 12, j + 4, k + 4, air, 0);
		b(w, i + 12, j + 4, k + 5, air, 0);
		b(w, i + 12, j + 4, k + 6, air, 0);
		b(w, i + 12, j + 4, k + 7, air, 0);
		b(w, i + 12, j + 4, k + 8, stone, 0);
		b(w, i + 12, j + 4, k + 9, stone, 0);
		b(w, i + 12, j + 4, k + 10, stone, 0);
		b(w, i + 12, j + 4, k + 11, stone, 0);
		b(w, i + 12, j + 4, k + 12, stone, 0);
		b(w, i + 12, j + 4, k + 13, stone, 0);
		b(w, i + 12, j + 4, k + 14, stone, 0);
		b(w, i + 12, j + 4, k + 15, air, 0);
		b(w, i + 12, j + 5, k, air, 0);
		b(w, i + 12, j + 5, k + 1, air, 0);
		b(w, i + 12, j + 5, k + 2, air, 0);
		b(w, i + 12, j + 5, k + 3, air, 0);
		b(w, i + 12, j + 5, k + 4, air, 0);
		b(w, i + 12, j + 5, k + 5, air, 0);
		b(w, i + 12, j + 5, k + 6, air, 0);
		b(w, i + 12, j + 5, k + 7, air, 0);
		b(w, i + 12, j + 5, k + 8, air, 0);
		b(w, i + 12, j + 5, k + 9, stone, 0);
		b(w, i + 12, j + 5, k + 10, stone, 0);
		b(w, i + 12, j + 5, k + 11, stone, 0);
		b(w, i + 12, j + 5, k + 12, stone, 0);
		b(w, i + 12, j + 5, k + 13, stone, 0);
		b(w, i + 12, j + 5, k + 14, stone, 0);
		b(w, i + 12, j + 5, k + 15, air, 0);
		b(w, i + 12, j + 6, k, air, 0);
		b(w, i + 12, j + 6, k + 1, air, 0);
		b(w, i + 12, j + 6, k + 2, air, 0);
		b(w, i + 12, j + 6, k + 3, air, 0);
		b(w, i + 12, j + 6, k + 4, air, 0);
		b(w, i + 12, j + 6, k + 5, air, 0);
		b(w, i + 12, j + 6, k + 6, air, 0);
		b(w, i + 12, j + 6, k + 7, air, 0);
		b(w, i + 12, j + 6, k + 8, air, 0);
		b(w, i + 12, j + 6, k + 9, air, 0);
		b(w, i + 12, j + 6, k + 10, air, 0);
		b(w, i + 12, j + 6, k + 11, stone, 0);
		b(w, i + 12, j + 6, k + 12, stone, 0);
		b(w, i + 12, j + 6, k + 13, stone, 0);
		b(w, i + 12, j + 6, k + 14, air, 0);
		b(w, i + 12, j + 6, k + 15, air, 0);
		b(w, i + 12, j + 7, k, air, 0);
		b(w, i + 12, j + 7, k + 1, air, 0);
		b(w, i + 12, j + 7, k + 2, air, 0);
		b(w, i + 12, j + 7, k + 3, air, 0);
		b(w, i + 12, j + 7, k + 4, air, 0);
		b(w, i + 12, j + 7, k + 5, air, 0);
		b(w, i + 12, j + 7, k + 6, air, 0);
		b(w, i + 12, j + 7, k + 7, air, 0);
		b(w, i + 12, j + 7, k + 8, air, 0);
		b(w, i + 12, j + 7, k + 9, air, 0);
		b(w, i + 12, j + 7, k + 10, air, 0);
		b(w, i + 12, j + 7, k + 11, air, 0);
		b(w, i + 12, j + 7, k + 12, stone, 0);
		b(w, i + 12, j + 7, k + 13, air, 0);
		b(w, i + 12, j + 7, k + 14, air, 0);
		b(w, i + 12, j + 7, k + 15, air, 0);
		b(w, i + 12, j + 8, k, air, 0);
		b(w, i + 12, j + 8, k + 1, air, 0);
		b(w, i + 12, j + 8, k + 2, air, 0);
		b(w, i + 12, j + 8, k + 3, air, 0);
		b(w, i + 12, j + 8, k + 4, air, 0);
		b(w, i + 12, j + 8, k + 5, air, 0);
		b(w, i + 12, j + 8, k + 6, air, 0);
		b(w, i + 12, j + 8, k + 7, air, 0);
		b(w, i + 12, j + 8, k + 8, air, 0);
		b(w, i + 12, j + 8, k + 9, air, 0);
		b(w, i + 12, j + 8, k + 10, air, 0);
		b(w, i + 12, j + 8, k + 11, stone, 0);
		b(w, i + 12, j + 8, k + 12, stone, 0);
		b(w, i + 12, j + 8, k + 13, air, 0);
		b(w, i + 12, j + 8, k + 14, air, 0);
		b(w, i + 12, j + 8, k + 15, air, 0);
		b(w, i + 12, j + 9, k, air, 0);
		b(w, i + 12, j + 9, k + 1, air, 0);
		b(w, i + 12, j + 9, k + 2, air, 0);
		b(w, i + 12, j + 9, k + 3, air, 0);
		b(w, i + 12, j + 9, k + 4, air, 0);
		b(w, i + 12, j + 9, k + 5, air, 0);
		b(w, i + 12, j + 9, k + 6, air, 0);
		b(w, i + 12, j + 9, k + 7, air, 0);
		b(w, i + 12, j + 9, k + 8, air, 0);
		b(w, i + 12, j + 9, k + 9, air, 0);
		b(w, i + 12, j + 9, k + 10, air, 0);
		b(w, i + 12, j + 9, k + 11, stone, 0);
		b(w, i + 12, j + 9, k + 12, stone, 0);
		b(w, i + 12, j + 9, k + 13, stone, 0);
		b(w, i + 12, j + 9, k + 14, stone, 0);
		b(w, i + 12, j + 9, k + 15, air, 0);
		b(w, i + 12, j + 10, k, air, 0);
		b(w, i + 12, j + 10, k + 1, air, 0);
		b(w, i + 12, j + 10, k + 2, air, 0);
		b(w, i + 12, j + 10, k + 3, air, 0);
		b(w, i + 12, j + 10, k + 4, air, 0);
		b(w, i + 12, j + 10, k + 5, air, 0);
		b(w, i + 12, j + 10, k + 6, air, 0);
		b(w, i + 12, j + 10, k + 7, air, 0);
		b(w, i + 12, j + 10, k + 8, air, 0);
		b(w, i + 12, j + 10, k + 9, air, 0);
		b(w, i + 12, j + 10, k + 10, stone, 0);
		b(w, i + 12, j + 10, k + 11, air, 0);
		b(w, i + 12, j + 10, k + 12, air, 0);
		b(w, i + 12, j + 10, k + 13, air, 0);
		b(w, i + 12, j + 10, k + 14, air, 0);
		b(w, i + 12, j + 10, k + 15, air, 0);
		b(w, i + 12, j + 11, k, air, 0);
		b(w, i + 12, j + 11, k + 1, air, 0);
		b(w, i + 12, j + 11, k + 2, air, 0);
		b(w, i + 12, j + 11, k + 3, air, 0);
		b(w, i + 12, j + 11, k + 4, air, 0);
		b(w, i + 12, j + 11, k + 5, air, 0);
		b(w, i + 12, j + 11, k + 6, air, 0);
		b(w, i + 12, j + 11, k + 7, air, 0);
		b(w, i + 12, j + 11, k + 8, air, 0);
		b(w, i + 12, j + 11, k + 9, stone, 0);
		b(w, i + 12, j + 11, k + 10, air, 0);
		b(w, i + 12, j + 11, k + 11, air, 0);
		b(w, i + 12, j + 11, k + 12, air, 0);
		b(w, i + 12, j + 11, k + 13, air, 0);
		b(w, i + 12, j + 11, k + 14, air, 0);
		b(w, i + 12, j + 11, k + 15, air, 0);
		b(w, i + 12, j + 12, k, air, 0);
		b(w, i + 12, j + 12, k + 1, air, 0);
		b(w, i + 12, j + 12, k + 2, air, 0);
		b(w, i + 12, j + 12, k + 3, air, 0);
		b(w, i + 12, j + 12, k + 4, air, 0);
		b(w, i + 12, j + 12, k + 5, air, 0);
		b(w, i + 12, j + 12, k + 6, air, 0);
		b(w, i + 12, j + 12, k + 7, air, 0);
		b(w, i + 12, j + 12, k + 8, stone, 0);
		b(w, i + 12, j + 12, k + 9, stone, 0);
		b(w, i + 12, j + 12, k + 10, air, 0);
		b(w, i + 12, j + 12, k + 11, air, 0);
		b(w, i + 12, j + 12, k + 12, air, 0);
		b(w, i + 12, j + 12, k + 13, air, 0);
		b(w, i + 12, j + 12, k + 14, air, 0);
		b(w, i + 12, j + 12, k + 15, air, 0);
		b(w, i + 12, j + 13, k, air, 0);
		b(w, i + 12, j + 13, k + 1, air, 0);
		b(w, i + 12, j + 13, k + 2, air, 0);
		b(w, i + 12, j + 13, k + 3, air, 0);
		b(w, i + 12, j + 13, k + 4, air, 0);
		b(w, i + 12, j + 13, k + 5, air, 0);
		b(w, i + 12, j + 13, k + 6, air, 0);
		b(w, i + 12, j + 13, k + 7, air, 0);
		b(w, i + 12, j + 13, k + 8, air, 0);
		b(w, i + 12, j + 13, k + 9, stone, 0);
		b(w, i + 12, j + 13, k + 10, air, 0);
		b(w, i + 12, j + 13, k + 11, air, 0);
		b(w, i + 12, j + 13, k + 12, air, 0);
		b(w, i + 12, j + 13, k + 13, air, 0);
		b(w, i + 12, j + 13, k + 14, air, 0);
		b(w, i + 12, j + 13, k + 15, air, 0);
		b(w, i + 12, j + 14, k, air, 0);
		b(w, i + 12, j + 14, k + 1, air, 0);
		b(w, i + 12, j + 14, k + 2, air, 0);
		b(w, i + 12, j + 14, k + 3, air, 0);
		b(w, i + 12, j + 14, k + 4, air, 0);
		b(w, i + 12, j + 14, k + 5, air, 0);
		b(w, i + 12, j + 14, k + 6, air, 0);
		b(w, i + 12, j + 14, k + 7, air, 0);
		b(w, i + 12, j + 14, k + 8, air, 0);
		b(w, i + 12, j + 14, k + 9, air, 0);
		b(w, i + 12, j + 14, k + 10, stone, 0);
		b(w, i + 12, j + 14, k + 11, air, 0);
		b(w, i + 12, j + 14, k + 12, air, 0);
		b(w, i + 12, j + 14, k + 13, air, 0);
		b(w, i + 12, j + 14, k + 14, air, 0);
		b(w, i + 12, j + 14, k + 15, air, 0);
		b(w, i + 12, j + 15, k, air, 0);
		b(w, i + 12, j + 15, k + 1, air, 0);
		b(w, i + 12, j + 15, k + 2, air, 0);
		generate_7(w, i, j, k);
	}

	public static void generate_7(World w, int i, int j, int k)
	{
		b(w, i + 12, j + 15, k + 3, air, 0);
		b(w, i + 12, j + 15, k + 4, air, 0);
		b(w, i + 12, j + 15, k + 5, air, 0);
		b(w, i + 12, j + 15, k + 6, air, 0);
		b(w, i + 12, j + 15, k + 7, air, 0);
		b(w, i + 12, j + 15, k + 8, air, 0);
		b(w, i + 12, j + 15, k + 9, air, 0);
		b(w, i + 12, j + 15, k + 10, stone, 0);
		b(w, i + 12, j + 15, k + 11, air, 0);
		b(w, i + 12, j + 15, k + 12, air, 0);
		b(w, i + 12, j + 15, k + 13, air, 0);
		b(w, i + 12, j + 15, k + 14, air, 0);
		b(w, i + 12, j + 15, k + 15, air, 0);
		b(w, i + 12, j + 16, k, air, 0);
		b(w, i + 12, j + 16, k + 1, air, 0);
		b(w, i + 12, j + 16, k + 2, air, 0);
		b(w, i + 12, j + 16, k + 3, air, 0);
		b(w, i + 12, j + 16, k + 4, air, 0);
		b(w, i + 12, j + 16, k + 5, air, 0);
		b(w, i + 12, j + 16, k + 6, air, 0);
		b(w, i + 12, j + 16, k + 7, air, 0);
		b(w, i + 12, j + 16, k + 8, air, 0);
		b(w, i + 12, j + 16, k + 9, air, 0);
		b(w, i + 12, j + 16, k + 10, air, 0);
		b(w, i + 12, j + 16, k + 11, air, 0);
		b(w, i + 12, j + 16, k + 12, air, 0);
		b(w, i + 12, j + 16, k + 13, air, 0);
		b(w, i + 12, j + 16, k + 14, air, 0);
		b(w, i + 12, j + 16, k + 15, air, 0);
		b(w, i + 13, j, k, air, 0);
		b(w, i + 13, j, k + 1, air, 0);
		b(w, i + 13, j, k + 2, air, 0);
		b(w, i + 13, j, k + 3, air, 0);
		b(w, i + 13, j, k + 4, air, 0);
		b(w, i + 13, j, k + 5, air, 0);
		b(w, i + 13, j, k + 6, air, 0);
		b(w, i + 13, j, k + 7, air, 0);
		b(w, i + 13, j, k + 8, air, 0);
		b(w, i + 13, j, k + 9, air, 0);
		b(w, i + 13, j, k + 10, air, 0);
		b(w, i + 13, j, k + 11, air, 0);
		b(w, i + 13, j, k + 12, air, 0);
		b(w, i + 13, j, k + 13, air, 0);
		b(w, i + 13, j, k + 14, air, 0);
		b(w, i + 13, j, k + 15, air, 0);
		b(w, i + 13, j + 1, k, air, 0);
		b(w, i + 13, j + 1, k + 1, air, 0);
		b(w, i + 13, j + 1, k + 2, air, 0);
		b(w, i + 13, j + 1, k + 3, air, 0);
		b(w, i + 13, j + 1, k + 4, air, 0);
		b(w, i + 13, j + 1, k + 5, air, 0);
		b(w, i + 13, j + 1, k + 6, air, 0);
		b(w, i + 13, j + 1, k + 7, air, 0);
		b(w, i + 13, j + 1, k + 8, air, 0);
		b(w, i + 13, j + 1, k + 9, air, 0);
		b(w, i + 13, j + 1, k + 10, air, 0);
		b(w, i + 13, j + 1, k + 11, air, 0);
		b(w, i + 13, j + 1, k + 12, air, 0);
		b(w, i + 13, j + 1, k + 13, air, 0);
		b(w, i + 13, j + 1, k + 14, air, 0);
		b(w, i + 13, j + 1, k + 15, air, 0);
		b(w, i + 13, j + 2, k, air, 0);
		b(w, i + 13, j + 2, k + 1, air, 0);
		b(w, i + 13, j + 2, k + 2, air, 0);
		b(w, i + 13, j + 2, k + 3, air, 0);
		b(w, i + 13, j + 2, k + 4, air, 0);
		b(w, i + 13, j + 2, k + 5, stone, 0);
		b(w, i + 13, j + 2, k + 6, stone, 0);
		b(w, i + 13, j + 2, k + 7, stone, 0);
		b(w, i + 13, j + 2, k + 8, stone, 0);
		b(w, i + 13, j + 2, k + 9, stone, 0);
		b(w, i + 13, j + 2, k + 10, stone, 0);
		b(w, i + 13, j + 2, k + 11, stone, 0);
		b(w, i + 13, j + 2, k + 12, air, 0);
		b(w, i + 13, j + 2, k + 13, air, 0);
		b(w, i + 13, j + 2, k + 14, air, 0);
		b(w, i + 13, j + 2, k + 15, air, 0);
		b(w, i + 13, j + 3, k, air, 0);
		b(w, i + 13, j + 3, k + 1, air, 0);
		b(w, i + 13, j + 3, k + 2, air, 0);
		b(w, i + 13, j + 3, k + 3, air, 0);
		b(w, i + 13, j + 3, k + 4, air, 0);
		b(w, i + 13, j + 3, k + 5, air, 0);
		b(w, i + 13, j + 3, k + 6, air, 0);
		b(w, i + 13, j + 3, k + 7, stone, 0);
		b(w, i + 13, j + 3, k + 8, stone, 0);
		b(w, i + 13, j + 3, k + 9, stone, 0);
		b(w, i + 13, j + 3, k + 10, stone, 0);
		b(w, i + 13, j + 3, k + 11, stone, 0);
		b(w, i + 13, j + 3, k + 12, stone, 0);
		b(w, i + 13, j + 3, k + 13, air, 0);
		b(w, i + 13, j + 3, k + 14, air, 0);
		b(w, i + 13, j + 3, k + 15, air, 0);
		b(w, i + 13, j + 4, k, air, 0);
		b(w, i + 13, j + 4, k + 1, air, 0);
		b(w, i + 13, j + 4, k + 2, air, 0);
		b(w, i + 13, j + 4, k + 3, air, 0);
		b(w, i + 13, j + 4, k + 4, air, 0);
		b(w, i + 13, j + 4, k + 5, air, 0);
		b(w, i + 13, j + 4, k + 6, air, 0);
		b(w, i + 13, j + 4, k + 7, air, 0);
		b(w, i + 13, j + 4, k + 8, stone, 0);
		b(w, i + 13, j + 4, k + 9, stone, 0);
		b(w, i + 13, j + 4, k + 10, stone, 0);
		b(w, i + 13, j + 4, k + 11, stone, 0);
		b(w, i + 13, j + 4, k + 12, stone, 0);
		b(w, i + 13, j + 4, k + 13, air, 0);
		b(w, i + 13, j + 4, k + 14, air, 0);
		b(w, i + 13, j + 4, k + 15, air, 0);
		b(w, i + 13, j + 5, k, air, 0);
		b(w, i + 13, j + 5, k + 1, air, 0);
		b(w, i + 13, j + 5, k + 2, air, 0);
		b(w, i + 13, j + 5, k + 3, air, 0);
		b(w, i + 13, j + 5, k + 4, air, 0);
		b(w, i + 13, j + 5, k + 5, air, 0);
		b(w, i + 13, j + 5, k + 6, air, 0);
		b(w, i + 13, j + 5, k + 7, air, 0);
		b(w, i + 13, j + 5, k + 8, stone, 0);
		b(w, i + 13, j + 5, k + 9, stone, 0);
		b(w, i + 13, j + 5, k + 10, stone, 0);
		b(w, i + 13, j + 5, k + 11, stone, 0);
		b(w, i + 13, j + 5, k + 12, stone, 0);
		b(w, i + 13, j + 5, k + 13, stone, 0);
		b(w, i + 13, j + 5, k + 14, stone, 0);
		b(w, i + 13, j + 5, k + 15, air, 0);
		b(w, i + 13, j + 6, k, air, 0);
		b(w, i + 13, j + 6, k + 1, air, 0);
		b(w, i + 13, j + 6, k + 2, air, 0);
		b(w, i + 13, j + 6, k + 3, air, 0);
		b(w, i + 13, j + 6, k + 4, air, 0);
		b(w, i + 13, j + 6, k + 5, air, 0);
		b(w, i + 13, j + 6, k + 6, air, 0);
		b(w, i + 13, j + 6, k + 7, air, 0);
		b(w, i + 13, j + 6, k + 8, air, 0);
		b(w, i + 13, j + 6, k + 9, air, 0);
		b(w, i + 13, j + 6, k + 10, air, 0);
		b(w, i + 13, j + 6, k + 11, stone, 0);
		b(w, i + 13, j + 6, k + 12, stone, 0);
		b(w, i + 13, j + 6, k + 13, stone, 0);
		b(w, i + 13, j + 6, k + 14, stone, 0);
		b(w, i + 13, j + 6, k + 15, air, 0);
		b(w, i + 13, j + 7, k, air, 0);
		b(w, i + 13, j + 7, k + 1, air, 0);
		b(w, i + 13, j + 7, k + 2, air, 0);
		b(w, i + 13, j + 7, k + 3, air, 0);
		b(w, i + 13, j + 7, k + 4, air, 0);
		b(w, i + 13, j + 7, k + 5, air, 0);
		b(w, i + 13, j + 7, k + 6, air, 0);
		b(w, i + 13, j + 7, k + 7, air, 0);
		b(w, i + 13, j + 7, k + 8, air, 0);
		b(w, i + 13, j + 7, k + 9, air, 0);
		b(w, i + 13, j + 7, k + 10, air, 0);
		b(w, i + 13, j + 7, k + 11, air, 0);
		b(w, i + 13, j + 7, k + 12, stone, 0);
		b(w, i + 13, j + 7, k + 13, stone, 0);
		b(w, i + 13, j + 7, k + 14, stone, 0);
		b(w, i + 13, j + 7, k + 15, air, 0);
		b(w, i + 13, j + 8, k, air, 0);
		b(w, i + 13, j + 8, k + 1, air, 0);
		b(w, i + 13, j + 8, k + 2, air, 0);
		b(w, i + 13, j + 8, k + 3, air, 0);
		b(w, i + 13, j + 8, k + 4, air, 0);
		b(w, i + 13, j + 8, k + 5, air, 0);
		b(w, i + 13, j + 8, k + 6, air, 0);
		b(w, i + 13, j + 8, k + 7, air, 0);
		b(w, i + 13, j + 8, k + 8, air, 0);
		b(w, i + 13, j + 8, k + 9, air, 0);
		b(w, i + 13, j + 8, k + 10, air, 0);
		b(w, i + 13, j + 8, k + 11, air, 0);
		b(w, i + 13, j + 8, k + 12, stone, 0);
		b(w, i + 13, j + 8, k + 13, stone, 0);
		b(w, i + 13, j + 8, k + 14, stone, 0);
		b(w, i + 13, j + 8, k + 15, air, 0);
		b(w, i + 13, j + 9, k, air, 0);
		b(w, i + 13, j + 9, k + 1, air, 0);
		b(w, i + 13, j + 9, k + 2, air, 0);
		b(w, i + 13, j + 9, k + 3, air, 0);
		b(w, i + 13, j + 9, k + 4, air, 0);
		b(w, i + 13, j + 9, k + 5, air, 0);
		b(w, i + 13, j + 9, k + 6, air, 0);
		b(w, i + 13, j + 9, k + 7, air, 0);
		b(w, i + 13, j + 9, k + 8, air, 0);
		b(w, i + 13, j + 9, k + 9, air, 0);
		b(w, i + 13, j + 9, k + 10, air, 0);
		b(w, i + 13, j + 9, k + 11, air, 0);
		b(w, i + 13, j + 9, k + 12, stone, 0);
		b(w, i + 13, j + 9, k + 13, air, 0);
		b(w, i + 13, j + 9, k + 14, air, 0);
		b(w, i + 13, j + 9, k + 15, air, 0);
		b(w, i + 13, j + 10, k, air, 0);
		b(w, i + 13, j + 10, k + 1, air, 0);
		b(w, i + 13, j + 10, k + 2, air, 0);
		b(w, i + 13, j + 10, k + 3, air, 0);
		b(w, i + 13, j + 10, k + 4, air, 0);
		b(w, i + 13, j + 10, k + 5, air, 0);
		b(w, i + 13, j + 10, k + 6, air, 0);
		b(w, i + 13, j + 10, k + 7, air, 0);
		b(w, i + 13, j + 10, k + 8, air, 0);
		b(w, i + 13, j + 10, k + 9, air, 0);
		b(w, i + 13, j + 10, k + 10, air, 0);
		b(w, i + 13, j + 10, k + 11, air, 0);
		b(w, i + 13, j + 10, k + 12, air, 0);
		b(w, i + 13, j + 10, k + 13, air, 0);
		b(w, i + 13, j + 10, k + 14, air, 0);
		b(w, i + 13, j + 10, k + 15, air, 0);
		b(w, i + 13, j + 11, k, air, 0);
		b(w, i + 13, j + 11, k + 1, air, 0);
		b(w, i + 13, j + 11, k + 2, air, 0);
		b(w, i + 13, j + 11, k + 3, air, 0);
		b(w, i + 13, j + 11, k + 4, air, 0);
		b(w, i + 13, j + 11, k + 5, air, 0);
		b(w, i + 13, j + 11, k + 6, air, 0);
		b(w, i + 13, j + 11, k + 7, air, 0);
		b(w, i + 13, j + 11, k + 8, air, 0);
		b(w, i + 13, j + 11, k + 9, air, 0);
		b(w, i + 13, j + 11, k + 10, air, 0);
		b(w, i + 13, j + 11, k + 11, air, 0);
		b(w, i + 13, j + 11, k + 12, air, 0);
		b(w, i + 13, j + 11, k + 13, air, 0);
		b(w, i + 13, j + 11, k + 14, air, 0);
		b(w, i + 13, j + 11, k + 15, air, 0);
		b(w, i + 13, j + 12, k, air, 0);
		b(w, i + 13, j + 12, k + 1, air, 0);
		b(w, i + 13, j + 12, k + 2, air, 0);
		b(w, i + 13, j + 12, k + 3, air, 0);
		b(w, i + 13, j + 12, k + 4, air, 0);
		b(w, i + 13, j + 12, k + 5, air, 0);
		b(w, i + 13, j + 12, k + 6, air, 0);
		b(w, i + 13, j + 12, k + 7, air, 0);
		b(w, i + 13, j + 12, k + 8, air, 0);
		b(w, i + 13, j + 12, k + 9, stone, 0);
		b(w, i + 13, j + 12, k + 10, air, 0);
		b(w, i + 13, j + 12, k + 11, air, 0);
		b(w, i + 13, j + 12, k + 12, air, 0);
		b(w, i + 13, j + 12, k + 13, air, 0);
		b(w, i + 13, j + 12, k + 14, air, 0);
		b(w, i + 13, j + 12, k + 15, air, 0);
		b(w, i + 13, j + 13, k, air, 0);
		b(w, i + 13, j + 13, k + 1, air, 0);
		b(w, i + 13, j + 13, k + 2, air, 0);
		b(w, i + 13, j + 13, k + 3, air, 0);
		b(w, i + 13, j + 13, k + 4, air, 0);
		b(w, i + 13, j + 13, k + 5, air, 0);
		b(w, i + 13, j + 13, k + 6, air, 0);
		b(w, i + 13, j + 13, k + 7, air, 0);
		b(w, i + 13, j + 13, k + 8, air, 0);
		b(w, i + 13, j + 13, k + 9, stone, 0);
		b(w, i + 13, j + 13, k + 10, air, 0);
		b(w, i + 13, j + 13, k + 11, air, 0);
		b(w, i + 13, j + 13, k + 12, air, 0);
		b(w, i + 13, j + 13, k + 13, air, 0);
		b(w, i + 13, j + 13, k + 14, air, 0);
		b(w, i + 13, j + 13, k + 15, air, 0);
		b(w, i + 13, j + 14, k, air, 0);
		b(w, i + 13, j + 14, k + 1, air, 0);
		b(w, i + 13, j + 14, k + 2, air, 0);
		b(w, i + 13, j + 14, k + 3, air, 0);
		b(w, i + 13, j + 14, k + 4, air, 0);
		b(w, i + 13, j + 14, k + 5, air, 0);
		b(w, i + 13, j + 14, k + 6, air, 0);
		b(w, i + 13, j + 14, k + 7, air, 0);
		b(w, i + 13, j + 14, k + 8, air, 0);
		b(w, i + 13, j + 14, k + 9, air, 0);
		b(w, i + 13, j + 14, k + 10, air, 0);
		b(w, i + 13, j + 14, k + 11, air, 0);
		b(w, i + 13, j + 14, k + 12, air, 0);
		b(w, i + 13, j + 14, k + 13, air, 0);
		b(w, i + 13, j + 14, k + 14, air, 0);
		b(w, i + 13, j + 14, k + 15, air, 0);
		b(w, i + 13, j + 15, k, air, 0);
		b(w, i + 13, j + 15, k + 1, air, 0);
		b(w, i + 13, j + 15, k + 2, air, 0);
		b(w, i + 13, j + 15, k + 3, air, 0);
		b(w, i + 13, j + 15, k + 4, air, 0);
		b(w, i + 13, j + 15, k + 5, air, 0);
		b(w, i + 13, j + 15, k + 6, air, 0);
		b(w, i + 13, j + 15, k + 7, air, 0);
		b(w, i + 13, j + 15, k + 8, air, 0);
		b(w, i + 13, j + 15, k + 9, air, 0);
		b(w, i + 13, j + 15, k + 10, air, 0);
		b(w, i + 13, j + 15, k + 11, air, 0);
		b(w, i + 13, j + 15, k + 12, air, 0);
		b(w, i + 13, j + 15, k + 13, air, 0);
		b(w, i + 13, j + 15, k + 14, air, 0);
		b(w, i + 13, j + 15, k + 15, air, 0);
		b(w, i + 13, j + 16, k, air, 0);
		b(w, i + 13, j + 16, k + 1, air, 0);
		b(w, i + 13, j + 16, k + 2, air, 0);
		b(w, i + 13, j + 16, k + 3, air, 0);
		b(w, i + 13, j + 16, k + 4, air, 0);
		b(w, i + 13, j + 16, k + 5, air, 0);
		b(w, i + 13, j + 16, k + 6, air, 0);
		b(w, i + 13, j + 16, k + 7, air, 0);
		b(w, i + 13, j + 16, k + 8, air, 0);
		b(w, i + 13, j + 16, k + 9, air, 0);
		b(w, i + 13, j + 16, k + 10, air, 0);
		b(w, i + 13, j + 16, k + 11, air, 0);
		b(w, i + 13, j + 16, k + 12, air, 0);
		b(w, i + 13, j + 16, k + 13, air, 0);
		b(w, i + 13, j + 16, k + 14, air, 0);
		b(w, i + 13, j + 16, k + 15, air, 0);
		b(w, i + 14, j, k, air, 0);
		b(w, i + 14, j, k + 1, air, 0);
		b(w, i + 14, j, k + 2, air, 0);
		b(w, i + 14, j, k + 3, air, 0);
		b(w, i + 14, j, k + 4, air, 0);
		b(w, i + 14, j, k + 5, air, 0);
		b(w, i + 14, j, k + 6, air, 0);
		b(w, i + 14, j, k + 7, air, 0);
		b(w, i + 14, j, k + 8, air, 0);
		b(w, i + 14, j, k + 9, air, 0);
		b(w, i + 14, j, k + 10, air, 0);
		b(w, i + 14, j, k + 11, air, 0);
		b(w, i + 14, j, k + 12, air, 0);
		b(w, i + 14, j, k + 13, air, 0);
		b(w, i + 14, j, k + 14, air, 0);
		b(w, i + 14, j, k + 15, air, 0);
		b(w, i + 14, j + 1, k, air, 0);
		b(w, i + 14, j + 1, k + 1, air, 0);
		b(w, i + 14, j + 1, k + 2, air, 0);
		b(w, i + 14, j + 1, k + 3, air, 0);
		b(w, i + 14, j + 1, k + 4, air, 0);
		b(w, i + 14, j + 1, k + 5, air, 0);
		b(w, i + 14, j + 1, k + 6, air, 0);
		b(w, i + 14, j + 1, k + 7, air, 0);
		b(w, i + 14, j + 1, k + 8, air, 0);
		b(w, i + 14, j + 1, k + 9, air, 0);
		b(w, i + 14, j + 1, k + 10, air, 0);
		b(w, i + 14, j + 1, k + 11, air, 0);
		b(w, i + 14, j + 1, k + 12, air, 0);
		b(w, i + 14, j + 1, k + 13, air, 0);
		b(w, i + 14, j + 1, k + 14, air, 0);
		b(w, i + 14, j + 1, k + 15, air, 0);
		b(w, i + 14, j + 2, k, air, 0);
		b(w, i + 14, j + 2, k + 1, air, 0);
		b(w, i + 14, j + 2, k + 2, air, 0);
		b(w, i + 14, j + 2, k + 3, air, 0);
		b(w, i + 14, j + 2, k + 4, air, 0);
		b(w, i + 14, j + 2, k + 5, air, 0);
		b(w, i + 14, j + 2, k + 6, air, 0);
		b(w, i + 14, j + 2, k + 7, air, 0);
		b(w, i + 14, j + 2, k + 8, air, 0);
		b(w, i + 14, j + 2, k + 9, air, 0);
		b(w, i + 14, j + 2, k + 10, air, 0);
		b(w, i + 14, j + 2, k + 11, air, 0);
		b(w, i + 14, j + 2, k + 12, air, 0);
		b(w, i + 14, j + 2, k + 13, air, 0);
		b(w, i + 14, j + 2, k + 14, air, 0);
		b(w, i + 14, j + 2, k + 15, air, 0);
		b(w, i + 14, j + 3, k, air, 0);
		b(w, i + 14, j + 3, k + 1, air, 0);
		b(w, i + 14, j + 3, k + 2, air, 0);
		b(w, i + 14, j + 3, k + 3, air, 0);
		b(w, i + 14, j + 3, k + 4, air, 0);
		b(w, i + 14, j + 3, k + 5, air, 0);
		b(w, i + 14, j + 3, k + 6, air, 0);
		b(w, i + 14, j + 3, k + 7, stone, 0);
		b(w, i + 14, j + 3, k + 8, stone, 0);
		b(w, i + 14, j + 3, k + 9, stone, 0);
		b(w, i + 14, j + 3, k + 10, stone, 0);
		b(w, i + 14, j + 3, k + 11, air, 0);
		b(w, i + 14, j + 3, k + 12, air, 0);
		b(w, i + 14, j + 3, k + 13, air, 0);
		b(w, i + 14, j + 3, k + 14, air, 0);
		b(w, i + 14, j + 3, k + 15, air, 0);
		b(w, i + 14, j + 4, k, air, 0);
		b(w, i + 14, j + 4, k + 1, air, 0);
		b(w, i + 14, j + 4, k + 2, air, 0);
		b(w, i + 14, j + 4, k + 3, air, 0);
		b(w, i + 14, j + 4, k + 4, air, 0);
		b(w, i + 14, j + 4, k + 5, air, 0);
		b(w, i + 14, j + 4, k + 6, air, 0);
		b(w, i + 14, j + 4, k + 7, air, 0);
		b(w, i + 14, j + 4, k + 8, air, 0);
		b(w, i + 14, j + 4, k + 9, stone, 0);
		b(w, i + 14, j + 4, k + 10, air, 0);
		b(w, i + 14, j + 4, k + 11, air, 0);
		b(w, i + 14, j + 4, k + 12, air, 0);
		b(w, i + 14, j + 4, k + 13, air, 0);
		b(w, i + 14, j + 4, k + 14, air, 0);
		b(w, i + 14, j + 4, k + 15, air, 0);
		b(w, i + 14, j + 5, k, air, 0);
		b(w, i + 14, j + 5, k + 1, air, 0);
		b(w, i + 14, j + 5, k + 2, air, 0);
		b(w, i + 14, j + 5, k + 3, air, 0);
		b(w, i + 14, j + 5, k + 4, air, 0);
		b(w, i + 14, j + 5, k + 5, air, 0);
		b(w, i + 14, j + 5, k + 6, air, 0);
		b(w, i + 14, j + 5, k + 7, air, 0);
		b(w, i + 14, j + 5, k + 8, air, 0);
		b(w, i + 14, j + 5, k + 9, air, 0);
		b(w, i + 14, j + 5, k + 10, air, 0);
		b(w, i + 14, j + 5, k + 11, air, 0);
		b(w, i + 14, j + 5, k + 12, air, 0);
		b(w, i + 14, j + 5, k + 13, air, 0);
		b(w, i + 14, j + 5, k + 14, air, 0);
		b(w, i + 14, j + 5, k + 15, air, 0);
		b(w, i + 14, j + 6, k, air, 0);
		b(w, i + 14, j + 6, k + 1, air, 0);
		b(w, i + 14, j + 6, k + 2, air, 0);
		b(w, i + 14, j + 6, k + 3, air, 0);
		b(w, i + 14, j + 6, k + 4, air, 0);
		b(w, i + 14, j + 6, k + 5, air, 0);
		b(w, i + 14, j + 6, k + 6, air, 0);
		b(w, i + 14, j + 6, k + 7, air, 0);
		b(w, i + 14, j + 6, k + 8, air, 0);
		b(w, i + 14, j + 6, k + 9, air, 0);
		b(w, i + 14, j + 6, k + 10, air, 0);
		b(w, i + 14, j + 6, k + 11, air, 0);
		b(w, i + 14, j + 6, k + 12, air, 0);
		b(w, i + 14, j + 6, k + 13, air, 0);
		b(w, i + 14, j + 6, k + 14, air, 0);
		b(w, i + 14, j + 6, k + 15, air, 0);
		b(w, i + 14, j + 7, k, air, 0);
		b(w, i + 14, j + 7, k + 1, air, 0);
		b(w, i + 14, j + 7, k + 2, air, 0);
		b(w, i + 14, j + 7, k + 3, air, 0);
		b(w, i + 14, j + 7, k + 4, air, 0);
		b(w, i + 14, j + 7, k + 5, air, 0);
		b(w, i + 14, j + 7, k + 6, air, 0);
		b(w, i + 14, j + 7, k + 7, air, 0);
		b(w, i + 14, j + 7, k + 8, air, 0);
		b(w, i + 14, j + 7, k + 9, air, 0);
		b(w, i + 14, j + 7, k + 10, air, 0);
		b(w, i + 14, j + 7, k + 11, air, 0);
		b(w, i + 14, j + 7, k + 12, air, 0);
		b(w, i + 14, j + 7, k + 13, air, 0);
		b(w, i + 14, j + 7, k + 14, air, 0);
		b(w, i + 14, j + 7, k + 15, air, 0);
		b(w, i + 14, j + 8, k, air, 0);
		b(w, i + 14, j + 8, k + 1, air, 0);
		b(w, i + 14, j + 8, k + 2, air, 0);
		b(w, i + 14, j + 8, k + 3, air, 0);
		b(w, i + 14, j + 8, k + 4, air, 0);
		b(w, i + 14, j + 8, k + 5, air, 0);
		b(w, i + 14, j + 8, k + 6, air, 0);
		b(w, i + 14, j + 8, k + 7, air, 0);
		b(w, i + 14, j + 8, k + 8, air, 0);
		b(w, i + 14, j + 8, k + 9, air, 0);
		b(w, i + 14, j + 8, k + 10, air, 0);
		b(w, i + 14, j + 8, k + 11, air, 0);
		b(w, i + 14, j + 8, k + 12, air, 0);
		b(w, i + 14, j + 8, k + 13, air, 0);
		b(w, i + 14, j + 8, k + 14, air, 0);
		b(w, i + 14, j + 8, k + 15, air, 0);
		b(w, i + 14, j + 9, k, air, 0);
		b(w, i + 14, j + 9, k + 1, air, 0);
		b(w, i + 14, j + 9, k + 2, air, 0);
		b(w, i + 14, j + 9, k + 3, air, 0);
		b(w, i + 14, j + 9, k + 4, air, 0);
		b(w, i + 14, j + 9, k + 5, air, 0);
		b(w, i + 14, j + 9, k + 6, air, 0);
		b(w, i + 14, j + 9, k + 7, air, 0);
		b(w, i + 14, j + 9, k + 8, air, 0);
		b(w, i + 14, j + 9, k + 9, air, 0);
		b(w, i + 14, j + 9, k + 10, air, 0);
		b(w, i + 14, j + 9, k + 11, air, 0);
		b(w, i + 14, j + 9, k + 12, stone, 0);
		b(w, i + 14, j + 9, k + 13, air, 0);
		b(w, i + 14, j + 9, k + 14, air, 0);
		b(w, i + 14, j + 9, k + 15, air, 0);
		b(w, i + 14, j + 10, k, air, 0);
		b(w, i + 14, j + 10, k + 1, air, 0);
		b(w, i + 14, j + 10, k + 2, air, 0);
		b(w, i + 14, j + 10, k + 3, air, 0);
		b(w, i + 14, j + 10, k + 4, air, 0);
		b(w, i + 14, j + 10, k + 5, air, 0);
		b(w, i + 14, j + 10, k + 6, air, 0);
		b(w, i + 14, j + 10, k + 7, air, 0);
		b(w, i + 14, j + 10, k + 8, air, 0);
		b(w, i + 14, j + 10, k + 9, air, 0);
		b(w, i + 14, j + 10, k + 10, air, 0);
		b(w, i + 14, j + 10, k + 11, air, 0);
		b(w, i + 14, j + 10, k + 12, air, 0);
		b(w, i + 14, j + 10, k + 13, air, 0);
		b(w, i + 14, j + 10, k + 14, air, 0);
		b(w, i + 14, j + 10, k + 15, air, 0);
		b(w, i + 14, j + 11, k, air, 0);
		b(w, i + 14, j + 11, k + 1, air, 0);
		b(w, i + 14, j + 11, k + 2, air, 0);
		b(w, i + 14, j + 11, k + 3, air, 0);
		b(w, i + 14, j + 11, k + 4, air, 0);
		b(w, i + 14, j + 11, k + 5, air, 0);
		b(w, i + 14, j + 11, k + 6, air, 0);
		b(w, i + 14, j + 11, k + 7, air, 0);
		b(w, i + 14, j + 11, k + 8, air, 0);
		b(w, i + 14, j + 11, k + 9, air, 0);
		b(w, i + 14, j + 11, k + 10, air, 0);
		b(w, i + 14, j + 11, k + 11, air, 0);
		b(w, i + 14, j + 11, k + 12, air, 0);
		b(w, i + 14, j + 11, k + 13, air, 0);
		b(w, i + 14, j + 11, k + 14, air, 0);
		b(w, i + 14, j + 11, k + 15, air, 0);
		b(w, i + 14, j + 12, k, air, 0);
		b(w, i + 14, j + 12, k + 1, air, 0);
		b(w, i + 14, j + 12, k + 2, air, 0);
		b(w, i + 14, j + 12, k + 3, air, 0);
		b(w, i + 14, j + 12, k + 4, air, 0);
		b(w, i + 14, j + 12, k + 5, air, 0);
		b(w, i + 14, j + 12, k + 6, air, 0);
		b(w, i + 14, j + 12, k + 7, air, 0);
		generate_8(w, i, j, k);
	}

	public static void generate_8(World w, int i, int j, int k)
	{
		b(w, i + 14, j + 12, k + 8, air, 0);
		b(w, i + 14, j + 12, k + 9, air, 0);
		b(w, i + 14, j + 12, k + 10, air, 0);
		b(w, i + 14, j + 12, k + 11, air, 0);
		b(w, i + 14, j + 12, k + 12, air, 0);
		b(w, i + 14, j + 12, k + 13, air, 0);
		b(w, i + 14, j + 12, k + 14, air, 0);
		b(w, i + 14, j + 12, k + 15, air, 0);
		b(w, i + 14, j + 13, k, air, 0);
		b(w, i + 14, j + 13, k + 1, air, 0);
		b(w, i + 14, j + 13, k + 2, air, 0);
		b(w, i + 14, j + 13, k + 3, air, 0);
		b(w, i + 14, j + 13, k + 4, air, 0);
		b(w, i + 14, j + 13, k + 5, air, 0);
		b(w, i + 14, j + 13, k + 6, air, 0);
		b(w, i + 14, j + 13, k + 7, air, 0);
		b(w, i + 14, j + 13, k + 8, air, 0);
		b(w, i + 14, j + 13, k + 9, stone, 0);
		b(w, i + 14, j + 13, k + 10, air, 0);
		b(w, i + 14, j + 13, k + 11, air, 0);
		b(w, i + 14, j + 13, k + 12, air, 0);
		b(w, i + 14, j + 13, k + 13, air, 0);
		b(w, i + 14, j + 13, k + 14, air, 0);
		b(w, i + 14, j + 13, k + 15, air, 0);
		b(w, i + 14, j + 14, k, air, 0);
		b(w, i + 14, j + 14, k + 1, air, 0);
		b(w, i + 14, j + 14, k + 2, air, 0);
		b(w, i + 14, j + 14, k + 3, air, 0);
		b(w, i + 14, j + 14, k + 4, air, 0);
		b(w, i + 14, j + 14, k + 5, air, 0);
		b(w, i + 14, j + 14, k + 6, air, 0);
		b(w, i + 14, j + 14, k + 7, air, 0);
		b(w, i + 14, j + 14, k + 8, air, 0);
		b(w, i + 14, j + 14, k + 9, air, 0);
		b(w, i + 14, j + 14, k + 10, air, 0);
		b(w, i + 14, j + 14, k + 11, air, 0);
		b(w, i + 14, j + 14, k + 12, air, 0);
		b(w, i + 14, j + 14, k + 13, air, 0);
		b(w, i + 14, j + 14, k + 14, air, 0);
		b(w, i + 14, j + 14, k + 15, air, 0);
		b(w, i + 14, j + 15, k, air, 0);
		b(w, i + 14, j + 15, k + 1, air, 0);
		b(w, i + 14, j + 15, k + 2, air, 0);
		b(w, i + 14, j + 15, k + 3, air, 0);
		b(w, i + 14, j + 15, k + 4, air, 0);
		b(w, i + 14, j + 15, k + 5, air, 0);
		b(w, i + 14, j + 15, k + 6, air, 0);
		b(w, i + 14, j + 15, k + 7, air, 0);
		b(w, i + 14, j + 15, k + 8, air, 0);
		b(w, i + 14, j + 15, k + 9, air, 0);
		b(w, i + 14, j + 15, k + 10, air, 0);
		b(w, i + 14, j + 15, k + 11, air, 0);
		b(w, i + 14, j + 15, k + 12, air, 0);
		b(w, i + 14, j + 15, k + 13, air, 0);
		b(w, i + 14, j + 15, k + 14, air, 0);
		b(w, i + 14, j + 15, k + 15, air, 0);
		b(w, i + 14, j + 16, k, air, 0);
		b(w, i + 14, j + 16, k + 1, air, 0);
		b(w, i + 14, j + 16, k + 2, air, 0);
		b(w, i + 14, j + 16, k + 3, air, 0);
		b(w, i + 14, j + 16, k + 4, air, 0);
		b(w, i + 14, j + 16, k + 5, air, 0);
		b(w, i + 14, j + 16, k + 6, air, 0);
		b(w, i + 14, j + 16, k + 7, air, 0);
		b(w, i + 14, j + 16, k + 8, air, 0);
		b(w, i + 14, j + 16, k + 9, air, 0);
		b(w, i + 14, j + 16, k + 10, air, 0);
		b(w, i + 14, j + 16, k + 11, air, 0);
		b(w, i + 14, j + 16, k + 12, air, 0);
		b(w, i + 14, j + 16, k + 13, air, 0);
		b(w, i + 14, j + 16, k + 14, air, 0);
		b(w, i + 14, j + 16, k + 15, air, 0);
	}

}
//@formatter:on
